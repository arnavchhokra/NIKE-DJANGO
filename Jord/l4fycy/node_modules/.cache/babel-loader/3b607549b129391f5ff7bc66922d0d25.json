{"ast":null,"code":"import _classCallCheck from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { AfterimageShader } from '../shaders/AfterimageShader.js';\n\nvar AfterimagePass = /*#__PURE__*/function (_Pass) {\n  _inherits(AfterimagePass, _Pass);\n\n  var _super = _createSuper(AfterimagePass);\n\n  function AfterimagePass() {\n    var _this;\n\n    var damp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.96;\n    var shader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AfterimageShader;\n\n    _classCallCheck(this, AfterimagePass);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"shader\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uniforms\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"textureComp\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"textureOld\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"shaderMaterial\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"compFsQuad\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"copyFsQuad\", void 0);\n\n    _this.shader = shader;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.uniforms['damp'].value = damp;\n    _this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    _this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    _this.shaderMaterial = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: _this.shader.vertexShader,\n      fragmentShader: _this.shader.fragmentShader\n    });\n    _this.compFsQuad = new FullScreenQuad(_this.shaderMaterial);\n    var material = new MeshBasicMaterial();\n    _this.copyFsQuad = new FullScreenQuad(material);\n    return _this;\n  }\n\n  _createClass(AfterimagePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      this.uniforms['tOld'].value = this.textureOld.texture;\n      this.uniforms['tNew'].value = readBuffer.texture;\n      renderer.setRenderTarget(this.textureComp);\n      this.compFsQuad.render(renderer);\n      this.copyFsQuad.material.map = this.textureComp.texture;\n\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.copyFsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.copyFsQuad.render(renderer);\n      } // Swap buffers.\n\n\n      var temp = this.textureOld;\n      this.textureOld = this.textureComp;\n      this.textureComp = temp; // Now textureOld contains the latest image, ready for the next frame.\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      this.textureComp.setSize(width, height);\n      this.textureOld.setSize(width, height);\n    }\n  }]);\n\n  return AfterimagePass;\n}(Pass);\n\nexport { AfterimagePass };","map":{"version":3,"names":["_defineProperty","UniformsUtils","WebGLRenderTarget","LinearFilter","NearestFilter","RGBAFormat","ShaderMaterial","MeshBasicMaterial","Pass","FullScreenQuad","AfterimageShader","AfterimagePass","damp","shader","uniforms","clone","value","textureComp","window","innerWidth","innerHeight","minFilter","magFilter","format","textureOld","shaderMaterial","vertexShader","fragmentShader","compFsQuad","material","copyFsQuad","renderer","writeBuffer","readBuffer","texture","setRenderTarget","render","map","renderToScreen","clear","temp","width","height","setSize"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/postprocessing/AfterimagePass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\r\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from 'three';\r\nimport { Pass, FullScreenQuad } from './Pass.js';\r\nimport { AfterimageShader } from '../shaders/AfterimageShader.js';\r\n\r\nclass AfterimagePass extends Pass {\r\n  constructor(damp = 0.96, shader = AfterimageShader) {\r\n    super();\r\n\r\n    _defineProperty(this, \"shader\", void 0);\r\n\r\n    _defineProperty(this, \"uniforms\", void 0);\r\n\r\n    _defineProperty(this, \"textureComp\", void 0);\r\n\r\n    _defineProperty(this, \"textureOld\", void 0);\r\n\r\n    _defineProperty(this, \"shaderMaterial\", void 0);\r\n\r\n    _defineProperty(this, \"compFsQuad\", void 0);\r\n\r\n    _defineProperty(this, \"copyFsQuad\", void 0);\r\n\r\n    this.shader = shader;\r\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\r\n    this.uniforms['damp'].value = damp;\r\n    this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: NearestFilter,\r\n      format: RGBAFormat\r\n    });\r\n    this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: NearestFilter,\r\n      format: RGBAFormat\r\n    });\r\n    this.shaderMaterial = new ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: this.shader.vertexShader,\r\n      fragmentShader: this.shader.fragmentShader\r\n    });\r\n    this.compFsQuad = new FullScreenQuad(this.shaderMaterial);\r\n    let material = new MeshBasicMaterial();\r\n    this.copyFsQuad = new FullScreenQuad(material);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer) {\r\n    this.uniforms['tOld'].value = this.textureOld.texture;\r\n    this.uniforms['tNew'].value = readBuffer.texture;\r\n    renderer.setRenderTarget(this.textureComp);\r\n    this.compFsQuad.render(renderer);\r\n    this.copyFsQuad.material.map = this.textureComp.texture;\r\n\r\n    if (this.renderToScreen) {\r\n      renderer.setRenderTarget(null);\r\n      this.copyFsQuad.render(renderer);\r\n    } else {\r\n      renderer.setRenderTarget(writeBuffer);\r\n      if (this.clear) renderer.clear();\r\n      this.copyFsQuad.render(renderer);\r\n    } // Swap buffers.\r\n\r\n\r\n    let temp = this.textureOld;\r\n    this.textureOld = this.textureComp;\r\n    this.textureComp = temp; // Now textureOld contains the latest image, ready for the next frame.\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.textureComp.setSize(width, height);\r\n    this.textureOld.setSize(width, height);\r\n  }\r\n\r\n}\r\n\r\nexport { AfterimagePass };\r\n"],"mappings":";;;;;AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,SAASC,aAAT,EAAwBC,iBAAxB,EAA2CC,YAA3C,EAAyDC,aAAzD,EAAwEC,UAAxE,EAAoFC,cAApF,EAAoGC,iBAApG,QAA6H,OAA7H;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,WAArC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;;IAEMC,c;;;;;EACJ,0BAAoD;IAAA;;IAAA,IAAxCC,IAAwC,uEAAjC,IAAiC;IAAA,IAA3BC,MAA2B,uEAAlBH,gBAAkB;;IAAA;;IAClD;;IAEAV,eAAe,gCAAO,QAAP,EAAiB,KAAK,CAAtB,CAAf;;IAEAA,eAAe,gCAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;IAEAA,eAAe,gCAAO,aAAP,EAAsB,KAAK,CAA3B,CAAf;;IAEAA,eAAe,gCAAO,YAAP,EAAqB,KAAK,CAA1B,CAAf;;IAEAA,eAAe,gCAAO,gBAAP,EAAyB,KAAK,CAA9B,CAAf;;IAEAA,eAAe,gCAAO,YAAP,EAAqB,KAAK,CAA1B,CAAf;;IAEAA,eAAe,gCAAO,YAAP,EAAqB,KAAK,CAA1B,CAAf;;IAEA,MAAKa,MAAL,GAAcA,MAAd;IACA,MAAKC,QAAL,GAAgBb,aAAa,CAACc,KAAd,CAAoBF,MAAM,CAACC,QAA3B,CAAhB;IACA,MAAKA,QAAL,CAAc,MAAd,EAAsBE,KAAtB,GAA8BJ,IAA9B;IACA,MAAKK,WAAL,GAAmB,IAAIf,iBAAJ,CAAsBgB,MAAM,CAACC,UAA7B,EAAyCD,MAAM,CAACE,WAAhD,EAA6D;MAC9EC,SAAS,EAAElB,YADmE;MAE9EmB,SAAS,EAAElB,aAFmE;MAG9EmB,MAAM,EAAElB;IAHsE,CAA7D,CAAnB;IAKA,MAAKmB,UAAL,GAAkB,IAAItB,iBAAJ,CAAsBgB,MAAM,CAACC,UAA7B,EAAyCD,MAAM,CAACE,WAAhD,EAA6D;MAC7EC,SAAS,EAAElB,YADkE;MAE7EmB,SAAS,EAAElB,aAFkE;MAG7EmB,MAAM,EAAElB;IAHqE,CAA7D,CAAlB;IAKA,MAAKoB,cAAL,GAAsB,IAAInB,cAAJ,CAAmB;MACvCQ,QAAQ,EAAE,MAAKA,QADwB;MAEvCY,YAAY,EAAE,MAAKb,MAAL,CAAYa,YAFa;MAGvCC,cAAc,EAAE,MAAKd,MAAL,CAAYc;IAHW,CAAnB,CAAtB;IAKA,MAAKC,UAAL,GAAkB,IAAInB,cAAJ,CAAmB,MAAKgB,cAAxB,CAAlB;IACA,IAAII,QAAQ,GAAG,IAAItB,iBAAJ,EAAf;IACA,MAAKuB,UAAL,GAAkB,IAAIrB,cAAJ,CAAmBoB,QAAnB,CAAlB;IArCkD;EAsCnD;;;;WAED,gBAAOE,QAAP,EAAiBC,WAAjB,EAA8BC,UAA9B,EAA0C;MACxC,KAAKnB,QAAL,CAAc,MAAd,EAAsBE,KAAtB,GAA8B,KAAKQ,UAAL,CAAgBU,OAA9C;MACA,KAAKpB,QAAL,CAAc,MAAd,EAAsBE,KAAtB,GAA8BiB,UAAU,CAACC,OAAzC;MACAH,QAAQ,CAACI,eAAT,CAAyB,KAAKlB,WAA9B;MACA,KAAKW,UAAL,CAAgBQ,MAAhB,CAAuBL,QAAvB;MACA,KAAKD,UAAL,CAAgBD,QAAhB,CAAyBQ,GAAzB,GAA+B,KAAKpB,WAAL,CAAiBiB,OAAhD;;MAEA,IAAI,KAAKI,cAAT,EAAyB;QACvBP,QAAQ,CAACI,eAAT,CAAyB,IAAzB;QACA,KAAKL,UAAL,CAAgBM,MAAhB,CAAuBL,QAAvB;MACD,CAHD,MAGO;QACLA,QAAQ,CAACI,eAAT,CAAyBH,WAAzB;QACA,IAAI,KAAKO,KAAT,EAAgBR,QAAQ,CAACQ,KAAT;QAChB,KAAKT,UAAL,CAAgBM,MAAhB,CAAuBL,QAAvB;MACD,CAduC,CActC;;;MAGF,IAAIS,IAAI,GAAG,KAAKhB,UAAhB;MACA,KAAKA,UAAL,GAAkB,KAAKP,WAAvB;MACA,KAAKA,WAAL,GAAmBuB,IAAnB,CAnBwC,CAmBf;IAC1B;;;WAED,iBAAQC,KAAR,EAAeC,MAAf,EAAuB;MACrB,KAAKzB,WAAL,CAAiB0B,OAAjB,CAAyBF,KAAzB,EAAgCC,MAAhC;MACA,KAAKlB,UAAL,CAAgBmB,OAAhB,CAAwBF,KAAxB,EAA+BC,MAA/B;IACD;;;;EAlE0BlC,I;;AAsE7B,SAASG,cAAT"},"metadata":{},"sourceType":"module"}