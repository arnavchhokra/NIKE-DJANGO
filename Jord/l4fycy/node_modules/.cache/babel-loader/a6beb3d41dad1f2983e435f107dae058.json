{"ast":null,"code":"import _classCallCheck from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, CanvasTexture, NearestFilter, FileLoader } from 'three';\n\nvar LottieLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(LottieLoader, _Loader);\n\n  var _super = _createSuper(LottieLoader);\n\n  function LottieLoader() {\n    _classCallCheck(this, LottieLoader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LottieLoader, [{\n    key: \"setQuality\",\n    value: function setQuality(value) {\n      this._quality = value;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var quality = this._quality || 1;\n      var texture = new CanvasTexture();\n      texture.minFilter = NearestFilter;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        var data = JSON.parse(text); // bodymoving uses container.offetWidth and offsetHeight\n        // to define width/height\n\n        var container = document.createElement('div');\n        container.style.width = data.w + 'px';\n        container.style.height = data.h + 'px';\n        document.body.appendChild(container);\n        var animation = bodymovin.loadAnimation({\n          container: container,\n          animType: 'canvas',\n          loop: true,\n          autoplay: true,\n          animationData: data,\n          rendererSettings: {\n            dpr: quality\n          }\n        });\n        texture.animation = animation;\n        texture.image = animation.container;\n        animation.addEventListener('enterFrame', function () {\n          texture.needsUpdate = true;\n        });\n        container.style.display = 'none';\n\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      }, onProgress, onError);\n      return texture;\n    }\n  }]);\n\n  return LottieLoader;\n}(Loader);\n\nexport { LottieLoader };","map":{"version":3,"names":["Loader","CanvasTexture","NearestFilter","FileLoader","LottieLoader","value","_quality","url","onLoad","onProgress","onError","quality","texture","minFilter","loader","manager","setPath","path","setWithCredentials","withCredentials","load","text","data","JSON","parse","container","document","createElement","style","width","w","height","h","body","appendChild","animation","bodymovin","loadAnimation","animType","loop","autoplay","animationData","rendererSettings","dpr","image","addEventListener","needsUpdate","display","undefined"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/three-stdlib/loaders/LottieLoader.js"],"sourcesContent":["import { Loader, CanvasTexture, NearestFilter, FileLoader } from 'three';\n\nclass LottieLoader extends Loader {\n  setQuality(value) {\n    this._quality = value;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const quality = this._quality || 1;\n    const texture = new CanvasTexture();\n    texture.minFilter = NearestFilter;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      const data = JSON.parse(text); // bodymoving uses container.offetWidth and offsetHeight\n      // to define width/height\n\n      const container = document.createElement('div');\n      container.style.width = data.w + 'px';\n      container.style.height = data.h + 'px';\n      document.body.appendChild(container);\n      const animation = bodymovin.loadAnimation({\n        container: container,\n        animType: 'canvas',\n        loop: true,\n        autoplay: true,\n        animationData: data,\n        rendererSettings: {\n          dpr: quality\n        }\n      });\n      texture.animation = animation;\n      texture.image = animation.container;\n      animation.addEventListener('enterFrame', function () {\n        texture.needsUpdate = true;\n      });\n      container.style.display = 'none';\n\n      if (onLoad !== undefined) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n    return texture;\n  }\n\n}\n\nexport { LottieLoader };\n"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,aAAjB,EAAgCC,aAAhC,EAA+CC,UAA/C,QAAiE,OAAjE;;IAEMC,Y;;;;;;;;;;;;;WACJ,oBAAWC,KAAX,EAAkB;MAChB,KAAKC,QAAL,GAAgBD,KAAhB;IACD;;;WAED,cAAKE,GAAL,EAAUC,MAAV,EAAkBC,UAAlB,EAA8BC,OAA9B,EAAuC;MACrC,IAAMC,OAAO,GAAG,KAAKL,QAAL,IAAiB,CAAjC;MACA,IAAMM,OAAO,GAAG,IAAIX,aAAJ,EAAhB;MACAW,OAAO,CAACC,SAAR,GAAoBX,aAApB;MACA,IAAMY,MAAM,GAAG,IAAIX,UAAJ,CAAe,KAAKY,OAApB,CAAf;MACAD,MAAM,CAACE,OAAP,CAAe,KAAKC,IAApB;MACAH,MAAM,CAACI,kBAAP,CAA0B,KAAKC,eAA/B;MACAL,MAAM,CAACM,IAAP,CAAYb,GAAZ,EAAiB,UAAUc,IAAV,EAAgB;QAC/B,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAb,CAD+B,CACA;QAC/B;;QAEA,IAAMI,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;QACAF,SAAS,CAACG,KAAV,CAAgBC,KAAhB,GAAwBP,IAAI,CAACQ,CAAL,GAAS,IAAjC;QACAL,SAAS,CAACG,KAAV,CAAgBG,MAAhB,GAAyBT,IAAI,CAACU,CAAL,GAAS,IAAlC;QACAN,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BT,SAA1B;QACA,IAAMU,SAAS,GAAGC,SAAS,CAACC,aAAV,CAAwB;UACxCZ,SAAS,EAAEA,SAD6B;UAExCa,QAAQ,EAAE,QAF8B;UAGxCC,IAAI,EAAE,IAHkC;UAIxCC,QAAQ,EAAE,IAJ8B;UAKxCC,aAAa,EAAEnB,IALyB;UAMxCoB,gBAAgB,EAAE;YAChBC,GAAG,EAAEhC;UADW;QANsB,CAAxB,CAAlB;QAUAC,OAAO,CAACuB,SAAR,GAAoBA,SAApB;QACAvB,OAAO,CAACgC,KAAR,GAAgBT,SAAS,CAACV,SAA1B;QACAU,SAAS,CAACU,gBAAV,CAA2B,YAA3B,EAAyC,YAAY;UACnDjC,OAAO,CAACkC,WAAR,GAAsB,IAAtB;QACD,CAFD;QAGArB,SAAS,CAACG,KAAV,CAAgBmB,OAAhB,GAA0B,MAA1B;;QAEA,IAAIvC,MAAM,KAAKwC,SAAf,EAA0B;UACxBxC,MAAM,CAACI,OAAD,CAAN;QACD;MACF,CA5BD,EA4BGH,UA5BH,EA4BeC,OA5Bf;MA6BA,OAAOE,OAAP;IACD;;;;EA1CwBZ,M;;AA8C3B,SAASI,YAAT"},"metadata":{},"sourceType":"module"}