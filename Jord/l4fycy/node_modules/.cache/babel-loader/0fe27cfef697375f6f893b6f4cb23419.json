{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nimport { useListItem } from '../useList';\nimport useButton from '../useButton';\n\nfunction tabValueGenerator(otherTabValues) {\n  return otherTabValues.size;\n}\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTab API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab)\n */\n\n\nfunction useTab(parameters) {\n  var valueParam = parameters.value,\n      externalRef = parameters.rootRef,\n      _parameters$disabled = parameters.disabled,\n      disabled = _parameters$disabled === void 0 ? false : _parameters$disabled,\n      idParam = parameters.id;\n  var tabRef = React.useRef(null);\n  var id = useId(idParam);\n\n  var _useTabsContext = useTabsContext(),\n      selectedValue = _useTabsContext.value,\n      selectionFollowsFocus = _useTabsContext.selectionFollowsFocus,\n      getTabPanelId = _useTabsContext.getTabPanelId;\n\n  var tabMetadata = React.useMemo(function () {\n    return {\n      disabled: disabled,\n      ref: tabRef,\n      id: id\n    };\n  }, [disabled, tabRef, id]);\n\n  var _useCompoundItem = useCompoundItem(valueParam != null ? valueParam : tabValueGenerator, tabMetadata),\n      value = _useCompoundItem.id,\n      index = _useCompoundItem.index,\n      totalTabsCount = _useCompoundItem.totalItemCount;\n\n  var _useListItem = useListItem({\n    item: value\n  }),\n      getTabProps = _useListItem.getRootProps,\n      listItemRefHandler = _useListItem.rootRef,\n      highlighted = _useListItem.highlighted,\n      selected = _useListItem.selected;\n\n  var _useButton = useButton({\n    disabled: disabled,\n    focusableWhenDisabled: !selectionFollowsFocus,\n    type: 'button'\n  }),\n      getButtonProps = _useButton.getRootProps,\n      buttonRefHandler = _useButton.rootRef,\n      active = _useButton.active,\n      focusVisible = _useButton.focusVisible,\n      setFocusVisible = _useButton.setFocusVisible;\n\n  var handleRef = useForkRef(tabRef, externalRef, listItemRefHandler, buttonRefHandler);\n  var tabPanelId = value !== undefined ? getTabPanelId(value) : undefined;\n\n  var getRootProps = function getRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var resolvedTabProps = _extends({}, otherHandlers, getTabProps(otherHandlers));\n\n    var resolvedButtonProps = _extends({}, resolvedTabProps, getButtonProps(resolvedTabProps));\n\n    return _extends({}, resolvedButtonProps, {\n      role: 'tab',\n      'aria-controls': tabPanelId,\n      'aria-selected': selected,\n      id: id,\n      ref: handleRef\n    });\n  };\n\n  return {\n    getRootProps: getRootProps,\n    active: active,\n    focusVisible: focusVisible,\n    highlighted: highlighted,\n    index: index,\n    rootRef: handleRef,\n    // the `selected` state isn't set on the server (it relies on effects to be calculated),\n    // so we fall back to checking the `value` prop with the selectedValue from the TabsContext\n    selected: selected || value === selectedValue,\n    setFocusVisible: setFocusVisible,\n    totalTabsCount: totalTabsCount\n  };\n}\n\nexport default useTab;","map":{"version":3,"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","useTabsContext","useCompoundItem","useListItem","useButton","tabValueGenerator","otherTabValues","size","useTab","parameters","valueParam","value","externalRef","rootRef","disabled","idParam","id","tabRef","useRef","selectedValue","selectionFollowsFocus","getTabPanelId","tabMetadata","useMemo","ref","index","totalTabsCount","totalItemCount","item","getTabProps","getRootProps","listItemRefHandler","highlighted","selected","focusableWhenDisabled","type","getButtonProps","buttonRefHandler","active","focusVisible","setFocusVisible","handleRef","tabPanelId","undefined","otherHandlers","resolvedTabProps","resolvedButtonProps","role"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@mui/base/useTab/useTab.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nimport { useListItem } from '../useList';\nimport useButton from '../useButton';\nfunction tabValueGenerator(otherTabValues) {\n  return otherTabValues.size;\n}\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTab API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab)\n */\nfunction useTab(parameters) {\n  const {\n    value: valueParam,\n    rootRef: externalRef,\n    disabled = false,\n    id: idParam\n  } = parameters;\n  const tabRef = React.useRef(null);\n  const id = useId(idParam);\n  const {\n    value: selectedValue,\n    selectionFollowsFocus,\n    getTabPanelId\n  } = useTabsContext();\n  const tabMetadata = React.useMemo(() => ({\n    disabled,\n    ref: tabRef,\n    id\n  }), [disabled, tabRef, id]);\n  const {\n    id: value,\n    index,\n    totalItemCount: totalTabsCount\n  } = useCompoundItem(valueParam != null ? valueParam : tabValueGenerator, tabMetadata);\n  const {\n    getRootProps: getTabProps,\n    rootRef: listItemRefHandler,\n    highlighted,\n    selected\n  } = useListItem({\n    item: value\n  });\n  const {\n    getRootProps: getButtonProps,\n    rootRef: buttonRefHandler,\n    active,\n    focusVisible,\n    setFocusVisible\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: !selectionFollowsFocus,\n    type: 'button'\n  });\n  const handleRef = useForkRef(tabRef, externalRef, listItemRefHandler, buttonRefHandler);\n  const tabPanelId = value !== undefined ? getTabPanelId(value) : undefined;\n  const getRootProps = (otherHandlers = {}) => {\n    const resolvedTabProps = _extends({}, otherHandlers, getTabProps(otherHandlers));\n    const resolvedButtonProps = _extends({}, resolvedTabProps, getButtonProps(resolvedTabProps));\n    return _extends({}, resolvedButtonProps, {\n      role: 'tab',\n      'aria-controls': tabPanelId,\n      'aria-selected': selected,\n      id,\n      ref: handleRef\n    });\n  };\n  return {\n    getRootProps,\n    active,\n    focusVisible,\n    highlighted,\n    index,\n    rootRef: handleRef,\n    // the `selected` state isn't set on the server (it relies on effects to be calculated),\n    // so we fall back to checking the `value` prop with the selectedValue from the TabsContext\n    selected: selected || value === selectedValue,\n    setFocusVisible,\n    totalTabsCount\n  };\n}\nexport default useTab;"],"mappings":"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"},"metadata":{},"sourceType":"module"}