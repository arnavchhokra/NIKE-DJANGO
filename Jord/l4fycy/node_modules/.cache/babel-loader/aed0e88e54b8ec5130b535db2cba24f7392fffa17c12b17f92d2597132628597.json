{"ast":null,"code":"// converts the given BVH raycast intersection to align with the three.js raycast\n// structure (include object, world space distance and point).\nexport function convertRaycastIntersect(hit, object, raycaster) {\n  if (hit === null) {\n    return null;\n  }\n  hit.point.applyMatrix4(object.matrixWorld);\n  hit.distance = hit.point.distanceTo(raycaster.ray.origin);\n  hit.object = object;\n  if (hit.distance < raycaster.near || hit.distance > raycaster.far) {\n    return null;\n  } else {\n    return hit;\n  }\n}","map":{"version":3,"names":["convertRaycastIntersect","hit","object","raycaster","point","applyMatrix4","matrixWorld","distance","distanceTo","ray","origin","near","far"],"sources":["D:/Repos/NIKE-DJANGO/Jord/l4fycy/node_modules/three-mesh-bvh/src/utils/GeometryRayIntersectUtilities.js"],"sourcesContent":["// converts the given BVH raycast intersection to align with the three.js raycast\r\n// structure (include object, world space distance and point).\r\nexport function convertRaycastIntersect( hit, object, raycaster ) {\r\n\r\n\tif ( hit === null ) {\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\thit.point.applyMatrix4( object.matrixWorld );\r\n\thit.distance = hit.point.distanceTo( raycaster.ray.origin );\r\n\thit.object = object;\r\n\r\n\tif ( hit.distance < raycaster.near || hit.distance > raycaster.far ) {\r\n\r\n\t\treturn null;\r\n\r\n\t} else {\r\n\r\n\t\treturn hit;\r\n\r\n\t}\r\n\r\n}\r\n"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,uBAAuBA,CAAEC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAG;EAEjE,IAAKF,GAAG,KAAK,IAAI,EAAG;IAEnB,OAAO,IAAI;EAEZ;EAEAA,GAAG,CAACG,KAAK,CAACC,YAAY,CAAEH,MAAM,CAACI,WAAY,CAAC;EAC5CL,GAAG,CAACM,QAAQ,GAAGN,GAAG,CAACG,KAAK,CAACI,UAAU,CAAEL,SAAS,CAACM,GAAG,CAACC,MAAO,CAAC;EAC3DT,GAAG,CAACC,MAAM,GAAGA,MAAM;EAEnB,IAAKD,GAAG,CAACM,QAAQ,GAAGJ,SAAS,CAACQ,IAAI,IAAIV,GAAG,CAACM,QAAQ,GAAGJ,SAAS,CAACS,GAAG,EAAG;IAEpE,OAAO,IAAI;EAEZ,CAAC,MAAM;IAEN,OAAOX,GAAG;EAEX;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}