{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toFastProperties = void 0; // based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\n\nfunction toFastProperties(toBecomeFast) {\n  function FakeConstructor() {} // If our object is used as a constructor it would receive\n\n\n  FakeConstructor.prototype = toBecomeFast;\n  var fakeInstance = new FakeConstructor();\n\n  function fakeAccess() {\n    return typeof fakeInstance.bar;\n  } // help V8 understand this is a \"real\" prototype by actually using\n  // the fake instance.\n\n\n  fakeAccess();\n  fakeAccess();\n  return toBecomeFast; // Eval prevents optimization of this method (even though this is dead code)\n\n  /* istanbul ignore next */\n  // tslint:disable-next-line\n\n  eval(toBecomeFast);\n}\n\nexports.toFastProperties = toFastProperties;","map":{"version":3,"mappings":";;;;;mCAAA;;AACA,SAAgBA,gBAAhB,CAAiCC,YAAjC,EAAkD;EAChD,SAASC,eAAT,GAAwB,CAAK,CADmB,CAGhD;;;EACAA,eAAe,CAACC,SAAhB,GAA4BF,YAA5B;EACA,IAAMG,YAAY,GAAG,IAAKF,eAAL,EAArB;;EAEA,SAASG,UAAT,GAAmB;IACjB,OAAO,OAAOD,YAAY,CAACE,GAA3B;EACD,CAT+C,CAWhD;EACA;;;EACAD,UAAU;EACVA,UAAU;EAEV,OAAOJ,YAAP,CAhBgD,CAiBhD;;EACA;EACA;;EACAM,IAAI,CAACN,YAAD,CAAJ;AACD;;AArBDO","names":["toFastProperties","toBecomeFast","FakeConstructor","prototype","fakeInstance","fakeAccess","bar","eval","exports"],"sources":["D:\\Jord\\l4fycy\\node_modules\\@chevrotain\\utils\\src\\to-fast-properties.ts"],"sourcesContent":["// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast: any) {\n  function FakeConstructor() {}\n\n  // If our object is used as a constructor it would receive\n  FakeConstructor.prototype = toBecomeFast\n  const fakeInstance = new (FakeConstructor as any)()\n\n  function fakeAccess() {\n    return typeof fakeInstance.bar\n  }\n\n  // help V8 understand this is a \"real\" prototype by actually using\n  // the fake instance.\n  fakeAccess()\n  fakeAccess()\n\n  return toBecomeFast\n  // Eval prevents optimization of this method (even though this is dead code)\n  /* istanbul ignore next */\n  // tslint:disable-next-line\n  eval(toBecomeFast)\n}\n"]},"metadata":{},"sourceType":"script"}