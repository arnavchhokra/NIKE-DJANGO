{"ast":null,"code":"import { Color } from 'three';\n\nvar Lut = function Lut(colormap, numberofcolors) {\n  this.lut = [];\n  this.setColorMap(colormap, numberofcolors);\n  return this;\n};\n\nLut.prototype = {\n  constructor: Lut,\n  lut: [],\n  map: [],\n  n: 256,\n  minV: 0,\n  maxV: 1,\n  set: function set(value) {\n    if (value instanceof Lut) {\n      this.copy(value);\n    }\n\n    return this;\n  },\n  setMin: function setMin(min) {\n    this.minV = min;\n    return this;\n  },\n  setMax: function setMax(max) {\n    this.maxV = max;\n    return this;\n  },\n  setColorMap: function setColorMap(colormap, numberofcolors) {\n    this.map = ColorMapKeywords[colormap] || ColorMapKeywords.rainbow;\n    this.n = numberofcolors || 32;\n    var step = 1.0 / this.n;\n    this.lut.length = 0;\n\n    for (var i = 0; i <= 1; i += step) {\n      for (var j = 0; j < this.map.length - 1; j++) {\n        if (i >= this.map[j][0] && i < this.map[j + 1][0]) {\n          var min = this.map[j][0];\n          var max = this.map[j + 1][0];\n          var minColor = new Color(this.map[j][1]);\n          var maxColor = new Color(this.map[j + 1][1]);\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\n          this.lut.push(color);\n        }\n      }\n    }\n\n    return this;\n  },\n  copy: function copy(lut) {\n    this.lut = lut.lut;\n    this.map = lut.map;\n    this.n = lut.n;\n    this.minV = lut.minV;\n    this.maxV = lut.maxV;\n    return this;\n  },\n  getColor: function getColor(alpha) {\n    if (alpha <= this.minV) {\n      alpha = this.minV;\n    } else if (alpha >= this.maxV) {\n      alpha = this.maxV;\n    }\n\n    alpha = (alpha - this.minV) / (this.maxV - this.minV);\n    var colorPosition = Math.round(alpha * this.n);\n    colorPosition == this.n ? colorPosition -= 1 : colorPosition;\n    return this.lut[colorPosition];\n  },\n  addColorMap: function addColorMap(colormapName, arrayOfColors) {\n    ColorMapKeywords[colormapName] = arrayOfColors;\n  },\n  createCanvas: function createCanvas() {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = this.n;\n    this.updateCanvas(canvas);\n    return canvas;\n  },\n  updateCanvas: function updateCanvas(canvas) {\n    var ctx = canvas.getContext('2d', {\n      alpha: false\n    });\n    var imageData = ctx.getImageData(0, 0, 1, this.n);\n    var data = imageData.data;\n    var k = 0;\n    var step = 1.0 / this.n;\n\n    for (var i = 1; i >= 0; i -= step) {\n      for (var j = this.map.length - 1; j >= 0; j--) {\n        if (i < this.map[j][0] && i >= this.map[j - 1][0]) {\n          var min = this.map[j - 1][0];\n          var max = this.map[j][0];\n          var minColor = new Color(this.map[j - 1][1]);\n          var maxColor = new Color(this.map[j][1]);\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\n          data[k * 4] = Math.round(color.r * 255);\n          data[k * 4 + 1] = Math.round(color.g * 255);\n          data[k * 4 + 2] = Math.round(color.b * 255);\n          data[k * 4 + 3] = 255;\n          k += 1;\n        }\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  }\n};\nvar ColorMapKeywords = {\n  rainbow: [[0.0, 0x0000ff], [0.2, 0x00ffff], [0.5, 0x00ff00], [0.8, 0xffff00], [1.0, 0xff0000]],\n  cooltowarm: [[0.0, 0x3c4ec2], [0.2, 0x9bbcff], [0.5, 0xdcdcdc], [0.8, 0xf6a385], [1.0, 0xb40426]],\n  blackbody: [[0.0, 0x000000], [0.2, 0x780000], [0.5, 0xe63200], [0.8, 0xffff00], [1.0, 0xffffff]],\n  grayscale: [[0.0, 0x000000], [0.2, 0x404040], [0.5, 0x7f7f80], [0.8, 0xbfbfbf], [1.0, 0xffffff]]\n};\nexport { ColorMapKeywords, Lut };","map":{"version":3,"names":["Color","Lut","colormap","numberofcolors","lut","setColorMap","prototype","constructor","map","n","minV","maxV","set","value","copy","setMin","min","setMax","max","ColorMapKeywords","rainbow","step","length","i","j","minColor","maxColor","color","lerp","push","getColor","alpha","colorPosition","Math","round","addColorMap","colormapName","arrayOfColors","createCanvas","canvas","document","createElement","width","height","updateCanvas","ctx","getContext","imageData","getImageData","data","k","r","g","b","putImageData","cooltowarm","blackbody","grayscale"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/math/Lut.js"],"sourcesContent":["import { Color } from 'three';\r\n\r\nvar Lut = function (colormap, numberofcolors) {\r\n  this.lut = [];\r\n  this.setColorMap(colormap, numberofcolors);\r\n  return this;\r\n};\r\n\r\nLut.prototype = {\r\n  constructor: Lut,\r\n  lut: [],\r\n  map: [],\r\n  n: 256,\r\n  minV: 0,\r\n  maxV: 1,\r\n  set: function (value) {\r\n    if (value instanceof Lut) {\r\n      this.copy(value);\r\n    }\r\n\r\n    return this;\r\n  },\r\n  setMin: function (min) {\r\n    this.minV = min;\r\n    return this;\r\n  },\r\n  setMax: function (max) {\r\n    this.maxV = max;\r\n    return this;\r\n  },\r\n  setColorMap: function (colormap, numberofcolors) {\r\n    this.map = ColorMapKeywords[colormap] || ColorMapKeywords.rainbow;\r\n    this.n = numberofcolors || 32;\r\n    var step = 1.0 / this.n;\r\n    this.lut.length = 0;\r\n\r\n    for (let i = 0; i <= 1; i += step) {\r\n      for (let j = 0; j < this.map.length - 1; j++) {\r\n        if (i >= this.map[j][0] && i < this.map[j + 1][0]) {\r\n          var min = this.map[j][0];\r\n          var max = this.map[j + 1][0];\r\n          var minColor = new Color(this.map[j][1]);\r\n          var maxColor = new Color(this.map[j + 1][1]);\r\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\r\n          this.lut.push(color);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n  copy: function (lut) {\r\n    this.lut = lut.lut;\r\n    this.map = lut.map;\r\n    this.n = lut.n;\r\n    this.minV = lut.minV;\r\n    this.maxV = lut.maxV;\r\n    return this;\r\n  },\r\n  getColor: function (alpha) {\r\n    if (alpha <= this.minV) {\r\n      alpha = this.minV;\r\n    } else if (alpha >= this.maxV) {\r\n      alpha = this.maxV;\r\n    }\r\n\r\n    alpha = (alpha - this.minV) / (this.maxV - this.minV);\r\n    var colorPosition = Math.round(alpha * this.n);\r\n    colorPosition == this.n ? colorPosition -= 1 : colorPosition;\r\n    return this.lut[colorPosition];\r\n  },\r\n  addColorMap: function (colormapName, arrayOfColors) {\r\n    ColorMapKeywords[colormapName] = arrayOfColors;\r\n  },\r\n  createCanvas: function () {\r\n    var canvas = document.createElement('canvas');\r\n    canvas.width = 1;\r\n    canvas.height = this.n;\r\n    this.updateCanvas(canvas);\r\n    return canvas;\r\n  },\r\n  updateCanvas: function (canvas) {\r\n    var ctx = canvas.getContext('2d', {\r\n      alpha: false\r\n    });\r\n    var imageData = ctx.getImageData(0, 0, 1, this.n);\r\n    var data = imageData.data;\r\n    var k = 0;\r\n    var step = 1.0 / this.n;\r\n\r\n    for (let i = 1; i >= 0; i -= step) {\r\n      for (let j = this.map.length - 1; j >= 0; j--) {\r\n        if (i < this.map[j][0] && i >= this.map[j - 1][0]) {\r\n          var min = this.map[j - 1][0];\r\n          var max = this.map[j][0];\r\n          var minColor = new Color(this.map[j - 1][1]);\r\n          var maxColor = new Color(this.map[j][1]);\r\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\r\n          data[k * 4] = Math.round(color.r * 255);\r\n          data[k * 4 + 1] = Math.round(color.g * 255);\r\n          data[k * 4 + 2] = Math.round(color.b * 255);\r\n          data[k * 4 + 3] = 255;\r\n          k += 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    ctx.putImageData(imageData, 0, 0);\r\n    return canvas;\r\n  }\r\n};\r\nvar ColorMapKeywords = {\r\n  rainbow: [[0.0, 0x0000ff], [0.2, 0x00ffff], [0.5, 0x00ff00], [0.8, 0xffff00], [1.0, 0xff0000]],\r\n  cooltowarm: [[0.0, 0x3c4ec2], [0.2, 0x9bbcff], [0.5, 0xdcdcdc], [0.8, 0xf6a385], [1.0, 0xb40426]],\r\n  blackbody: [[0.0, 0x000000], [0.2, 0x780000], [0.5, 0xe63200], [0.8, 0xffff00], [1.0, 0xffffff]],\r\n  grayscale: [[0.0, 0x000000], [0.2, 0x404040], [0.5, 0x7f7f80], [0.8, 0xbfbfbf], [1.0, 0xffffff]]\r\n};\r\n\r\nexport { ColorMapKeywords, Lut };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}