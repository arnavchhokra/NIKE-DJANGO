{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { context, useThree, createPortal, useFrame } from '@react-three/fiber';\nimport tunnel from 'tunnel-rat';\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst col = new THREE.Color();\nconst tracked = tunnel();\n\n/**\r\n * In `@react-three/fiber` after `v8.0.0` but prior to `v8.1.0`, `state.size` contained only dimension\r\n * information. After `v8.1.0`, position information (`top`, `left`) was added\r\n *\r\n * @todo remove this when drei supports v9 and up\r\n */\n\nfunction isNonLegacyCanvasSize(size) {\n  return 'top' in size;\n}\nfunction computeContainerPosition(canvasSize, trackRect) {\n  const {\n    right,\n    top,\n    left: trackLeft,\n    bottom: trackBottom,\n    width,\n    height\n  } = trackRect;\n  const isOffscreen = trackRect.bottom < 0 || top > canvasSize.height || right < 0 || trackRect.left > canvasSize.width;\n  if (isNonLegacyCanvasSize(canvasSize)) {\n    const canvasBottom = canvasSize.top + canvasSize.height;\n    const bottom = canvasBottom - trackBottom;\n    const left = trackLeft - canvasSize.left;\n    return {\n      position: {\n        width,\n        height,\n        left,\n        top,\n        bottom,\n        right\n      },\n      isOffscreen\n    };\n  }\n  // Fall back on old behavior if r3f < 8.1.0\n  const bottom = canvasSize.height - trackBottom;\n  return {\n    position: {\n      width,\n      height,\n      top,\n      left: trackLeft,\n      bottom,\n      right\n    },\n    isOffscreen\n  };\n}\nfunction prepareSkissor(state, _ref) {\n  let {\n    left,\n    bottom,\n    width,\n    height\n  } = _ref;\n  let autoClear;\n  const aspect = width / height;\n  if (isOrthographicCamera(state.camera)) {\n    if (state.camera.left !== width / -2 || state.camera.right !== width / 2 || state.camera.top !== height / 2 || state.camera.bottom !== height / -2) {\n      Object.assign(state.camera, {\n        left: width / -2,\n        right: width / 2,\n        top: height / 2,\n        bottom: height / -2\n      });\n      state.camera.updateProjectionMatrix();\n    }\n  } else if (state.camera.aspect !== aspect) {\n    state.camera.aspect = aspect;\n    state.camera.updateProjectionMatrix();\n  }\n  autoClear = state.gl.autoClear;\n  state.gl.autoClear = false;\n  state.gl.setViewport(left, bottom, width, height);\n  state.gl.setScissor(left, bottom, width, height);\n  state.gl.setScissorTest(true);\n  return autoClear;\n}\nfunction finishSkissor(state, autoClear) {\n  // Restore the default state\n  state.gl.setScissorTest(false);\n  state.gl.autoClear = autoClear;\n}\nfunction clear(state) {\n  state.gl.getClearColor(col);\n  state.gl.setClearColor(col, state.gl.getClearAlpha());\n  state.gl.clear(true, true);\n}\nfunction Container(_ref2) {\n  let {\n    visible = true,\n    canvasSize,\n    scene,\n    index,\n    children,\n    frames,\n    rect,\n    track\n  } = _ref2;\n  const rootState = useThree();\n  const [isOffscreen, setOffscreen] = React.useState(false);\n  let frameCount = 0;\n  useFrame(state => {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n    if (rect.current) {\n      const {\n        position,\n        isOffscreen: _isOffscreen\n      } = computeContainerPosition(canvasSize, rect.current);\n      if (isOffscreen !== _isOffscreen) setOffscreen(_isOffscreen);\n      if (visible && !isOffscreen && rect.current) {\n        const autoClear = prepareSkissor(state, position);\n        // When children are present render the portalled scene, otherwise the default scene\n        state.gl.render(children ? state.scene : scene, state.camera);\n        finishSkissor(state, autoClear);\n      }\n    }\n  }, index);\n  React.useLayoutEffect(() => {\n    const curRect = rect.current;\n    if (curRect && (!visible || !isOffscreen)) {\n      // If the view is not visible clear it once, but stop rendering afterwards!\n      const {\n        position\n      } = computeContainerPosition(canvasSize, curRect);\n      const autoClear = prepareSkissor(rootState, position);\n      clear(rootState);\n      finishSkissor(rootState, autoClear);\n    }\n  }, [visible, isOffscreen]);\n  React.useEffect(() => {\n    const curRect = rect.current;\n    // Connect the event layer to the tracking element\n    const old = rootState.get().events.connected;\n    rootState.setEvents({\n      connected: track.current\n    });\n    return () => {\n      if (curRect) {\n        const {\n          position\n        } = computeContainerPosition(canvasSize, curRect);\n        const autoClear = prepareSkissor(rootState, position);\n        clear(rootState);\n        finishSkissor(rootState, autoClear);\n      }\n      rootState.setEvents({\n        connected: old\n      });\n    };\n  }, []);\n  React.useEffect(() => {\n    if (isNonLegacyCanvasSize(canvasSize)) return;\n    console.warn('Detected @react-three/fiber canvas size does not include position information. <View /> may not work as expected. ' + 'Upgrade to @react-three/fiber ^8.1.0 for support.\\n See https://github.com/pmndrs/drei/issues/944');\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\nconst CanvasView = /*#__PURE__*/React.forwardRef((_ref3, fref) => {\n  let {\n    track,\n    visible = true,\n    index = 1,\n    id,\n    style,\n    className,\n    frames = Infinity,\n    children,\n    ...props\n  } = _ref3;\n  var _rect$current, _rect$current2, _rect$current3, _rect$current4;\n  const rect = React.useRef(null);\n  const {\n    size,\n    scene\n  } = useThree();\n  const [virtualScene] = React.useState(() => new THREE.Scene());\n  const [ready, toggle] = React.useReducer(() => true, false);\n  const compute = React.useCallback((event, state) => {\n    if (rect.current && track.current && event.target === track.current) {\n      const {\n        width,\n        height,\n        left,\n        top\n      } = rect.current;\n      const x = event.clientX - left;\n      const y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect, track]);\n  React.useEffect(() => {\n    var _track$current2;\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect();\n    // And now we can proceed\n    toggle();\n  }, [track]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), ready && createPortal( /*#__PURE__*/React.createElement(Container, {\n    visible: visible,\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute,\n      priority: index\n    },\n    size: {\n      width: (_rect$current = rect.current) == null ? void 0 : _rect$current.width,\n      height: (_rect$current2 = rect.current) == null ? void 0 : _rect$current2.height,\n      // @ts-ignore\n      top: (_rect$current3 = rect.current) == null ? void 0 : _rect$current3.top,\n      // @ts-ignore\n      left: (_rect$current4 = rect.current) == null ? void 0 : _rect$current4.left\n    }\n  }));\n});\nconst HtmlView = /*#__PURE__*/React.forwardRef((_ref4, fref) => {\n  let {\n    as: El = 'div',\n    id,\n    visible,\n    className,\n    style,\n    index = 1,\n    track,\n    frames = Infinity,\n    children,\n    ...props\n  } = _ref4;\n  const uuid = React.useId();\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(El, _extends({\n    ref: ref,\n    id: id,\n    className: className,\n    style: style\n  }, props)), /*#__PURE__*/React.createElement(tracked.In, null, /*#__PURE__*/React.createElement(CanvasView, {\n    visible: visible,\n    key: uuid,\n    track: ref,\n    frames: frames,\n    index: index\n  }, children)));\n});\nconst View = /*#__PURE__*/React.forwardRef((props, fref) => {\n  // If we're inside a canvas we should be able to access the context store\n  const store = React.useContext(context);\n  // If that's not the case we render a tunnel\n  if (!store) return /*#__PURE__*/React.createElement(HtmlView, _extends({\n    ref: fref\n  }, props));\n  // Otherwise a plain canvas-view\n  else return /*#__PURE__*/React.createElement(CanvasView, _extends({\n    ref: fref\n  }, props));\n});\nView.Port = () => /*#__PURE__*/React.createElement(tracked.Out, null);\nexport { View };","map":{"version":3,"names":["_extends","React","THREE","context","useThree","createPortal","useFrame","tunnel","isOrthographicCamera","def","col","Color","tracked","isNonLegacyCanvasSize","size","computeContainerPosition","canvasSize","trackRect","right","top","left","trackLeft","bottom","trackBottom","width","height","isOffscreen","canvasBottom","position","prepareSkissor","state","_ref","autoClear","aspect","camera","Object","assign","updateProjectionMatrix","gl","setViewport","setScissor","setScissorTest","finishSkissor","clear","getClearColor","setClearColor","getClearAlpha","Container","_ref2","visible","scene","index","children","frames","rect","track","rootState","setOffscreen","useState","frameCount","Infinity","_track$current","current","getBoundingClientRect","_isOffscreen","render","useLayoutEffect","curRect","useEffect","old","get","events","connected","setEvents","console","warn","createElement","Fragment","CanvasView","forwardRef","_ref3","fref","id","style","className","props","_rect$current","_rect$current2","_rect$current3","_rect$current4","useRef","virtualScene","Scene","ready","toggle","useReducer","compute","useCallback","event","target","x","clientX","y","clientY","pointer","set","raycaster","setFromCamera","_track$current2","ref","priority","HtmlView","_ref4","as","El","uuid","useId","useImperativeHandle","In","key","View","store","useContext","Port","Out"],"sources":["D:/Repos/NIKE-DJANGO/Jord/l4fycy/node_modules/@react-three/drei/web/View.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\nimport { context, useThree, createPortal, useFrame } from '@react-three/fiber';\r\nimport tunnel from 'tunnel-rat';\r\n\r\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\r\nconst col = new THREE.Color();\r\nconst tracked = tunnel();\r\n\r\n/**\r\n * In `@react-three/fiber` after `v8.0.0` but prior to `v8.1.0`, `state.size` contained only dimension\r\n * information. After `v8.1.0`, position information (`top`, `left`) was added\r\n *\r\n * @todo remove this when drei supports v9 and up\r\n */\r\n\r\nfunction isNonLegacyCanvasSize(size) {\r\n  return 'top' in size;\r\n}\r\nfunction computeContainerPosition(canvasSize, trackRect) {\r\n  const {\r\n    right,\r\n    top,\r\n    left: trackLeft,\r\n    bottom: trackBottom,\r\n    width,\r\n    height\r\n  } = trackRect;\r\n  const isOffscreen = trackRect.bottom < 0 || top > canvasSize.height || right < 0 || trackRect.left > canvasSize.width;\r\n  if (isNonLegacyCanvasSize(canvasSize)) {\r\n    const canvasBottom = canvasSize.top + canvasSize.height;\r\n    const bottom = canvasBottom - trackBottom;\r\n    const left = trackLeft - canvasSize.left;\r\n    return {\r\n      position: {\r\n        width,\r\n        height,\r\n        left,\r\n        top,\r\n        bottom,\r\n        right\r\n      },\r\n      isOffscreen\r\n    };\r\n  }\r\n  // Fall back on old behavior if r3f < 8.1.0\r\n  const bottom = canvasSize.height - trackBottom;\r\n  return {\r\n    position: {\r\n      width,\r\n      height,\r\n      top,\r\n      left: trackLeft,\r\n      bottom,\r\n      right\r\n    },\r\n    isOffscreen\r\n  };\r\n}\r\nfunction prepareSkissor(state, {\r\n  left,\r\n  bottom,\r\n  width,\r\n  height\r\n}) {\r\n  let autoClear;\r\n  const aspect = width / height;\r\n  if (isOrthographicCamera(state.camera)) {\r\n    if (state.camera.left !== width / -2 || state.camera.right !== width / 2 || state.camera.top !== height / 2 || state.camera.bottom !== height / -2) {\r\n      Object.assign(state.camera, {\r\n        left: width / -2,\r\n        right: width / 2,\r\n        top: height / 2,\r\n        bottom: height / -2\r\n      });\r\n      state.camera.updateProjectionMatrix();\r\n    }\r\n  } else if (state.camera.aspect !== aspect) {\r\n    state.camera.aspect = aspect;\r\n    state.camera.updateProjectionMatrix();\r\n  }\r\n  autoClear = state.gl.autoClear;\r\n  state.gl.autoClear = false;\r\n  state.gl.setViewport(left, bottom, width, height);\r\n  state.gl.setScissor(left, bottom, width, height);\r\n  state.gl.setScissorTest(true);\r\n  return autoClear;\r\n}\r\nfunction finishSkissor(state, autoClear) {\r\n  // Restore the default state\r\n  state.gl.setScissorTest(false);\r\n  state.gl.autoClear = autoClear;\r\n}\r\nfunction clear(state) {\r\n  state.gl.getClearColor(col);\r\n  state.gl.setClearColor(col, state.gl.getClearAlpha());\r\n  state.gl.clear(true, true);\r\n}\r\nfunction Container({\r\n  visible = true,\r\n  canvasSize,\r\n  scene,\r\n  index,\r\n  children,\r\n  frames,\r\n  rect,\r\n  track\r\n}) {\r\n  const rootState = useThree();\r\n  const [isOffscreen, setOffscreen] = React.useState(false);\r\n  let frameCount = 0;\r\n  useFrame(state => {\r\n    if (frames === Infinity || frameCount <= frames) {\r\n      var _track$current;\r\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\r\n      frameCount++;\r\n    }\r\n    if (rect.current) {\r\n      const {\r\n        position,\r\n        isOffscreen: _isOffscreen\r\n      } = computeContainerPosition(canvasSize, rect.current);\r\n      if (isOffscreen !== _isOffscreen) setOffscreen(_isOffscreen);\r\n      if (visible && !isOffscreen && rect.current) {\r\n        const autoClear = prepareSkissor(state, position);\r\n        // When children are present render the portalled scene, otherwise the default scene\r\n        state.gl.render(children ? state.scene : scene, state.camera);\r\n        finishSkissor(state, autoClear);\r\n      }\r\n    }\r\n  }, index);\r\n  React.useLayoutEffect(() => {\r\n    const curRect = rect.current;\r\n    if (curRect && (!visible || !isOffscreen)) {\r\n      // If the view is not visible clear it once, but stop rendering afterwards!\r\n      const {\r\n        position\r\n      } = computeContainerPosition(canvasSize, curRect);\r\n      const autoClear = prepareSkissor(rootState, position);\r\n      clear(rootState);\r\n      finishSkissor(rootState, autoClear);\r\n    }\r\n  }, [visible, isOffscreen]);\r\n  React.useEffect(() => {\r\n    const curRect = rect.current;\r\n    // Connect the event layer to the tracking element\r\n    const old = rootState.get().events.connected;\r\n    rootState.setEvents({\r\n      connected: track.current\r\n    });\r\n    return () => {\r\n      if (curRect) {\r\n        const {\r\n          position\r\n        } = computeContainerPosition(canvasSize, curRect);\r\n        const autoClear = prepareSkissor(rootState, position);\r\n        clear(rootState);\r\n        finishSkissor(rootState, autoClear);\r\n      }\r\n      rootState.setEvents({\r\n        connected: old\r\n      });\r\n    };\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (isNonLegacyCanvasSize(canvasSize)) return;\r\n    console.warn('Detected @react-three/fiber canvas size does not include position information. <View /> may not work as expected. ' + 'Upgrade to @react-three/fiber ^8.1.0 for support.\\n See https://github.com/pmndrs/drei/issues/944');\r\n  }, []);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\r\n}\r\nconst CanvasView = /*#__PURE__*/React.forwardRef(({\r\n  track,\r\n  visible = true,\r\n  index = 1,\r\n  id,\r\n  style,\r\n  className,\r\n  frames = Infinity,\r\n  children,\r\n  ...props\r\n}, fref) => {\r\n  var _rect$current, _rect$current2, _rect$current3, _rect$current4;\r\n  const rect = React.useRef(null);\r\n  const {\r\n    size,\r\n    scene\r\n  } = useThree();\r\n  const [virtualScene] = React.useState(() => new THREE.Scene());\r\n  const [ready, toggle] = React.useReducer(() => true, false);\r\n  const compute = React.useCallback((event, state) => {\r\n    if (rect.current && track.current && event.target === track.current) {\r\n      const {\r\n        width,\r\n        height,\r\n        left,\r\n        top\r\n      } = rect.current;\r\n      const x = event.clientX - left;\r\n      const y = event.clientY - top;\r\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\r\n      state.raycaster.setFromCamera(state.pointer, state.camera);\r\n    }\r\n  }, [rect, track]);\r\n  React.useEffect(() => {\r\n    var _track$current2;\r\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\r\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect();\r\n    // And now we can proceed\r\n    toggle();\r\n  }, [track]);\r\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\r\n    ref: fref\r\n  }, props), ready && createPortal( /*#__PURE__*/React.createElement(Container, {\r\n    visible: visible,\r\n    canvasSize: size,\r\n    frames: frames,\r\n    scene: scene,\r\n    track: track,\r\n    rect: rect,\r\n    index: index\r\n  }, children), virtualScene, {\r\n    events: {\r\n      compute,\r\n      priority: index\r\n    },\r\n    size: {\r\n      width: (_rect$current = rect.current) == null ? void 0 : _rect$current.width,\r\n      height: (_rect$current2 = rect.current) == null ? void 0 : _rect$current2.height,\r\n      // @ts-ignore\r\n      top: (_rect$current3 = rect.current) == null ? void 0 : _rect$current3.top,\r\n      // @ts-ignore\r\n      left: (_rect$current4 = rect.current) == null ? void 0 : _rect$current4.left\r\n    }\r\n  }));\r\n});\r\nconst HtmlView = /*#__PURE__*/React.forwardRef(({\r\n  as: El = 'div',\r\n  id,\r\n  visible,\r\n  className,\r\n  style,\r\n  index = 1,\r\n  track,\r\n  frames = Infinity,\r\n  children,\r\n  ...props\r\n}, fref) => {\r\n  const uuid = React.useId();\r\n  const ref = React.useRef(null);\r\n  React.useImperativeHandle(fref, () => ref.current);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(El, _extends({\r\n    ref: ref,\r\n    id: id,\r\n    className: className,\r\n    style: style\r\n  }, props)), /*#__PURE__*/React.createElement(tracked.In, null, /*#__PURE__*/React.createElement(CanvasView, {\r\n    visible: visible,\r\n    key: uuid,\r\n    track: ref,\r\n    frames: frames,\r\n    index: index\r\n  }, children)));\r\n});\r\nconst View = /*#__PURE__*/React.forwardRef((props, fref) => {\r\n  // If we're inside a canvas we should be able to access the context store\r\n  const store = React.useContext(context);\r\n  // If that's not the case we render a tunnel\r\n  if (!store) return /*#__PURE__*/React.createElement(HtmlView, _extends({\r\n    ref: fref\r\n  }, props));\r\n  // Otherwise a plain canvas-view\r\n  else return /*#__PURE__*/React.createElement(CanvasView, _extends({\r\n    ref: fref\r\n  }, props));\r\n});\r\nView.Port = () => /*#__PURE__*/React.createElement(tracked.Out, null);\r\n\r\nexport { View };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}