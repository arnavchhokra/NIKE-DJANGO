{"ast":null,"code":"import { Object3D, Box3, MathUtils, TextureLoader, UVMapping, sRGBEncoding, MeshLambertMaterial } from 'three';\nimport { MD2Loader } from '../loaders/MD2Loader.js';\nimport { MorphBlendMesh } from './MorphBlendMesh.js';\n\nvar MD2CharacterComplex = function MD2CharacterComplex() {\n  var scope = this;\n  this.scale = 1; // animation parameters\n\n  this.animationFPS = 6;\n  this.transitionFrames = 15; // movement model parameters\n\n  this.maxSpeed = 275;\n  this.maxReverseSpeed = -275;\n  this.frontAcceleration = 600;\n  this.backAcceleration = 600;\n  this.frontDecceleration = 600;\n  this.angularSpeed = 2.5; // rig\n\n  this.root = new Object3D();\n  this.meshBody = null;\n  this.meshWeapon = null;\n  this.controls = null; // skins\n\n  this.skinsBody = [];\n  this.skinsWeapon = [];\n  this.weapons = [];\n  this.currentSkin = undefined; //\n\n  this.onLoadComplete = function () {}; // internals\n\n\n  this.meshes = [];\n  this.animations = {};\n  this.loadCounter = 0; // internal movement control variables\n\n  this.speed = 0;\n  this.bodyOrientation = 0;\n  this.walkSpeed = this.maxSpeed;\n  this.crouchSpeed = this.maxSpeed * 0.5; // internal animation parameters\n\n  this.activeAnimation = null;\n  this.oldAnimation = null; // API\n\n  this.enableShadows = function (enable) {\n    for (var i = 0; i < this.meshes.length; i++) {\n      this.meshes[i].castShadow = enable;\n      this.meshes[i].receiveShadow = enable;\n    }\n  };\n\n  this.setVisible = function (enable) {\n    for (var i = 0; i < this.meshes.length; i++) {\n      this.meshes[i].visible = enable;\n      this.meshes[i].visible = enable;\n    }\n  };\n\n  this.shareParts = function (original) {\n    this.animations = original.animations;\n    this.walkSpeed = original.walkSpeed;\n    this.crouchSpeed = original.crouchSpeed;\n    this.skinsBody = original.skinsBody;\n    this.skinsWeapon = original.skinsWeapon; // BODY\n\n    var mesh = createPart(original.meshBody.geometry, this.skinsBody[0]);\n    mesh.scale.set(this.scale, this.scale, this.scale);\n    this.root.position.y = original.root.position.y;\n    this.root.add(mesh);\n    this.meshBody = mesh;\n    this.meshes.push(mesh); // WEAPONS\n\n    for (var i = 0; i < original.weapons.length; i++) {\n      var meshWeapon = createPart(original.weapons[i].geometry, this.skinsWeapon[i]);\n      meshWeapon.scale.set(this.scale, this.scale, this.scale);\n      meshWeapon.visible = false;\n      meshWeapon.name = original.weapons[i].name;\n      this.root.add(meshWeapon);\n      this.weapons[i] = meshWeapon;\n      this.meshWeapon = meshWeapon;\n      this.meshes.push(meshWeapon);\n    }\n  };\n\n  this.loadParts = function (config) {\n    this.animations = config.animations;\n    this.walkSpeed = config.walkSpeed;\n    this.crouchSpeed = config.crouchSpeed;\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    var weaponsTextures = [];\n\n    for (var i = 0; i < config.weapons.length; i++) {\n      weaponsTextures[i] = config.weapons[i][1];\n    } // SKINS\n\n\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\n\n    var loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function (geo) {\n      var boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      var mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshes.push(mesh);\n      checkLoadingComplete();\n    }); // WEAPONS\n\n    var generateCallback = function generateCallback(index, name) {\n      return function (geo) {\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        scope.meshes.push(mesh);\n        checkLoadingComplete();\n      };\n    };\n\n    for (var _i = 0; _i < config.weapons.length; _i++) {\n      loader.load(config.baseUrl + config.weapons[_i][0], generateCallback(_i, config.weapons[_i][0]));\n    }\n  };\n\n  this.setPlaybackRate = function (rate) {\n    if (this.meshBody) this.meshBody.duration = this.meshBody.baseDuration / rate;\n    if (this.meshWeapon) this.meshWeapon.duration = this.meshWeapon.baseDuration / rate;\n  };\n\n  this.setWireframe = function (wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  };\n\n  this.setSkin = function (index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n      this.currentSkin = index;\n    }\n  };\n\n  this.setWeapon = function (index) {\n    for (var i = 0; i < this.weapons.length; i++) {\n      this.weapons[i].visible = false;\n    }\n\n    var activeWeapon = this.weapons[index];\n\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n\n      if (this.activeAnimation) {\n        activeWeapon.playAnimation(this.activeAnimation);\n        this.meshWeapon.setAnimationTime(this.activeAnimation, this.meshBody.getAnimationTime(this.activeAnimation));\n      }\n    }\n  };\n\n  this.setAnimation = function (animationName) {\n    if (animationName === this.activeAnimation || !animationName) return;\n\n    if (this.meshBody) {\n      this.meshBody.setAnimationWeight(animationName, 0);\n      this.meshBody.playAnimation(animationName);\n      this.oldAnimation = this.activeAnimation;\n      this.activeAnimation = animationName;\n      this.blendCounter = this.transitionFrames;\n    }\n\n    if (this.meshWeapon) {\n      this.meshWeapon.setAnimationWeight(animationName, 0);\n      this.meshWeapon.playAnimation(animationName);\n    }\n  };\n\n  this.update = function (delta) {\n    if (this.controls) this.updateMovementModel(delta);\n\n    if (this.animations) {\n      this.updateBehaviors();\n      this.updateAnimations(delta);\n    }\n  };\n\n  this.updateAnimations = function (delta) {\n    var mix = 1;\n\n    if (this.blendCounter > 0) {\n      mix = (this.transitionFrames - this.blendCounter) / this.transitionFrames;\n      this.blendCounter -= 1;\n    }\n\n    if (this.meshBody) {\n      this.meshBody.update(delta);\n      this.meshBody.setAnimationWeight(this.activeAnimation, mix);\n      this.meshBody.setAnimationWeight(this.oldAnimation, 1 - mix);\n    }\n\n    if (this.meshWeapon) {\n      this.meshWeapon.update(delta);\n      this.meshWeapon.setAnimationWeight(this.activeAnimation, mix);\n      this.meshWeapon.setAnimationWeight(this.oldAnimation, 1 - mix);\n    }\n  };\n\n  this.updateBehaviors = function () {\n    var controls = this.controls;\n    var animations = this.animations;\n    var moveAnimation, idleAnimation; // crouch vs stand\n\n    if (controls.crouch) {\n      moveAnimation = animations['crouchMove'];\n      idleAnimation = animations['crouchIdle'];\n    } else {\n      moveAnimation = animations['move'];\n      idleAnimation = animations['idle'];\n    } // actions\n\n\n    if (controls.jump) {\n      moveAnimation = animations['jump'];\n      idleAnimation = animations['jump'];\n    }\n\n    if (controls.attack) {\n      if (controls.crouch) {\n        moveAnimation = animations['crouchAttack'];\n        idleAnimation = animations['crouchAttack'];\n      } else {\n        moveAnimation = animations['attack'];\n        idleAnimation = animations['attack'];\n      }\n    } // set animations\n\n\n    if (controls.moveForward || controls.moveBackward || controls.moveLeft || controls.moveRight) {\n      if (this.activeAnimation !== moveAnimation) {\n        this.setAnimation(moveAnimation);\n      }\n    }\n\n    if (Math.abs(this.speed) < 0.2 * this.maxSpeed && !(controls.moveLeft || controls.moveRight || controls.moveForward || controls.moveBackward)) {\n      if (this.activeAnimation !== idleAnimation) {\n        this.setAnimation(idleAnimation);\n      }\n    } // set animation direction\n\n\n    if (controls.moveForward) {\n      if (this.meshBody) {\n        this.meshBody.setAnimationDirectionForward(this.activeAnimation);\n        this.meshBody.setAnimationDirectionForward(this.oldAnimation);\n      }\n\n      if (this.meshWeapon) {\n        this.meshWeapon.setAnimationDirectionForward(this.activeAnimation);\n        this.meshWeapon.setAnimationDirectionForward(this.oldAnimation);\n      }\n    }\n\n    if (controls.moveBackward) {\n      if (this.meshBody) {\n        this.meshBody.setAnimationDirectionBackward(this.activeAnimation);\n        this.meshBody.setAnimationDirectionBackward(this.oldAnimation);\n      }\n\n      if (this.meshWeapon) {\n        this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation);\n        this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation);\n      }\n    }\n  };\n\n  this.updateMovementModel = function (delta) {\n    var controls = this.controls; // speed based on controls\n\n    if (controls.crouch) this.maxSpeed = this.crouchSpeed;else this.maxSpeed = this.walkSpeed;\n    this.maxReverseSpeed = -this.maxSpeed;\n\n    if (controls.moveForward) {\n      this.speed = MathUtils.clamp(this.speed + delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    }\n\n    if (controls.moveBackward) {\n      this.speed = MathUtils.clamp(this.speed - delta * this.backAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    } // orientation based on controls\n    // (don't just stand while turning)\n\n\n    var dir = 1;\n\n    if (controls.moveLeft) {\n      this.bodyOrientation += delta * this.angularSpeed;\n      this.speed = MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    }\n\n    if (controls.moveRight) {\n      this.bodyOrientation -= delta * this.angularSpeed;\n      this.speed = MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    } // speed decay\n\n\n    if (!(controls.moveForward || controls.moveBackward)) {\n      if (this.speed > 0) {\n        var k = exponentialEaseOut(this.speed / this.maxSpeed);\n        this.speed = MathUtils.clamp(this.speed - k * delta * this.frontDecceleration, 0, this.maxSpeed);\n      } else {\n        var k = exponentialEaseOut(this.speed / this.maxReverseSpeed);\n        this.speed = MathUtils.clamp(this.speed + k * delta * this.backAcceleration, this.maxReverseSpeed, 0);\n      }\n    } // displacement\n\n\n    var forwardDelta = this.speed * delta;\n    this.root.position.x += Math.sin(this.bodyOrientation) * forwardDelta;\n    this.root.position.z += Math.cos(this.bodyOrientation) * forwardDelta; // steering\n\n    this.root.rotation.y = this.bodyOrientation;\n  }; // internal helpers\n\n\n  function loadTextures(baseUrl, textureUrls) {\n    var textureLoader = new TextureLoader();\n    var textures = [];\n\n    for (var i = 0; i < textureUrls.length; i++) {\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n      textures[i].mapping = UVMapping;\n      textures[i].name = textureUrls[i];\n      textures[i].encoding = sRGBEncoding;\n    }\n\n    return textures;\n  }\n\n  function createPart(geometry, skinMap) {\n    var materialWireframe = new MeshLambertMaterial({\n      color: 0xffaa00,\n      wireframe: true,\n      morphTargets: true,\n      morphNormals: true\n    });\n    var materialTexture = new MeshLambertMaterial({\n      color: 0xffffff,\n      wireframe: false,\n      map: skinMap,\n      morphTargets: true,\n      morphNormals: true\n    }); //\n\n    var mesh = new MorphBlendMesh(geometry, materialTexture);\n    mesh.rotation.y = -Math.PI / 2; //\n\n    mesh.materialTexture = materialTexture;\n    mesh.materialWireframe = materialWireframe; //\n\n    mesh.autoCreateAnimations(scope.animationFPS);\n    return mesh;\n  }\n\n  function checkLoadingComplete() {\n    scope.loadCounter -= 1;\n    if (scope.loadCounter === 0) scope.onLoadComplete();\n  }\n\n  function exponentialEaseOut(k) {\n    return k === 1 ? 1 : -Math.pow(2, -10 * k) + 1;\n  }\n};\n\nexport { MD2CharacterComplex };","map":{"version":3,"names":["Object3D","Box3","MathUtils","TextureLoader","UVMapping","sRGBEncoding","MeshLambertMaterial","MD2Loader","MorphBlendMesh","MD2CharacterComplex","scope","scale","animationFPS","transitionFrames","maxSpeed","maxReverseSpeed","frontAcceleration","backAcceleration","frontDecceleration","angularSpeed","root","meshBody","meshWeapon","controls","skinsBody","skinsWeapon","weapons","currentSkin","undefined","onLoadComplete","meshes","animations","loadCounter","speed","bodyOrientation","walkSpeed","crouchSpeed","activeAnimation","oldAnimation","enableShadows","enable","i","length","castShadow","receiveShadow","setVisible","visible","shareParts","original","mesh","createPart","geometry","set","position","y","add","push","name","loadParts","config","skins","weaponsTextures","loadTextures","baseUrl","loader","load","body","geo","boundingBox","setFromBufferAttribute","attributes","min","checkLoadingComplete","generateCallback","index","setPlaybackRate","rate","duration","baseDuration","setWireframe","wireframeEnabled","material","materialWireframe","materialTexture","setSkin","wireframe","map","setWeapon","activeWeapon","playAnimation","setAnimationTime","getAnimationTime","setAnimation","animationName","setAnimationWeight","blendCounter","update","delta","updateMovementModel","updateBehaviors","updateAnimations","mix","moveAnimation","idleAnimation","crouch","jump","attack","moveForward","moveBackward","moveLeft","moveRight","Math","abs","setAnimationDirectionForward","setAnimationDirectionBackward","clamp","dir","k","exponentialEaseOut","forwardDelta","x","sin","z","cos","rotation","textureUrls","textureLoader","textures","mapping","encoding","skinMap","color","morphTargets","morphNormals","PI","autoCreateAnimations","pow"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/misc/MD2CharacterComplex.js"],"sourcesContent":["import { Object3D, Box3, MathUtils, TextureLoader, UVMapping, sRGBEncoding, MeshLambertMaterial } from 'three';\r\nimport { MD2Loader } from '../loaders/MD2Loader.js';\r\nimport { MorphBlendMesh } from './MorphBlendMesh.js';\r\n\r\nvar MD2CharacterComplex = function () {\r\n  var scope = this;\r\n  this.scale = 1; // animation parameters\r\n\r\n  this.animationFPS = 6;\r\n  this.transitionFrames = 15; // movement model parameters\r\n\r\n  this.maxSpeed = 275;\r\n  this.maxReverseSpeed = -275;\r\n  this.frontAcceleration = 600;\r\n  this.backAcceleration = 600;\r\n  this.frontDecceleration = 600;\r\n  this.angularSpeed = 2.5; // rig\r\n\r\n  this.root = new Object3D();\r\n  this.meshBody = null;\r\n  this.meshWeapon = null;\r\n  this.controls = null; // skins\r\n\r\n  this.skinsBody = [];\r\n  this.skinsWeapon = [];\r\n  this.weapons = [];\r\n  this.currentSkin = undefined; //\r\n\r\n  this.onLoadComplete = function () {}; // internals\r\n\r\n\r\n  this.meshes = [];\r\n  this.animations = {};\r\n  this.loadCounter = 0; // internal movement control variables\r\n\r\n  this.speed = 0;\r\n  this.bodyOrientation = 0;\r\n  this.walkSpeed = this.maxSpeed;\r\n  this.crouchSpeed = this.maxSpeed * 0.5; // internal animation parameters\r\n\r\n  this.activeAnimation = null;\r\n  this.oldAnimation = null; // API\r\n\r\n  this.enableShadows = function (enable) {\r\n    for (let i = 0; i < this.meshes.length; i++) {\r\n      this.meshes[i].castShadow = enable;\r\n      this.meshes[i].receiveShadow = enable;\r\n    }\r\n  };\r\n\r\n  this.setVisible = function (enable) {\r\n    for (let i = 0; i < this.meshes.length; i++) {\r\n      this.meshes[i].visible = enable;\r\n      this.meshes[i].visible = enable;\r\n    }\r\n  };\r\n\r\n  this.shareParts = function (original) {\r\n    this.animations = original.animations;\r\n    this.walkSpeed = original.walkSpeed;\r\n    this.crouchSpeed = original.crouchSpeed;\r\n    this.skinsBody = original.skinsBody;\r\n    this.skinsWeapon = original.skinsWeapon; // BODY\r\n\r\n    var mesh = createPart(original.meshBody.geometry, this.skinsBody[0]);\r\n    mesh.scale.set(this.scale, this.scale, this.scale);\r\n    this.root.position.y = original.root.position.y;\r\n    this.root.add(mesh);\r\n    this.meshBody = mesh;\r\n    this.meshes.push(mesh); // WEAPONS\r\n\r\n    for (let i = 0; i < original.weapons.length; i++) {\r\n      var meshWeapon = createPart(original.weapons[i].geometry, this.skinsWeapon[i]);\r\n      meshWeapon.scale.set(this.scale, this.scale, this.scale);\r\n      meshWeapon.visible = false;\r\n      meshWeapon.name = original.weapons[i].name;\r\n      this.root.add(meshWeapon);\r\n      this.weapons[i] = meshWeapon;\r\n      this.meshWeapon = meshWeapon;\r\n      this.meshes.push(meshWeapon);\r\n    }\r\n  };\r\n\r\n  this.loadParts = function (config) {\r\n    this.animations = config.animations;\r\n    this.walkSpeed = config.walkSpeed;\r\n    this.crouchSpeed = config.crouchSpeed;\r\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\r\n    var weaponsTextures = [];\r\n\r\n    for (let i = 0; i < config.weapons.length; i++) weaponsTextures[i] = config.weapons[i][1]; // SKINS\r\n\r\n\r\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\r\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\r\n\r\n    var loader = new MD2Loader();\r\n    loader.load(config.baseUrl + config.body, function (geo) {\r\n      var boundingBox = new Box3();\r\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\r\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\r\n      var mesh = createPart(geo, scope.skinsBody[0]);\r\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\r\n      scope.root.add(mesh);\r\n      scope.meshBody = mesh;\r\n      scope.meshes.push(mesh);\r\n      checkLoadingComplete();\r\n    }); // WEAPONS\r\n\r\n    var generateCallback = function (index, name) {\r\n      return function (geo) {\r\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\r\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\r\n        mesh.visible = false;\r\n        mesh.name = name;\r\n        scope.root.add(mesh);\r\n        scope.weapons[index] = mesh;\r\n        scope.meshWeapon = mesh;\r\n        scope.meshes.push(mesh);\r\n        checkLoadingComplete();\r\n      };\r\n    };\r\n\r\n    for (let i = 0; i < config.weapons.length; i++) {\r\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\r\n    }\r\n  };\r\n\r\n  this.setPlaybackRate = function (rate) {\r\n    if (this.meshBody) this.meshBody.duration = this.meshBody.baseDuration / rate;\r\n    if (this.meshWeapon) this.meshWeapon.duration = this.meshWeapon.baseDuration / rate;\r\n  };\r\n\r\n  this.setWireframe = function (wireframeEnabled) {\r\n    if (wireframeEnabled) {\r\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\r\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\r\n    } else {\r\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\r\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\r\n    }\r\n  };\r\n\r\n  this.setSkin = function (index) {\r\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\r\n      this.meshBody.material.map = this.skinsBody[index];\r\n      this.currentSkin = index;\r\n    }\r\n  };\r\n\r\n  this.setWeapon = function (index) {\r\n    for (let i = 0; i < this.weapons.length; i++) this.weapons[i].visible = false;\r\n\r\n    var activeWeapon = this.weapons[index];\r\n\r\n    if (activeWeapon) {\r\n      activeWeapon.visible = true;\r\n      this.meshWeapon = activeWeapon;\r\n\r\n      if (this.activeAnimation) {\r\n        activeWeapon.playAnimation(this.activeAnimation);\r\n        this.meshWeapon.setAnimationTime(this.activeAnimation, this.meshBody.getAnimationTime(this.activeAnimation));\r\n      }\r\n    }\r\n  };\r\n\r\n  this.setAnimation = function (animationName) {\r\n    if (animationName === this.activeAnimation || !animationName) return;\r\n\r\n    if (this.meshBody) {\r\n      this.meshBody.setAnimationWeight(animationName, 0);\r\n      this.meshBody.playAnimation(animationName);\r\n      this.oldAnimation = this.activeAnimation;\r\n      this.activeAnimation = animationName;\r\n      this.blendCounter = this.transitionFrames;\r\n    }\r\n\r\n    if (this.meshWeapon) {\r\n      this.meshWeapon.setAnimationWeight(animationName, 0);\r\n      this.meshWeapon.playAnimation(animationName);\r\n    }\r\n  };\r\n\r\n  this.update = function (delta) {\r\n    if (this.controls) this.updateMovementModel(delta);\r\n\r\n    if (this.animations) {\r\n      this.updateBehaviors();\r\n      this.updateAnimations(delta);\r\n    }\r\n  };\r\n\r\n  this.updateAnimations = function (delta) {\r\n    var mix = 1;\r\n\r\n    if (this.blendCounter > 0) {\r\n      mix = (this.transitionFrames - this.blendCounter) / this.transitionFrames;\r\n      this.blendCounter -= 1;\r\n    }\r\n\r\n    if (this.meshBody) {\r\n      this.meshBody.update(delta);\r\n      this.meshBody.setAnimationWeight(this.activeAnimation, mix);\r\n      this.meshBody.setAnimationWeight(this.oldAnimation, 1 - mix);\r\n    }\r\n\r\n    if (this.meshWeapon) {\r\n      this.meshWeapon.update(delta);\r\n      this.meshWeapon.setAnimationWeight(this.activeAnimation, mix);\r\n      this.meshWeapon.setAnimationWeight(this.oldAnimation, 1 - mix);\r\n    }\r\n  };\r\n\r\n  this.updateBehaviors = function () {\r\n    var controls = this.controls;\r\n    var animations = this.animations;\r\n    var moveAnimation, idleAnimation; // crouch vs stand\r\n\r\n    if (controls.crouch) {\r\n      moveAnimation = animations['crouchMove'];\r\n      idleAnimation = animations['crouchIdle'];\r\n    } else {\r\n      moveAnimation = animations['move'];\r\n      idleAnimation = animations['idle'];\r\n    } // actions\r\n\r\n\r\n    if (controls.jump) {\r\n      moveAnimation = animations['jump'];\r\n      idleAnimation = animations['jump'];\r\n    }\r\n\r\n    if (controls.attack) {\r\n      if (controls.crouch) {\r\n        moveAnimation = animations['crouchAttack'];\r\n        idleAnimation = animations['crouchAttack'];\r\n      } else {\r\n        moveAnimation = animations['attack'];\r\n        idleAnimation = animations['attack'];\r\n      }\r\n    } // set animations\r\n\r\n\r\n    if (controls.moveForward || controls.moveBackward || controls.moveLeft || controls.moveRight) {\r\n      if (this.activeAnimation !== moveAnimation) {\r\n        this.setAnimation(moveAnimation);\r\n      }\r\n    }\r\n\r\n    if (Math.abs(this.speed) < 0.2 * this.maxSpeed && !(controls.moveLeft || controls.moveRight || controls.moveForward || controls.moveBackward)) {\r\n      if (this.activeAnimation !== idleAnimation) {\r\n        this.setAnimation(idleAnimation);\r\n      }\r\n    } // set animation direction\r\n\r\n\r\n    if (controls.moveForward) {\r\n      if (this.meshBody) {\r\n        this.meshBody.setAnimationDirectionForward(this.activeAnimation);\r\n        this.meshBody.setAnimationDirectionForward(this.oldAnimation);\r\n      }\r\n\r\n      if (this.meshWeapon) {\r\n        this.meshWeapon.setAnimationDirectionForward(this.activeAnimation);\r\n        this.meshWeapon.setAnimationDirectionForward(this.oldAnimation);\r\n      }\r\n    }\r\n\r\n    if (controls.moveBackward) {\r\n      if (this.meshBody) {\r\n        this.meshBody.setAnimationDirectionBackward(this.activeAnimation);\r\n        this.meshBody.setAnimationDirectionBackward(this.oldAnimation);\r\n      }\r\n\r\n      if (this.meshWeapon) {\r\n        this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation);\r\n        this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation);\r\n      }\r\n    }\r\n  };\r\n\r\n  this.updateMovementModel = function (delta) {\r\n    var controls = this.controls; // speed based on controls\r\n\r\n    if (controls.crouch) this.maxSpeed = this.crouchSpeed;else this.maxSpeed = this.walkSpeed;\r\n    this.maxReverseSpeed = -this.maxSpeed;\r\n\r\n    if (controls.moveForward) {\r\n      this.speed = MathUtils.clamp(this.speed + delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\r\n    }\r\n\r\n    if (controls.moveBackward) {\r\n      this.speed = MathUtils.clamp(this.speed - delta * this.backAcceleration, this.maxReverseSpeed, this.maxSpeed);\r\n    } // orientation based on controls\r\n    // (don't just stand while turning)\r\n\r\n\r\n    var dir = 1;\r\n\r\n    if (controls.moveLeft) {\r\n      this.bodyOrientation += delta * this.angularSpeed;\r\n      this.speed = MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\r\n    }\r\n\r\n    if (controls.moveRight) {\r\n      this.bodyOrientation -= delta * this.angularSpeed;\r\n      this.speed = MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\r\n    } // speed decay\r\n\r\n\r\n    if (!(controls.moveForward || controls.moveBackward)) {\r\n      if (this.speed > 0) {\r\n        var k = exponentialEaseOut(this.speed / this.maxSpeed);\r\n        this.speed = MathUtils.clamp(this.speed - k * delta * this.frontDecceleration, 0, this.maxSpeed);\r\n      } else {\r\n        var k = exponentialEaseOut(this.speed / this.maxReverseSpeed);\r\n        this.speed = MathUtils.clamp(this.speed + k * delta * this.backAcceleration, this.maxReverseSpeed, 0);\r\n      }\r\n    } // displacement\r\n\r\n\r\n    var forwardDelta = this.speed * delta;\r\n    this.root.position.x += Math.sin(this.bodyOrientation) * forwardDelta;\r\n    this.root.position.z += Math.cos(this.bodyOrientation) * forwardDelta; // steering\r\n\r\n    this.root.rotation.y = this.bodyOrientation;\r\n  }; // internal helpers\r\n\r\n\r\n  function loadTextures(baseUrl, textureUrls) {\r\n    var textureLoader = new TextureLoader();\r\n    var textures = [];\r\n\r\n    for (let i = 0; i < textureUrls.length; i++) {\r\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\r\n      textures[i].mapping = UVMapping;\r\n      textures[i].name = textureUrls[i];\r\n      textures[i].encoding = sRGBEncoding;\r\n    }\r\n\r\n    return textures;\r\n  }\r\n\r\n  function createPart(geometry, skinMap) {\r\n    var materialWireframe = new MeshLambertMaterial({\r\n      color: 0xffaa00,\r\n      wireframe: true,\r\n      morphTargets: true,\r\n      morphNormals: true\r\n    });\r\n    var materialTexture = new MeshLambertMaterial({\r\n      color: 0xffffff,\r\n      wireframe: false,\r\n      map: skinMap,\r\n      morphTargets: true,\r\n      morphNormals: true\r\n    }); //\r\n\r\n    var mesh = new MorphBlendMesh(geometry, materialTexture);\r\n    mesh.rotation.y = -Math.PI / 2; //\r\n\r\n    mesh.materialTexture = materialTexture;\r\n    mesh.materialWireframe = materialWireframe; //\r\n\r\n    mesh.autoCreateAnimations(scope.animationFPS);\r\n    return mesh;\r\n  }\r\n\r\n  function checkLoadingComplete() {\r\n    scope.loadCounter -= 1;\r\n    if (scope.loadCounter === 0) scope.onLoadComplete();\r\n  }\r\n\r\n  function exponentialEaseOut(k) {\r\n    return k === 1 ? 1 : -Math.pow(2, -10 * k) + 1;\r\n  }\r\n};\r\n\r\nexport { MD2CharacterComplex };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}