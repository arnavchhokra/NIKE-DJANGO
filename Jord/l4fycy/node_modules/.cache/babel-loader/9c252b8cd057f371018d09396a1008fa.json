{"ast":null,"code":"import _classCallCheck from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TempNode from '../core/TempNode.js';\nimport { normalize, join, negate, positionViewDirection, cross, add, mul, dot, transformedNormalView } from '../ShaderNode.js';\n\nvar MatcapUVNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(MatcapUVNode, _TempNode);\n\n  var _super = _createSuper(MatcapUVNode);\n\n  function MatcapUVNode() {\n    _classCallCheck(this, MatcapUVNode);\n\n    return _super.call(this, 'vec2');\n  }\n\n  _createClass(MatcapUVNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      var x = normalize(join(positionViewDirection.z, 0, negate(positionViewDirection.x)));\n      var y = cross(positionViewDirection, x);\n      var uv = add(mul(join(dot(x, transformedNormalView), dot(y, transformedNormalView)), 0.495), 0.5);\n      return uv.build(builder, this.getNodeType(builder));\n    }\n  }]);\n\n  return MatcapUVNode;\n}(TempNode);\n\nexport default MatcapUVNode;","map":{"version":3,"names":["TempNode","normalize","join","negate","positionViewDirection","cross","add","mul","dot","transformedNormalView","MatcapUVNode","builder","x","z","y","uv","build","getNodeType"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/three-stdlib/nodes/utils/MatcapUVNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { normalize, join, negate, positionViewDirection, cross, add, mul, dot, transformedNormalView } from '../ShaderNode.js';\n\nclass MatcapUVNode extends TempNode {\n  constructor() {\n    super('vec2');\n  }\n\n  generate(builder) {\n    const x = normalize(join(positionViewDirection.z, 0, negate(positionViewDirection.x)));\n    const y = cross(positionViewDirection, x);\n    const uv = add(mul(join(dot(x, transformedNormalView), dot(y, transformedNormalView)), 0.495), 0.5);\n    return uv.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default MatcapUVNode;\n"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,qBAAlC,EAAyDC,KAAzD,EAAgEC,GAAhE,EAAqEC,GAArE,EAA0EC,GAA1E,EAA+EC,qBAA/E,QAA4G,kBAA5G;;IAEMC,Y;;;;;EACJ,wBAAc;IAAA;;IAAA,yBACN,MADM;EAEb;;;;WAED,kBAASC,OAAT,EAAkB;MAChB,IAAMC,CAAC,GAAGX,SAAS,CAACC,IAAI,CAACE,qBAAqB,CAACS,CAAvB,EAA0B,CAA1B,EAA6BV,MAAM,CAACC,qBAAqB,CAACQ,CAAvB,CAAnC,CAAL,CAAnB;MACA,IAAME,CAAC,GAAGT,KAAK,CAACD,qBAAD,EAAwBQ,CAAxB,CAAf;MACA,IAAMG,EAAE,GAAGT,GAAG,CAACC,GAAG,CAACL,IAAI,CAACM,GAAG,CAACI,CAAD,EAAIH,qBAAJ,CAAJ,EAAgCD,GAAG,CAACM,CAAD,EAAIL,qBAAJ,CAAnC,CAAL,EAAqE,KAArE,CAAJ,EAAiF,GAAjF,CAAd;MACA,OAAOM,EAAE,CAACC,KAAH,CAASL,OAAT,EAAkB,KAAKM,WAAL,CAAiBN,OAAjB,CAAlB,CAAP;IACD;;;;EAVwBX,Q;;AAc3B,eAAeU,YAAf"},"metadata":{},"sourceType":"module"}