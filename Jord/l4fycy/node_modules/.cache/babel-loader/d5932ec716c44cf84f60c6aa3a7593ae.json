{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport useForcedRerendering from '../utils/useForcedRerendering';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n/**\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\n * It provides information about the item's state (selected, highlighted) and\n * handles the item's mouse events.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\n\nexport default function useListItem(parameters) {\n  var _parameters$handlePoi = parameters.handlePointerOverEvents,\n      handlePointerOverEvents = _parameters$handlePoi === void 0 ? false : _parameters$handlePoi,\n      item = parameters.item,\n      externalRef = parameters.rootRef;\n  var itemRef = React.useRef(null);\n  var handleRef = useForkRef(itemRef, externalRef);\n  var listContext = React.useContext(ListContext);\n\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n\n  var dispatch = listContext.dispatch,\n      getItemState = listContext.getItemState,\n      registerHighlightChangeHandler = listContext.registerHighlightChangeHandler,\n      registerSelectionChangeHandler = listContext.registerSelectionChangeHandler;\n\n  var _getItemState = getItemState(item),\n      highlighted = _getItemState.highlighted,\n      selected = _getItemState.selected,\n      focusable = _getItemState.focusable;\n\n  var rerender = useForcedRerendering();\n  useEnhancedEffect(function () {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(function () {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  var createHandleClick = React.useCallback(function (other) {\n    return function (event) {\n      var _other$onClick;\n\n      (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      dispatch({\n        type: ListActionTypes.itemClick,\n        item: item,\n        event: event\n      });\n    };\n  }, [dispatch, item]);\n  var createHandlePointerOver = React.useCallback(function (other) {\n    return function (event) {\n      var _other$onMouseOver;\n\n      (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      dispatch({\n        type: ListActionTypes.itemHover,\n        item: item,\n        event: event\n      });\n    };\n  }, [dispatch, item]);\n  var tabIndex;\n\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n\n  var getRootProps = function getRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      onClick: createHandleClick(otherHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(otherHandlers) : undefined,\n      ref: handleRef,\n      tabIndex: tabIndex\n    });\n  };\n\n  return {\n    getRootProps: getRootProps,\n    highlighted: highlighted,\n    rootRef: handleRef,\n    selected: selected\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","useForcedRerendering","ListActionTypes","ListContext","useListItem","parameters","handlePointerOverEvents","item","externalRef","rootRef","itemRef","useRef","handleRef","listContext","useContext","Error","dispatch","getItemState","registerHighlightChangeHandler","registerSelectionChangeHandler","highlighted","selected","focusable","rerender","updateHighlightedState","highlightedItem","updateSelectedState","selectedItems","includes","createHandleClick","useCallback","other","event","_other$onClick","onClick","call","defaultPrevented","type","itemClick","createHandlePointerOver","_other$onMouseOver","onMouseOver","itemHover","tabIndex","getRootProps","otherHandlers","onPointerOver","undefined","ref"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@mui/base/useList/useListItem.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport useForcedRerendering from '../utils/useForcedRerendering';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n\n/**\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\n * It provides information about the item's state (selected, highlighted) and\n * handles the item's mouse events.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\nexport default function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item,\n    rootRef: externalRef\n  } = parameters;\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, externalRef);\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  const {\n    dispatch,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const rerender = useForcedRerendering();\n  useEnhancedEffect(() => {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(() => {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  const createHandleClick = React.useCallback(other => event => {\n    var _other$onClick;\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(other => event => {\n    var _other$onMouseOver;\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  const getRootProps = (otherHandlers = {}) => _extends({}, otherHandlers, {\n    onClick: createHandleClick(otherHandlers),\n    onPointerOver: handlePointerOverEvents ? createHandlePointerOver(otherHandlers) : undefined,\n    ref: handleRef,\n    tabIndex\n  });\n  return {\n    getRootProps,\n    highlighted,\n    rootRef: handleRef,\n    selected\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}