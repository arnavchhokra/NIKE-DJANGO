{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSyntaxDiagramsCode = void 0;\n\nvar version_1 = require(\"../version\");\n\nfunction createSyntaxDiagramsCode(grammar, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.resourceBase,\n      resourceBase = _c === void 0 ? \"https://unpkg.com/chevrotain@\".concat(version_1.VERSION, \"/diagrams/\") : _c,\n      _d = _b.css,\n      css = _d === void 0 ? \"https://unpkg.com/chevrotain@\".concat(version_1.VERSION, \"/diagrams/diagrams.css\") : _d;\n\n  var header = \"\\n<!-- This is a generated file -->\\n<!DOCTYPE html>\\n<meta charset=\\\"utf-8\\\">\\n<style>\\n  body {\\n    background-color: hsl(30, 20%, 95%)\\n  }\\n</style>\\n\\n\";\n  var cssHtml = \"\\n<link rel='stylesheet' href='\".concat(css, \"'>\\n\");\n  var scripts = \"\\n<script src='\".concat(resourceBase, \"vendor/railroad-diagrams.js'></script>\\n<script src='\").concat(resourceBase, \"src/diagrams_builder.js'></script>\\n<script src='\").concat(resourceBase, \"src/diagrams_behavior.js'></script>\\n<script src='\").concat(resourceBase, \"src/main.js'></script>\\n\");\n  var diagramsDiv = \"\\n<div id=\\\"diagrams\\\" align=\\\"center\\\"></div>    \\n\";\n  var serializedGrammar = \"\\n<script>\\n    window.serializedGrammar = \".concat(JSON.stringify(grammar, null, \"  \"), \";\\n</script>\\n\");\n  var initLogic = \"\\n<script>\\n    var diagramsDiv = document.getElementById(\\\"diagrams\\\");\\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\\n</script>\\n\";\n  return header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic;\n}\n\nexports.createSyntaxDiagramsCode = createSyntaxDiagramsCode;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGA,SAAgBA,wBAAhB,CACEC,OADF,EAEEC,EAFF,EAQQ;MANNC,qBAMI,EANJ,GAMMD;MALJE;MAAAC,YAAY,mBAAG,uCAAgCC,iBAAhC,EAAuC,YAAvC,CAAH,GAAsDF;MAClEG;MAAAC,GAAG,mBAAG,uCAAgCF,iBAAhC,EAAuC,wBAAvC,CAAH,GAAkEC;;EAMvE,IAAME,MAAM,GAAG,+JAAf;EAWA,IAAMC,OAAO,GAAG,yCACaF,GADb,EACgB,MADhB,CAAhB;EAIA,IAAMG,OAAO,GAAG,yBACHN,YADG,EACS,uDADT,EACSO,MADT,CAEHP,YAFG,EAES,mDAFT,EAESO,MAFT,CAGHP,YAHG,EAGS,oDAHT,EAGSO,MAHT,CAIHP,YAJG,EAIS,0BAJT,CAAhB;EAMA,IAAMQ,WAAW,GAAG,sDAApB;EAGA,IAAMC,iBAAiB,GAAG,qDAEKC,IAAI,CAACC,SAAL,CAAef,OAAf,EAAwB,IAAxB,EAA8B,IAA9B,CAFL,EAEwC,gBAFxC,CAA1B;EAMA,IAAMgB,SAAS,GAAG,oKAAlB;EAMA,OACER,MAAM,GAAGC,OAAT,GAAmBC,OAAnB,GAA6BE,WAA7B,GAA2CC,iBAA3C,GAA+DG,SADjE;AAGD;;AAjDDC","names":["createSyntaxDiagramsCode","grammar","_a","_b","_c","resourceBase","version_1","_d","css","header","cssHtml","scripts","concat","diagramsDiv","serializedGrammar","JSON","stringify","initLogic","exports"],"sources":["C:\\Users\\Arnav\\Downloads\\l4fycy\\node_modules\\chevrotain\\src\\diagrams\\render_public.ts"],"sourcesContent":["import { VERSION } from \"../version\"\nimport { ISerializedGast } from \"@chevrotain/types\"\n\nexport function createSyntaxDiagramsCode(\n  grammar: ISerializedGast[],\n  {\n    resourceBase = `https://unpkg.com/chevrotain@${VERSION}/diagrams/`,\n    css = `https://unpkg.com/chevrotain@${VERSION}/diagrams/diagrams.css`\n  }: {\n    resourceBase?: string\n    css?: string\n  } = {}\n) {\n  const header = `\n<!-- This is a generated file -->\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  body {\n    background-color: hsl(30, 20%, 95%)\n  }\n</style>\n\n`\n  const cssHtml = `\n<link rel='stylesheet' href='${css}'>\n`\n\n  const scripts = `\n<script src='${resourceBase}vendor/railroad-diagrams.js'></script>\n<script src='${resourceBase}src/diagrams_builder.js'></script>\n<script src='${resourceBase}src/diagrams_behavior.js'></script>\n<script src='${resourceBase}src/main.js'></script>\n`\n  const diagramsDiv = `\n<div id=\"diagrams\" align=\"center\"></div>    \n`\n  const serializedGrammar = `\n<script>\n    window.serializedGrammar = ${JSON.stringify(grammar, null, \"  \")};\n</script>\n`\n\n  const initLogic = `\n<script>\n    var diagramsDiv = document.getElementById(\"diagrams\");\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\n</script>\n`\n  return (\n    header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic\n  )\n}\n"]},"metadata":{},"sourceType":"script"}