{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor() {\n    let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  // FIXME Use `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \".concat(distort, \"\\n      \").concat(shader.vertexShader, \"\\n    \");\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n  }\n  get time() {\n    return this._time.value;\n  }\n  set time(v) {\n    this._time.value = v;\n  }\n  get distort() {\n    return this._distort.value;\n  }\n  set distort(v) {\n    this._distort.value = v;\n  }\n  get radius() {\n    return this._radius.value;\n  }\n  set radius(v) {\n    this._radius.value = v;\n  }\n}\nconst MeshDistortMaterial = /* @__PURE__ */React.forwardRef((_ref, ref) => {\n  let {\n    speed = 1,\n    ...props\n  } = _ref;\n  const [material] = React.useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { MeshDistortMaterial };","map":{"version":3,"names":["_extends","React","MeshPhysicalMaterial","useFrame","distort","DistortMaterialImpl","constructor","parameters","arguments","length","undefined","setValues","_time","value","_distort","_radius","onBeforeCompile","shader","uniforms","time","radius","vertexShader","concat","replace","v","MeshDistortMaterial","forwardRef","_ref","ref","speed","props","material","useState","state","clock","getElapsedTime","createElement","object","attach"],"sources":["D:/Repos/NIKE-DJANGO/Jord/l4fycy/node_modules/@react-three/drei/core/MeshDistortMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { MeshPhysicalMaterial } from 'three';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\r\n\r\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\r\n  constructor(parameters = {}) {\r\n    super(parameters);\r\n    this.setValues(parameters);\r\n    this._time = {\r\n      value: 0\r\n    };\r\n    this._distort = {\r\n      value: 0.4\r\n    };\r\n    this._radius = {\r\n      value: 1\r\n    };\r\n  }\r\n\r\n  // FIXME Use `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\r\n  onBeforeCompile(shader) {\r\n    shader.uniforms.time = this._time;\r\n    shader.uniforms.radius = this._radius;\r\n    shader.uniforms.distort = this._distort;\r\n    shader.vertexShader = `\r\n      uniform float time;\r\n      uniform float radius;\r\n      uniform float distort;\r\n      ${distort}\r\n      ${shader.vertexShader}\r\n    `;\r\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `\r\n        float updateTime = time / 50.0;\r\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\r\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\r\n        `);\r\n  }\r\n  get time() {\r\n    return this._time.value;\r\n  }\r\n  set time(v) {\r\n    this._time.value = v;\r\n  }\r\n  get distort() {\r\n    return this._distort.value;\r\n  }\r\n  set distort(v) {\r\n    this._distort.value = v;\r\n  }\r\n  get radius() {\r\n    return this._radius.value;\r\n  }\r\n  set radius(v) {\r\n    this._radius.value = v;\r\n  }\r\n}\r\nconst MeshDistortMaterial = /* @__PURE__ */React.forwardRef(({\r\n  speed = 1,\r\n  ...props\r\n}, ref) => {\r\n  const [material] = React.useState(() => new DistortMaterialImpl());\r\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: material,\r\n    ref: ref,\r\n    attach: \"material\"\r\n  }, props));\r\n});\r\n\r\nexport { MeshDistortMaterial };\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,oBAAoB,QAAQ,OAAO;AAC5C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,OAAO,MAAM,sCAAsC;AAE1D,MAAMC,mBAAmB,SAASH,oBAAoB,CAAC;EACrDI,WAAWA,CAAA,EAAkB;IAAA,IAAjBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACzB,KAAK,CAACD,UAAU,CAAC;IACjB,IAAI,CAACI,SAAS,CAACJ,UAAU,CAAC;IAC1B,IAAI,CAACK,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;IACD,IAAI,CAACC,QAAQ,GAAG;MACdD,KAAK,EAAE;IACT,CAAC;IACD,IAAI,CAACE,OAAO,GAAG;MACbF,KAAK,EAAE;IACT,CAAC;EACH;;EAEA;EACAG,eAAeA,CAACC,MAAM,EAAE;IACtBA,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACP,KAAK;IACjCK,MAAM,CAACC,QAAQ,CAACE,MAAM,GAAG,IAAI,CAACL,OAAO;IACrCE,MAAM,CAACC,QAAQ,CAACd,OAAO,GAAG,IAAI,CAACU,QAAQ;IACvCG,MAAM,CAACI,YAAY,oGAAAC,MAAA,CAIflB,OAAO,cAAAkB,MAAA,CACPL,MAAM,CAACI,YAAY,WACtB;IACDJ,MAAM,CAACI,YAAY,GAAGJ,MAAM,CAACI,YAAY,CAACE,OAAO,CAAC,yBAAyB,kNAItE,CAAC;EACR;EACA,IAAIJ,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACP,KAAK,CAACC,KAAK;EACzB;EACA,IAAIM,IAAIA,CAACK,CAAC,EAAE;IACV,IAAI,CAACZ,KAAK,CAACC,KAAK,GAAGW,CAAC;EACtB;EACA,IAAIpB,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACU,QAAQ,CAACD,KAAK;EAC5B;EACA,IAAIT,OAAOA,CAACoB,CAAC,EAAE;IACb,IAAI,CAACV,QAAQ,CAACD,KAAK,GAAGW,CAAC;EACzB;EACA,IAAIJ,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACL,OAAO,CAACF,KAAK;EAC3B;EACA,IAAIO,MAAMA,CAACI,CAAC,EAAE;IACZ,IAAI,CAACT,OAAO,CAACF,KAAK,GAAGW,CAAC;EACxB;AACF;AACA,MAAMC,mBAAmB,GAAG,eAAexB,KAAK,CAACyB,UAAU,CAAC,CAAAC,IAAA,EAGzDC,GAAG,KAAK;EAAA,IAHkD;IAC3DC,KAAK,GAAG,CAAC;IACT,GAAGC;EACL,CAAC,GAAAH,IAAA;EACC,MAAM,CAACI,QAAQ,CAAC,GAAG9B,KAAK,CAAC+B,QAAQ,CAAC,MAAM,IAAI3B,mBAAmB,CAAC,CAAC,CAAC;EAClEF,QAAQ,CAAC8B,KAAK,IAAIF,QAAQ,KAAKA,QAAQ,CAACZ,IAAI,GAAGc,KAAK,CAACC,KAAK,CAACC,cAAc,CAAC,CAAC,GAAGN,KAAK,CAAC,CAAC;EACrF,OAAO,aAAa5B,KAAK,CAACmC,aAAa,CAAC,WAAW,EAAEpC,QAAQ,CAAC;IAC5DqC,MAAM,EAAEN,QAAQ;IAChBH,GAAG,EAAEA,GAAG;IACRU,MAAM,EAAE;EACV,CAAC,EAAER,KAAK,CAAC,CAAC;AACZ,CAAC,CAAC;AAEF,SAASL,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}