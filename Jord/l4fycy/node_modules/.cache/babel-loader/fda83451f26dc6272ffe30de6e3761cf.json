{"ast":null,"code":"import _classCallCheck from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MaterialReferenceNode from './MaterialReferenceNode.js';\n\nvar MaterialNode = /*#__PURE__*/function (_Node) {\n  _inherits(MaterialNode, _Node);\n\n  var _super = _createSuper(MaterialNode);\n\n  function MaterialNode() {\n    var _this;\n\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MaterialNode.COLOR;\n\n    _classCallCheck(this, MaterialNode);\n\n    _this = _super.call(this);\n    _this.scope = scope;\n    return _this;\n  }\n\n  _createClass(MaterialNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var scope = this.scope;\n      var material = builder.context.material;\n\n      if (scope === MaterialNode.COLOR) {\n        return material.map !== null ? 'vec4' : 'vec3';\n      } else if (scope === MaterialNode.OPACITY) {\n        return 'float';\n      } else if (scope === MaterialNode.SPECULAR) {\n        return 'vec3';\n      } else if (scope === MaterialNode.ROUGHNESS || scope === MaterialNode.METALNESS) {\n        return 'float';\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var material = builder.context.material;\n      var scope = this.scope;\n      var node = null;\n\n      if (scope === MaterialNode.ALPHA_TEST) {\n        node = new MaterialReferenceNode('alphaTest', 'float');\n      } else if (scope === MaterialNode.COLOR) {\n        var colorNode = new MaterialReferenceNode('color', 'color');\n\n        if (material.map !== null && material.map !== undefined && material.map.isTexture === true) {\n          node = new OperatorNode('*', colorNode, new MaterialReferenceNode('map', 'texture'));\n        } else {\n          node = colorNode;\n        }\n      } else if (scope === MaterialNode.OPACITY) {\n        var opacityNode = new MaterialReferenceNode('opacity', 'float');\n\n        if (material.alphaMap !== null && material.alphaMap !== undefined && material.alphaMap.isTexture === true) {\n          node = new OperatorNode('*', opacityNode, new MaterialReferenceNode('alphaMap', 'texture'));\n        } else {\n          node = opacityNode;\n        }\n      } else if (scope === MaterialNode.SPECULAR) {\n        var specularColorNode = new MaterialReferenceNode('specularColor', 'color');\n\n        if (material.specularColorMap !== null && material.specularColorMap !== undefined && material.specularColorMap.isTexture === true) {\n          node = new OperatorNode('*', specularColorNode, new MaterialReferenceNode('specularColorMap', 'texture'));\n        } else {\n          node = specularColorNode;\n        }\n      } else {\n        var outputType = this.getNodeType(builder);\n        node = new MaterialReferenceNode(scope, outputType);\n      }\n\n      return node.build(builder, output);\n    }\n  }]);\n\n  return MaterialNode;\n}(Node);\n\n_defineProperty(MaterialNode, \"ALPHA_TEST\", 'alphaTest');\n\n_defineProperty(MaterialNode, \"COLOR\", 'color');\n\n_defineProperty(MaterialNode, \"OPACITY\", 'opacity');\n\n_defineProperty(MaterialNode, \"SPECULAR\", 'specular');\n\n_defineProperty(MaterialNode, \"ROUGHNESS\", 'roughness');\n\n_defineProperty(MaterialNode, \"METALNESS\", 'metalness');\n\nexport default MaterialNode;","map":{"version":3,"names":["_defineProperty","Node","OperatorNode","MaterialReferenceNode","MaterialNode","scope","COLOR","builder","material","context","map","OPACITY","SPECULAR","ROUGHNESS","METALNESS","output","node","ALPHA_TEST","colorNode","undefined","isTexture","opacityNode","alphaMap","specularColorNode","specularColorMap","outputType","getNodeType","build"],"sources":["D:/Jord/l4fycy/node_modules/three-stdlib/nodes/accessors/MaterialNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MaterialReferenceNode from './MaterialReferenceNode.js';\n\nclass MaterialNode extends Node {\n  constructor(scope = MaterialNode.COLOR) {\n    super();\n    this.scope = scope;\n  }\n\n  getNodeType(builder) {\n    const scope = this.scope;\n    const material = builder.context.material;\n\n    if (scope === MaterialNode.COLOR) {\n      return material.map !== null ? 'vec4' : 'vec3';\n    } else if (scope === MaterialNode.OPACITY) {\n      return 'float';\n    } else if (scope === MaterialNode.SPECULAR) {\n      return 'vec3';\n    } else if (scope === MaterialNode.ROUGHNESS || scope === MaterialNode.METALNESS) {\n      return 'float';\n    }\n  }\n\n  generate(builder, output) {\n    const material = builder.context.material;\n    const scope = this.scope;\n    let node = null;\n\n    if (scope === MaterialNode.ALPHA_TEST) {\n      node = new MaterialReferenceNode('alphaTest', 'float');\n    } else if (scope === MaterialNode.COLOR) {\n      const colorNode = new MaterialReferenceNode('color', 'color');\n\n      if (material.map !== null && material.map !== undefined && material.map.isTexture === true) {\n        node = new OperatorNode('*', colorNode, new MaterialReferenceNode('map', 'texture'));\n      } else {\n        node = colorNode;\n      }\n    } else if (scope === MaterialNode.OPACITY) {\n      const opacityNode = new MaterialReferenceNode('opacity', 'float');\n\n      if (material.alphaMap !== null && material.alphaMap !== undefined && material.alphaMap.isTexture === true) {\n        node = new OperatorNode('*', opacityNode, new MaterialReferenceNode('alphaMap', 'texture'));\n      } else {\n        node = opacityNode;\n      }\n    } else if (scope === MaterialNode.SPECULAR) {\n      const specularColorNode = new MaterialReferenceNode('specularColor', 'color');\n\n      if (material.specularColorMap !== null && material.specularColorMap !== undefined && material.specularColorMap.isTexture === true) {\n        node = new OperatorNode('*', specularColorNode, new MaterialReferenceNode('specularColorMap', 'texture'));\n      } else {\n        node = specularColorNode;\n      }\n    } else {\n      const outputType = this.getNodeType(builder);\n      node = new MaterialReferenceNode(scope, outputType);\n    }\n\n    return node.build(builder, output);\n  }\n\n}\n\n_defineProperty(MaterialNode, \"ALPHA_TEST\", 'alphaTest');\n\n_defineProperty(MaterialNode, \"COLOR\", 'color');\n\n_defineProperty(MaterialNode, \"OPACITY\", 'opacity');\n\n_defineProperty(MaterialNode, \"SPECULAR\", 'specular');\n\n_defineProperty(MaterialNode, \"ROUGHNESS\", 'roughness');\n\n_defineProperty(MaterialNode, \"METALNESS\", 'metalness');\n\nexport default MaterialNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}