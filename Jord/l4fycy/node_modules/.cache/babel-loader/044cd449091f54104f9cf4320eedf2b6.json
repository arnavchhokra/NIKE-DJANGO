{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport useButton from '../useButton';\nimport { SelectActionTypes } from './useSelect.types';\nimport useList from '../useList';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nimport { useCompoundParent } from '../utils/useCompound';\nimport selectReducer from './selectReducer';\nimport combineHooksSlotProps from '../utils/combineHooksSlotProps';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useSelect API](https://mui.com/base-ui/react-select/hooks-api/#use-select)\n */\n\n\nfunction useSelect(props) {\n  var areOptionsEqual = props.areOptionsEqual,\n      buttonRefProp = props.buttonRef,\n      _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      defaultValueProp = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      listboxIdProp = props.listboxId,\n      listboxRefProp = props.listboxRef,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onHighlightChange = props.onHighlightChange,\n      onOpenChange = props.onOpenChange,\n      openProp = props.open,\n      optionsParam = props.options,\n      _props$getOptionAsStr = props.getOptionAsString,\n      getOptionAsString = _props$getOptionAsStr === void 0 ? defaultOptionStringifier : _props$getOptionAsStr,\n      valueProp = props.value;\n  var buttonRef = React.useRef(null);\n  var handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  var listboxRef = React.useRef(null);\n  var listboxId = useId(listboxIdProp);\n  var defaultValue;\n\n  if (valueProp === undefined && defaultValueProp === undefined) {\n    defaultValue = [];\n  } else if (defaultValueProp !== undefined) {\n    if (multiple) {\n      defaultValue = defaultValueProp;\n    } else {\n      defaultValue = defaultValueProp == null ? [] : [defaultValueProp];\n    }\n  }\n\n  var value = React.useMemo(function () {\n    if (valueProp !== undefined) {\n      if (multiple) {\n        return valueProp;\n      }\n\n      return valueProp == null ? [] : [valueProp];\n    }\n\n    return undefined;\n  }, [valueProp, multiple]);\n\n  var _useCompoundParent = useCompoundParent(),\n      subitems = _useCompoundParent.subitems,\n      compoundComponentContextValue = _useCompoundParent.contextValue;\n\n  var options = React.useMemo(function () {\n    if (optionsParam != null) {\n      return new Map(optionsParam.map(function (option, index) {\n        return [option.value, {\n          value: option.value,\n          label: option.label,\n          disabled: option.disabled,\n          ref: /*#__PURE__*/React.createRef(),\n          id: \"\".concat(listboxId, \"_\").concat(index)\n        }];\n      }));\n    }\n\n    return subitems;\n  }, [optionsParam, subitems, listboxId]);\n  var handleListboxRef = useForkRef(listboxRefProp, listboxRef);\n\n  var _useButton = useButton({\n    disabled: disabled,\n    rootRef: handleButtonRef\n  }),\n      getButtonRootProps = _useButton.getRootProps,\n      buttonActive = _useButton.active,\n      buttonFocusVisible = _useButton.focusVisible,\n      mergedButtonRef = _useButton.rootRef;\n\n  var optionValues = React.useMemo(function () {\n    return Array.from(options.keys());\n  }, [options]);\n  var getOptionByValue = React.useCallback(function (valueToGet) {\n    // This can't be simply `options.get(valueToGet)` because of the `areOptionsEqual` prop.\n    // If it's provided, we assume that the user wants to compare the options by value.\n    if (areOptionsEqual !== undefined) {\n      var similarValue = optionValues.find(function (optionValue) {\n        return areOptionsEqual(optionValue, valueToGet);\n      });\n      return options.get(similarValue);\n    }\n\n    return options.get(valueToGet);\n  }, [options, areOptionsEqual, optionValues]);\n  var isItemDisabled = React.useCallback(function (valueToCheck) {\n    var _option$disabled;\n\n    var option = getOptionByValue(valueToCheck);\n    return (_option$disabled = option == null ? void 0 : option.disabled) != null ? _option$disabled : false;\n  }, [getOptionByValue]);\n  var stringifyOption = React.useCallback(function (valueToCheck) {\n    var option = getOptionByValue(valueToCheck);\n\n    if (!option) {\n      return '';\n    }\n\n    return getOptionAsString(option);\n  }, [getOptionByValue, getOptionAsString]);\n  var controlledState = React.useMemo(function () {\n    return {\n      selectedValues: value,\n      open: openProp\n    };\n  }, [value, openProp]);\n  var getItemId = React.useCallback(function (itemValue) {\n    var _options$get;\n\n    return (_options$get = options.get(itemValue)) == null ? void 0 : _options$get.id;\n  }, [options]);\n  var handleSelectionChange = React.useCallback(function (event, newValues) {\n    if (multiple) {\n      onChange == null ? void 0 : onChange(event, newValues);\n    } else {\n      var _newValues$;\n\n      onChange == null ? void 0 : onChange(event, (_newValues$ = newValues[0]) != null ? _newValues$ : null);\n    }\n  }, [multiple, onChange]);\n  var handleHighlightChange = React.useCallback(function (event, newValue) {\n    onHighlightChange == null ? void 0 : onHighlightChange(event, newValue != null ? newValue : null);\n  }, [onHighlightChange]);\n  var handleStateChange = React.useCallback(function (event, field, fieldValue) {\n    if (field === 'open') {\n      onOpenChange == null ? void 0 : onOpenChange(fieldValue);\n\n      if (fieldValue === false && (event == null ? void 0 : event.type) !== 'blur') {\n        var _buttonRef$current;\n\n        (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n      }\n    }\n  }, [onOpenChange]);\n  var useListParameters = {\n    getInitialState: function getInitialState() {\n      var _defaultValue;\n\n      return {\n        highlightedValue: null,\n        selectedValues: (_defaultValue = defaultValue) != null ? _defaultValue : [],\n        open: defaultOpen\n      };\n    },\n    getItemId: getItemId,\n    controlledProps: controlledState,\n    itemComparer: areOptionsEqual,\n    isItemDisabled: isItemDisabled,\n    rootRef: mergedButtonRef,\n    onChange: handleSelectionChange,\n    onHighlightChange: handleHighlightChange,\n    onStateChange: handleStateChange,\n    reducerActionContext: React.useMemo(function () {\n      return {\n        multiple: multiple\n      };\n    }, [multiple]),\n    items: optionValues,\n    getItemAsString: stringifyOption,\n    selectionMode: multiple ? 'multiple' : 'single',\n    stateReducer: selectReducer\n  };\n\n  var _useList = useList(useListParameters),\n      dispatch = _useList.dispatch,\n      getListboxRootProps = _useList.getRootProps,\n      listContextValue = _useList.contextValue,\n      _useList$state = _useList.state,\n      open = _useList$state.open,\n      highlightedOption = _useList$state.highlightedValue,\n      selectedOptions = _useList$state.selectedValues,\n      mergedListRootRef = _useList.rootRef;\n\n  var createHandleButtonClick = function createHandleButtonClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n\n      otherHandlers == null || (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n      if (!event.defaultMuiPrevented) {\n        var action = {\n          type: SelectActionTypes.buttonClick,\n          event: event\n        };\n        dispatch(action);\n      }\n    };\n  };\n\n  useEnhancedEffect(function () {\n    // Scroll to the currently highlighted option.\n    if (highlightedOption != null) {\n      var _getOptionByValue;\n\n      var optionRef = (_getOptionByValue = getOptionByValue(highlightedOption)) == null ? void 0 : _getOptionByValue.ref;\n\n      if (!listboxRef.current || !(optionRef != null && optionRef.current)) {\n        return;\n      }\n\n      var listboxClientRect = listboxRef.current.getBoundingClientRect();\n      var optionClientRect = optionRef.current.getBoundingClientRect();\n\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlightedOption, getOptionByValue]);\n  var getOptionMetadata = React.useCallback(function (optionValue) {\n    return getOptionByValue(optionValue);\n  }, [getOptionByValue]);\n\n  var getSelectTriggerProps = function getSelectTriggerProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      ref: mergedListRootRef,\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-controls': listboxId\n    });\n  };\n\n  var getButtonProps = function getButtonProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var listboxAndButtonProps = combineHooksSlotProps(getButtonRootProps, getListboxRootProps);\n    var combinedProps = combineHooksSlotProps(listboxAndButtonProps, getSelectTriggerProps);\n    return combinedProps(otherHandlers);\n  };\n\n  var getListboxProps = function getListboxProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      id: listboxId,\n      role: 'listbox',\n      'aria-multiselectable': multiple ? 'true' : undefined,\n      ref: handleListboxRef,\n      onMouseDown: preventDefault // to prevent the button from losing focus when interacting with the listbox\n\n    });\n  };\n\n  React.useDebugValue({\n    selectedOptions: selectedOptions,\n    highlightedOption: highlightedOption,\n    open: open\n  });\n  var contextValue = React.useMemo(function () {\n    return _extends({}, listContextValue, compoundComponentContextValue);\n  }, [listContextValue, compoundComponentContextValue]);\n  var selectValue;\n\n  if (props.multiple) {\n    selectValue = selectedOptions;\n  } else {\n    selectValue = selectedOptions.length > 0 ? selectedOptions[0] : null;\n  }\n\n  return {\n    buttonActive: buttonActive,\n    buttonFocusVisible: buttonFocusVisible,\n    buttonRef: mergedButtonRef,\n    contextValue: contextValue,\n    disabled: disabled,\n    dispatch: dispatch,\n    getButtonProps: getButtonProps,\n    getListboxProps: getListboxProps,\n    getOptionMetadata: getOptionMetadata,\n    listboxRef: mergedListRootRef,\n    open: open,\n    options: optionValues,\n    value: selectValue,\n    highlightedOption: highlightedOption\n  };\n}\n\nexport default useSelect;","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","unstable_useEnhancedEffect","useEnhancedEffect","useButton","SelectActionTypes","useList","defaultOptionStringifier","useCompoundParent","selectReducer","combineHooksSlotProps","preventDefault","event","useSelect","props","areOptionsEqual","buttonRefProp","buttonRef","defaultOpen","defaultValueProp","defaultValue","disabled","listboxIdProp","listboxId","listboxRefProp","listboxRef","multiple","onChange","onHighlightChange","onOpenChange","openProp","open","optionsParam","options","getOptionAsString","valueProp","value","useRef","handleButtonRef","undefined","useMemo","subitems","compoundComponentContextValue","contextValue","Map","map","option","index","label","ref","createRef","id","handleListboxRef","rootRef","getButtonRootProps","getRootProps","buttonActive","active","buttonFocusVisible","focusVisible","mergedButtonRef","optionValues","Array","from","keys","getOptionByValue","useCallback","valueToGet","similarValue","find","optionValue","get","isItemDisabled","valueToCheck","_option$disabled","stringifyOption","controlledState","selectedValues","getItemId","itemValue","_options$get","handleSelectionChange","newValues","_newValues$","handleHighlightChange","newValue","handleStateChange","field","fieldValue","type","_buttonRef$current","current","focus","useListParameters","getInitialState","_defaultValue","highlightedValue","controlledProps","itemComparer","onStateChange","reducerActionContext","items","getItemAsString","selectionMode","stateReducer","dispatch","getListboxRootProps","listContextValue","state","highlightedOption","selectedOptions","mergedListRootRef","createHandleButtonClick","otherHandlers","_otherHandlers$onClic","onClick","call","defaultMuiPrevented","action","buttonClick","_getOptionByValue","optionRef","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","getOptionMetadata","getSelectTriggerProps","role","getButtonProps","listboxAndButtonProps","combinedProps","getListboxProps","onMouseDown","useDebugValue","selectValue","length"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@mui/base/useSelect/useSelect.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport useButton from '../useButton';\nimport { SelectActionTypes } from './useSelect.types';\nimport useList from '../useList';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nimport { useCompoundParent } from '../utils/useCompound';\nimport selectReducer from './selectReducer';\nimport combineHooksSlotProps from '../utils/combineHooksSlotProps';\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useSelect API](https://mui.com/base-ui/react-select/hooks-api/#use-select)\n */\nfunction useSelect(props) {\n  const {\n    areOptionsEqual,\n    buttonRef: buttonRefProp,\n    defaultOpen = false,\n    defaultValue: defaultValueProp,\n    disabled = false,\n    listboxId: listboxIdProp,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onHighlightChange,\n    onOpenChange,\n    open: openProp,\n    options: optionsParam,\n    getOptionAsString = defaultOptionStringifier,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const listboxId = useId(listboxIdProp);\n  let defaultValue;\n  if (valueProp === undefined && defaultValueProp === undefined) {\n    defaultValue = [];\n  } else if (defaultValueProp !== undefined) {\n    if (multiple) {\n      defaultValue = defaultValueProp;\n    } else {\n      defaultValue = defaultValueProp == null ? [] : [defaultValueProp];\n    }\n  }\n  const value = React.useMemo(() => {\n    if (valueProp !== undefined) {\n      if (multiple) {\n        return valueProp;\n      }\n      return valueProp == null ? [] : [valueProp];\n    }\n    return undefined;\n  }, [valueProp, multiple]);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const options = React.useMemo(() => {\n    if (optionsParam != null) {\n      return new Map(optionsParam.map((option, index) => [option.value, {\n        value: option.value,\n        label: option.label,\n        disabled: option.disabled,\n        ref: /*#__PURE__*/React.createRef(),\n        id: `${listboxId}_${index}`\n      }]));\n    }\n    return subitems;\n  }, [optionsParam, subitems, listboxId]);\n  const handleListboxRef = useForkRef(listboxRefProp, listboxRef);\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible,\n    rootRef: mergedButtonRef\n  } = useButton({\n    disabled,\n    rootRef: handleButtonRef\n  });\n  const optionValues = React.useMemo(() => Array.from(options.keys()), [options]);\n  const getOptionByValue = React.useCallback(valueToGet => {\n    // This can't be simply `options.get(valueToGet)` because of the `areOptionsEqual` prop.\n    // If it's provided, we assume that the user wants to compare the options by value.\n    if (areOptionsEqual !== undefined) {\n      const similarValue = optionValues.find(optionValue => areOptionsEqual(optionValue, valueToGet));\n      return options.get(similarValue);\n    }\n    return options.get(valueToGet);\n  }, [options, areOptionsEqual, optionValues]);\n  const isItemDisabled = React.useCallback(valueToCheck => {\n    var _option$disabled;\n    const option = getOptionByValue(valueToCheck);\n    return (_option$disabled = option == null ? void 0 : option.disabled) != null ? _option$disabled : false;\n  }, [getOptionByValue]);\n  const stringifyOption = React.useCallback(valueToCheck => {\n    const option = getOptionByValue(valueToCheck);\n    if (!option) {\n      return '';\n    }\n    return getOptionAsString(option);\n  }, [getOptionByValue, getOptionAsString]);\n  const controlledState = React.useMemo(() => ({\n    selectedValues: value,\n    open: openProp\n  }), [value, openProp]);\n  const getItemId = React.useCallback(itemValue => {\n    var _options$get;\n    return (_options$get = options.get(itemValue)) == null ? void 0 : _options$get.id;\n  }, [options]);\n  const handleSelectionChange = React.useCallback((event, newValues) => {\n    if (multiple) {\n      onChange == null ? void 0 : onChange(event, newValues);\n    } else {\n      var _newValues$;\n      onChange == null ? void 0 : onChange(event, (_newValues$ = newValues[0]) != null ? _newValues$ : null);\n    }\n  }, [multiple, onChange]);\n  const handleHighlightChange = React.useCallback((event, newValue) => {\n    onHighlightChange == null ? void 0 : onHighlightChange(event, newValue != null ? newValue : null);\n  }, [onHighlightChange]);\n  const handleStateChange = React.useCallback((event, field, fieldValue) => {\n    if (field === 'open') {\n      onOpenChange == null ? void 0 : onOpenChange(fieldValue);\n      if (fieldValue === false && (event == null ? void 0 : event.type) !== 'blur') {\n        var _buttonRef$current;\n        (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n      }\n    }\n  }, [onOpenChange]);\n  const useListParameters = {\n    getInitialState: () => {\n      var _defaultValue;\n      return {\n        highlightedValue: null,\n        selectedValues: (_defaultValue = defaultValue) != null ? _defaultValue : [],\n        open: defaultOpen\n      };\n    },\n    getItemId,\n    controlledProps: controlledState,\n    itemComparer: areOptionsEqual,\n    isItemDisabled,\n    rootRef: mergedButtonRef,\n    onChange: handleSelectionChange,\n    onHighlightChange: handleHighlightChange,\n    onStateChange: handleStateChange,\n    reducerActionContext: React.useMemo(() => ({\n      multiple\n    }), [multiple]),\n    items: optionValues,\n    getItemAsString: stringifyOption,\n    selectionMode: multiple ? 'multiple' : 'single',\n    stateReducer: selectReducer\n  };\n  const {\n    dispatch,\n    getRootProps: getListboxRootProps,\n    contextValue: listContextValue,\n    state: {\n      open,\n      highlightedValue: highlightedOption,\n      selectedValues: selectedOptions\n    },\n    rootRef: mergedListRootRef\n  } = useList(useListParameters);\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    otherHandlers == null || (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n    if (!event.defaultMuiPrevented) {\n      const action = {\n        type: SelectActionTypes.buttonClick,\n        event\n      };\n      dispatch(action);\n    }\n  };\n  useEnhancedEffect(() => {\n    // Scroll to the currently highlighted option.\n    if (highlightedOption != null) {\n      var _getOptionByValue;\n      const optionRef = (_getOptionByValue = getOptionByValue(highlightedOption)) == null ? void 0 : _getOptionByValue.ref;\n      if (!listboxRef.current || !(optionRef != null && optionRef.current)) {\n        return;\n      }\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlightedOption, getOptionByValue]);\n  const getOptionMetadata = React.useCallback(optionValue => getOptionByValue(optionValue), [getOptionByValue]);\n  const getSelectTriggerProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      ref: mergedListRootRef,\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-controls': listboxId\n    });\n  };\n  const getButtonProps = (otherHandlers = {}) => {\n    const listboxAndButtonProps = combineHooksSlotProps(getButtonRootProps, getListboxRootProps);\n    const combinedProps = combineHooksSlotProps(listboxAndButtonProps, getSelectTriggerProps);\n    return combinedProps(otherHandlers);\n  };\n  const getListboxProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, {\n      id: listboxId,\n      role: 'listbox',\n      'aria-multiselectable': multiple ? 'true' : undefined,\n      ref: handleListboxRef,\n      onMouseDown: preventDefault // to prevent the button from losing focus when interacting with the listbox\n    });\n  };\n\n  React.useDebugValue({\n    selectedOptions,\n    highlightedOption,\n    open\n  });\n  const contextValue = React.useMemo(() => _extends({}, listContextValue, compoundComponentContextValue), [listContextValue, compoundComponentContextValue]);\n  let selectValue;\n  if (props.multiple) {\n    selectValue = selectedOptions;\n  } else {\n    selectValue = selectedOptions.length > 0 ? selectedOptions[0] : null;\n  }\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    buttonRef: mergedButtonRef,\n    contextValue,\n    disabled,\n    dispatch,\n    getButtonProps,\n    getListboxProps,\n    getOptionMetadata,\n    listboxRef: mergedListRootRef,\n    open,\n    options: optionValues,\n    value: selectValue,\n    highlightedOption\n  };\n}\nexport default useSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}