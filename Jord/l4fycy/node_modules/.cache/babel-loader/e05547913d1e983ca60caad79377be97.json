{"ast":null,"code":"import _classCallCheck from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport TempNode from '../core/TempNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport OperatorNode from './OperatorNode.js';\n\nvar MathNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(MathNode, _TempNode);\n\n  var _super = _createSuper(MathNode);\n\n  // 1 input\n  // 2 inputs\n  // 3 inputs\n  function MathNode(method, aNode) {\n    var _this;\n\n    var bNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var cNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, MathNode);\n\n    _this = _super.call(this);\n    _this.method = method;\n    _this.aNode = aNode;\n    _this.bNode = bNode;\n    _this.cNode = cNode;\n    return _this;\n  }\n\n  _createClass(MathNode, [{\n    key: \"getInputType\",\n    value: function getInputType(builder) {\n      var aType = this.aNode.getNodeType(builder);\n      var bType = this.bNode ? this.bNode.getNodeType(builder) : null;\n      var cType = this.cNode ? this.cNode.getNodeType(builder) : null;\n      var aLen = builder.getTypeLength(aType);\n      var bLen = builder.getTypeLength(bType);\n      var cLen = builder.getTypeLength(cType);\n\n      if (aLen > bLen && aLen > cLen) {\n        return aType;\n      } else if (bLen > cLen) {\n        return bType;\n      } else if (cLen > aLen) {\n        return cType;\n      }\n\n      return aType;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var method = this.method;\n\n      if (method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT) {\n        return 'float';\n      } else if (method === MathNode.CROSS) {\n        return 'vec3';\n      } else {\n        return this.getInputType(builder);\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var method = this.method;\n      var type = this.getNodeType(builder);\n      var inputType = this.getInputType(builder);\n      var a = this.aNode;\n      var b = this.bNode;\n      var c = this.cNode;\n      var isWebGL = builder.renderer.isWebGLRenderer === true;\n\n      if (isWebGL && (method === MathNode.DFDX || method === MathNode.DFDY) && output === 'vec3') {\n        // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n        return new JoinNode([new MathNode(method, new SplitNode(a, 'x')), new MathNode(method, new SplitNode(a, 'y')), new MathNode(method, new SplitNode(a, 'z'))]).build(builder);\n      } else if (method === MathNode.TRANSFORM_DIRECTION) {\n        // dir can be either a direction vector or a normal vector\n        // upper-left 3x3 of matrix is assumed to be orthogonal\n        var tA = a;\n        var tB = b;\n\n        if (builder.isMatrix(tA.getNodeType(builder))) {\n          tB = new ExpressionNode(\"\".concat(builder.getType('vec4'), \"( \").concat(tB.build(builder, 'vec3'), \", 0.0 )\"), 'vec4');\n        } else {\n          tA = new ExpressionNode(\"\".concat(builder.getType('vec4'), \"( \").concat(tA.build(builder, 'vec3'), \", 0.0 )\"), 'vec4');\n        }\n\n        var mulNode = new SplitNode(new OperatorNode('*', tA, tB), 'xyz');\n        return new MathNode(MathNode.NORMALIZE, mulNode).build(builder);\n      } else if (method === MathNode.SATURATE) {\n        return builder.format(\"clamp( \".concat(a.build(builder, inputType), \", 0.0, 1.0 )\"), type, output);\n      } else if (method === MathNode.NEGATE) {\n        return builder.format('( -' + a.build(builder, inputType) + ' )', type, output);\n      } else if (method === MathNode.INVERT) {\n        return builder.format('( 1.0 - ' + a.build(builder, inputType) + ' )', type, output);\n      } else {\n        var params = [];\n\n        if (method === MathNode.CROSS) {\n          params.push(a.build(builder, type), b.build(builder, type));\n        } else if (method === MathNode.STEP) {\n          params.push(a.build(builder, builder.getTypeLength(a.getNodeType(builder)) === 1 ? 'float' : inputType), b.build(builder, inputType));\n        } else if (isWebGL && (method === MathNode.MIN || method === MathNode.MAX) || method === MathNode.MOD) {\n          params.push(a.build(builder, inputType), b.build(builder, builder.getTypeLength(b.getNodeType(builder)) === 1 ? 'float' : inputType));\n        } else if (method === MathNode.REFRACT) {\n          params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, 'float'));\n        } else if (method === MathNode.MIX) {\n          params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, builder.getTypeLength(c.getNodeType(builder)) === 1 ? 'float' : inputType));\n        } else {\n          params.push(a.build(builder, inputType));\n\n          if (c !== null) {\n            params.push(b.build(builder, inputType), c.build(builder, inputType));\n          } else if (b !== null) {\n            params.push(b.build(builder, inputType));\n          }\n        }\n\n        return builder.format(\"\".concat(builder.getMethod(method), \"( \").concat(params.join(', '), \" )\"), type, output);\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(MathNode.prototype), \"serialize\", this).call(this, data);\n\n      data.method = this.method;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(MathNode.prototype), \"deserialize\", this).call(this, data);\n\n      this.method = data.method;\n    }\n  }]);\n\n  return MathNode;\n}(TempNode);\n\n_defineProperty(MathNode, \"RAD\", 'radians');\n\n_defineProperty(MathNode, \"DEG\", 'degrees');\n\n_defineProperty(MathNode, \"EXP\", 'exp');\n\n_defineProperty(MathNode, \"EXP2\", 'exp2');\n\n_defineProperty(MathNode, \"LOG\", 'log');\n\n_defineProperty(MathNode, \"LOG2\", 'log2');\n\n_defineProperty(MathNode, \"SQRT\", 'sqrt');\n\n_defineProperty(MathNode, \"INV_SQRT\", 'inversesqrt');\n\n_defineProperty(MathNode, \"FLOOR\", 'floor');\n\n_defineProperty(MathNode, \"CEIL\", 'ceil');\n\n_defineProperty(MathNode, \"NORMALIZE\", 'normalize');\n\n_defineProperty(MathNode, \"FRACT\", 'fract');\n\n_defineProperty(MathNode, \"SIN\", 'sin');\n\n_defineProperty(MathNode, \"COS\", 'cos');\n\n_defineProperty(MathNode, \"TAN\", 'tan');\n\n_defineProperty(MathNode, \"ASIN\", 'asin');\n\n_defineProperty(MathNode, \"ACOS\", 'acos');\n\n_defineProperty(MathNode, \"ATAN\", 'atan');\n\n_defineProperty(MathNode, \"ABS\", 'abs');\n\n_defineProperty(MathNode, \"SIGN\", 'sign');\n\n_defineProperty(MathNode, \"LENGTH\", 'length');\n\n_defineProperty(MathNode, \"NEGATE\", 'negate');\n\n_defineProperty(MathNode, \"INVERT\", 'invert');\n\n_defineProperty(MathNode, \"DFDX\", 'dFdx');\n\n_defineProperty(MathNode, \"DFDY\", 'dFdy');\n\n_defineProperty(MathNode, \"SATURATE\", 'saturate');\n\n_defineProperty(MathNode, \"ROUND\", 'round');\n\n_defineProperty(MathNode, \"MIN\", 'min');\n\n_defineProperty(MathNode, \"MAX\", 'max');\n\n_defineProperty(MathNode, \"MOD\", 'mod');\n\n_defineProperty(MathNode, \"STEP\", 'step');\n\n_defineProperty(MathNode, \"REFLECT\", 'reflect');\n\n_defineProperty(MathNode, \"DISTANCE\", 'distance');\n\n_defineProperty(MathNode, \"DOT\", 'dot');\n\n_defineProperty(MathNode, \"CROSS\", 'cross');\n\n_defineProperty(MathNode, \"POW\", 'pow');\n\n_defineProperty(MathNode, \"TRANSFORM_DIRECTION\", 'transformDirection');\n\n_defineProperty(MathNode, \"MIX\", 'mix');\n\n_defineProperty(MathNode, \"CLAMP\", 'clamp');\n\n_defineProperty(MathNode, \"REFRACT\", 'refract');\n\n_defineProperty(MathNode, \"SMOOTHSTEP\", 'smoothstep');\n\n_defineProperty(MathNode, \"FACEFORWARD\", 'faceforward');\n\nexport default MathNode;","map":{"version":3,"names":["_defineProperty","TempNode","ExpressionNode","JoinNode","SplitNode","OperatorNode","MathNode","method","aNode","bNode","cNode","builder","aType","getNodeType","bType","cType","aLen","getTypeLength","bLen","cLen","LENGTH","DISTANCE","DOT","CROSS","getInputType","output","type","inputType","a","b","c","isWebGL","renderer","isWebGLRenderer","DFDX","DFDY","build","TRANSFORM_DIRECTION","tA","tB","isMatrix","getType","mulNode","NORMALIZE","SATURATE","format","NEGATE","INVERT","params","push","STEP","MIN","MAX","MOD","REFRACT","MIX","getMethod","join","data"],"sources":["D:/Jord/l4fycy/node_modules/three-stdlib/nodes/math/MathNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport TempNode from '../core/TempNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport OperatorNode from './OperatorNode.js';\n\nclass MathNode extends TempNode {\n  // 1 input\n  // 2 inputs\n  // 3 inputs\n  constructor(method, aNode, bNode = null, cNode = null) {\n    super();\n    this.method = method;\n    this.aNode = aNode;\n    this.bNode = bNode;\n    this.cNode = cNode;\n  }\n\n  getInputType(builder) {\n    const aType = this.aNode.getNodeType(builder);\n    const bType = this.bNode ? this.bNode.getNodeType(builder) : null;\n    const cType = this.cNode ? this.cNode.getNodeType(builder) : null;\n    const aLen = builder.getTypeLength(aType);\n    const bLen = builder.getTypeLength(bType);\n    const cLen = builder.getTypeLength(cType);\n\n    if (aLen > bLen && aLen > cLen) {\n      return aType;\n    } else if (bLen > cLen) {\n      return bType;\n    } else if (cLen > aLen) {\n      return cType;\n    }\n\n    return aType;\n  }\n\n  getNodeType(builder) {\n    const method = this.method;\n\n    if (method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT) {\n      return 'float';\n    } else if (method === MathNode.CROSS) {\n      return 'vec3';\n    } else {\n      return this.getInputType(builder);\n    }\n  }\n\n  generate(builder, output) {\n    const method = this.method;\n    const type = this.getNodeType(builder);\n    const inputType = this.getInputType(builder);\n    const a = this.aNode;\n    const b = this.bNode;\n    const c = this.cNode;\n    const isWebGL = builder.renderer.isWebGLRenderer === true;\n\n    if (isWebGL && (method === MathNode.DFDX || method === MathNode.DFDY) && output === 'vec3') {\n      // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n      return new JoinNode([new MathNode(method, new SplitNode(a, 'x')), new MathNode(method, new SplitNode(a, 'y')), new MathNode(method, new SplitNode(a, 'z'))]).build(builder);\n    } else if (method === MathNode.TRANSFORM_DIRECTION) {\n      // dir can be either a direction vector or a normal vector\n      // upper-left 3x3 of matrix is assumed to be orthogonal\n      let tA = a;\n      let tB = b;\n\n      if (builder.isMatrix(tA.getNodeType(builder))) {\n        tB = new ExpressionNode(`${builder.getType('vec4')}( ${tB.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      } else {\n        tA = new ExpressionNode(`${builder.getType('vec4')}( ${tA.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      }\n\n      const mulNode = new SplitNode(new OperatorNode('*', tA, tB), 'xyz');\n      return new MathNode(MathNode.NORMALIZE, mulNode).build(builder);\n    } else if (method === MathNode.SATURATE) {\n      return builder.format(`clamp( ${a.build(builder, inputType)}, 0.0, 1.0 )`, type, output);\n    } else if (method === MathNode.NEGATE) {\n      return builder.format('( -' + a.build(builder, inputType) + ' )', type, output);\n    } else if (method === MathNode.INVERT) {\n      return builder.format('( 1.0 - ' + a.build(builder, inputType) + ' )', type, output);\n    } else {\n      const params = [];\n\n      if (method === MathNode.CROSS) {\n        params.push(a.build(builder, type), b.build(builder, type));\n      } else if (method === MathNode.STEP) {\n        params.push(a.build(builder, builder.getTypeLength(a.getNodeType(builder)) === 1 ? 'float' : inputType), b.build(builder, inputType));\n      } else if (isWebGL && (method === MathNode.MIN || method === MathNode.MAX) || method === MathNode.MOD) {\n        params.push(a.build(builder, inputType), b.build(builder, builder.getTypeLength(b.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else if (method === MathNode.REFRACT) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, 'float'));\n      } else if (method === MathNode.MIX) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, builder.getTypeLength(c.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else {\n        params.push(a.build(builder, inputType));\n\n        if (c !== null) {\n          params.push(b.build(builder, inputType), c.build(builder, inputType));\n        } else if (b !== null) {\n          params.push(b.build(builder, inputType));\n        }\n      }\n\n      return builder.format(`${builder.getMethod(method)}( ${params.join(', ')} )`, type, output);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.method = this.method;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.method = data.method;\n  }\n\n}\n\n_defineProperty(MathNode, \"RAD\", 'radians');\n\n_defineProperty(MathNode, \"DEG\", 'degrees');\n\n_defineProperty(MathNode, \"EXP\", 'exp');\n\n_defineProperty(MathNode, \"EXP2\", 'exp2');\n\n_defineProperty(MathNode, \"LOG\", 'log');\n\n_defineProperty(MathNode, \"LOG2\", 'log2');\n\n_defineProperty(MathNode, \"SQRT\", 'sqrt');\n\n_defineProperty(MathNode, \"INV_SQRT\", 'inversesqrt');\n\n_defineProperty(MathNode, \"FLOOR\", 'floor');\n\n_defineProperty(MathNode, \"CEIL\", 'ceil');\n\n_defineProperty(MathNode, \"NORMALIZE\", 'normalize');\n\n_defineProperty(MathNode, \"FRACT\", 'fract');\n\n_defineProperty(MathNode, \"SIN\", 'sin');\n\n_defineProperty(MathNode, \"COS\", 'cos');\n\n_defineProperty(MathNode, \"TAN\", 'tan');\n\n_defineProperty(MathNode, \"ASIN\", 'asin');\n\n_defineProperty(MathNode, \"ACOS\", 'acos');\n\n_defineProperty(MathNode, \"ATAN\", 'atan');\n\n_defineProperty(MathNode, \"ABS\", 'abs');\n\n_defineProperty(MathNode, \"SIGN\", 'sign');\n\n_defineProperty(MathNode, \"LENGTH\", 'length');\n\n_defineProperty(MathNode, \"NEGATE\", 'negate');\n\n_defineProperty(MathNode, \"INVERT\", 'invert');\n\n_defineProperty(MathNode, \"DFDX\", 'dFdx');\n\n_defineProperty(MathNode, \"DFDY\", 'dFdy');\n\n_defineProperty(MathNode, \"SATURATE\", 'saturate');\n\n_defineProperty(MathNode, \"ROUND\", 'round');\n\n_defineProperty(MathNode, \"MIN\", 'min');\n\n_defineProperty(MathNode, \"MAX\", 'max');\n\n_defineProperty(MathNode, \"MOD\", 'mod');\n\n_defineProperty(MathNode, \"STEP\", 'step');\n\n_defineProperty(MathNode, \"REFLECT\", 'reflect');\n\n_defineProperty(MathNode, \"DISTANCE\", 'distance');\n\n_defineProperty(MathNode, \"DOT\", 'dot');\n\n_defineProperty(MathNode, \"CROSS\", 'cross');\n\n_defineProperty(MathNode, \"POW\", 'pow');\n\n_defineProperty(MathNode, \"TRANSFORM_DIRECTION\", 'transformDirection');\n\n_defineProperty(MathNode, \"MIX\", 'mix');\n\n_defineProperty(MathNode, \"CLAMP\", 'clamp');\n\n_defineProperty(MathNode, \"REFRACT\", 'refract');\n\n_defineProperty(MathNode, \"SMOOTHSTEP\", 'smoothstep');\n\n_defineProperty(MathNode, \"FACEFORWARD\", 'faceforward');\n\nexport default MathNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}