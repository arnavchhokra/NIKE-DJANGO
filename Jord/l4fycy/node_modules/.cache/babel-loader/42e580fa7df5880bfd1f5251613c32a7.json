{"ast":null,"code":"import _classCallCheck from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { InstancedBufferGeometry, Box3, Vector3, Float32BufferAttribute, InstancedInterleavedBuffer, InterleavedBufferAttribute, WireframeGeometry, Sphere } from 'three';\n\nvar LineSegmentsGeometry = /*#__PURE__*/function (_InstancedBufferGeome) {\n  _inherits(LineSegmentsGeometry, _InstancedBufferGeome);\n\n  var _super = _createSuper(LineSegmentsGeometry);\n\n  function LineSegmentsGeometry() {\n    var _this;\n\n    _classCallCheck(this, LineSegmentsGeometry);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"isLineSegmentsGeometry\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", 'LineSegmentsGeometry');\n\n    _defineProperty(_assertThisInitialized(_this), \"boundingBox\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"boundingSphere\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"box\", new Box3());\n\n    _defineProperty(_assertThisInitialized(_this), \"vector\", new Vector3());\n\n    var positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n    var uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n    var index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n\n    _this.setIndex(index);\n\n    _this.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\n    _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    return _this;\n  }\n\n  _createClass(LineSegmentsGeometry, [{\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix) {\n      var start = this.attributes.instanceStart;\n      var end = this.attributes.instanceEnd;\n\n      if (start !== undefined) {\n        start.applyMatrix4(matrix);\n        end.applyMatrix4(matrix);\n        start.needsUpdate = true;\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setPositions\",\n    value: function setPositions(array) {\n      var lineSegments;\n\n      if (array instanceof Float32Array) {\n        lineSegments = array;\n      } else if (Array.isArray(array)) {\n        lineSegments = new Float32Array(array);\n      } else {\n        console.error('LineSegmentsGeometry.setPosition requires either a Float32Array or regular array of numbers');\n        return this;\n      }\n\n      var instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1); // xyz, xyz\n\n      this.setAttribute('instanceStart', new InterleavedBufferAttribute(instanceBuffer, 3, 0)); // xyz\n\n      this.setAttribute('instanceEnd', new InterleavedBufferAttribute(instanceBuffer, 3, 3)); // xyz\n      //\n\n      this.computeBoundingBox();\n      this.computeBoundingSphere();\n      return this;\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors(array) {\n      var colors;\n\n      if (array instanceof Float32Array) {\n        colors = array;\n      } else if (Array.isArray(array)) {\n        colors = new Float32Array(array);\n      } else {\n        console.error('LineSegmentsGeometry.setColors requires either a Float32Array or regular array of numbers');\n        return this;\n      }\n\n      var instanceColorBuffer = new InstancedInterleavedBuffer(colors, 6, 1); // rgb, rgb\n\n      this.setAttribute('instanceColorStart', new InterleavedBufferAttribute(instanceColorBuffer, 3, 0)); // rgb\n\n      this.setAttribute('instanceColorEnd', new InterleavedBufferAttribute(instanceColorBuffer, 3, 3)); // rgb\n\n      return this;\n    }\n  }, {\n    key: \"fromWireframeGeometry\",\n    value: function fromWireframeGeometry(geometry) {\n      this.setPositions(Array.from(geometry.attributes.position.array));\n      return this;\n    }\n  }, {\n    key: \"fromEdgesGeometry\",\n    value: function fromEdgesGeometry(geometry) {\n      this.setPositions(Array.from(geometry.attributes.position.array));\n      return this;\n    }\n  }, {\n    key: \"fromMesh\",\n    value: function fromMesh(mesh) {\n      this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry));\n      return this;\n    }\n  }, {\n    key: \"fromLineSegments\",\n    value: function fromLineSegments(lineSegments) {\n      var geometry = lineSegments.geometry;\n\n      if (geometry.isBufferGeometry) {\n        this.setPositions(Array.from(geometry.attributes.position.array)); // assumes non-indexed\n      } // set colors, maybe\n\n\n      return this;\n    }\n  }, {\n    key: \"computeBoundingBox\",\n    value: function computeBoundingBox() {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      var start = this.attributes.instanceStart;\n      var end = this.attributes.instanceEnd;\n\n      if (start !== undefined && end !== undefined) {\n        this.boundingBox.setFromBufferAttribute(start);\n        this.box.setFromBufferAttribute(end);\n        this.boundingBox.union(this.box);\n      }\n    }\n  }, {\n    key: \"computeBoundingSphere\",\n    value: function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      if (this.boundingBox === null) {\n        this.computeBoundingBox();\n      }\n\n      var start = this.attributes.instanceStart;\n      var end = this.attributes.instanceEnd;\n\n      if (start !== undefined && end !== undefined) {\n        var center = this.boundingSphere.center;\n\n        if (this.boundingBox) {\n          this.boundingBox.getCenter(center);\n        }\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = start.count; i < il; i++) {\n          this.vector.fromBufferAttribute(start, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(this.vector));\n          this.vector.fromBufferAttribute(end, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(this.vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this);\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {// todo\n    }\n  }]);\n\n  return LineSegmentsGeometry;\n}(InstancedBufferGeometry);\n\nexport { LineSegmentsGeometry };","map":{"version":3,"names":["_defineProperty","InstancedBufferGeometry","Box3","Vector3","Float32BufferAttribute","InstancedInterleavedBuffer","InterleavedBufferAttribute","WireframeGeometry","Sphere","LineSegmentsGeometry","positions","uvs","index","setIndex","setAttribute","matrix","start","attributes","instanceStart","end","instanceEnd","undefined","applyMatrix4","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","array","lineSegments","Float32Array","Array","isArray","console","error","instanceBuffer","colors","instanceColorBuffer","geometry","setPositions","from","position","mesh","fromWireframeGeometry","isBufferGeometry","setFromBufferAttribute","box","union","center","getCenter","maxRadiusSq","i","il","count","vector","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN"],"sources":["D:/Jord/l4fycy/node_modules/three-stdlib/lines/LineSegmentsGeometry.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { InstancedBufferGeometry, Box3, Vector3, Float32BufferAttribute, InstancedInterleavedBuffer, InterleavedBufferAttribute, WireframeGeometry, Sphere } from 'three';\n\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"isLineSegmentsGeometry\", true);\n\n    _defineProperty(this, \"type\", 'LineSegmentsGeometry');\n\n    _defineProperty(this, \"boundingBox\", null);\n\n    _defineProperty(this, \"boundingSphere\", null);\n\n    _defineProperty(this, \"box\", new Box3());\n\n    _defineProperty(this, \"vector\", new Vector3());\n\n    const positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n    const uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n    const index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n    this.setIndex(index);\n    this.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  applyMatrix4(matrix) {\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined) {\n      start.applyMatrix4(matrix);\n      end.applyMatrix4(matrix);\n      start.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  }\n\n  setPositions(array) {\n    let lineSegments;\n\n    if (array instanceof Float32Array) {\n      lineSegments = array;\n    } else if (Array.isArray(array)) {\n      lineSegments = new Float32Array(array);\n    } else {\n      console.error('LineSegmentsGeometry.setPosition requires either a Float32Array or regular array of numbers');\n      return this;\n    }\n\n    const instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1); // xyz, xyz\n\n    this.setAttribute('instanceStart', new InterleavedBufferAttribute(instanceBuffer, 3, 0)); // xyz\n\n    this.setAttribute('instanceEnd', new InterleavedBufferAttribute(instanceBuffer, 3, 3)); // xyz\n    //\n\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n    return this;\n  }\n\n  setColors(array) {\n    let colors;\n\n    if (array instanceof Float32Array) {\n      colors = array;\n    } else if (Array.isArray(array)) {\n      colors = new Float32Array(array);\n    } else {\n      console.error('LineSegmentsGeometry.setColors requires either a Float32Array or regular array of numbers');\n      return this;\n    }\n\n    const instanceColorBuffer = new InstancedInterleavedBuffer(colors, 6, 1); // rgb, rgb\n\n    this.setAttribute('instanceColorStart', new InterleavedBufferAttribute(instanceColorBuffer, 3, 0)); // rgb\n\n    this.setAttribute('instanceColorEnd', new InterleavedBufferAttribute(instanceColorBuffer, 3, 3)); // rgb\n\n    return this;\n  }\n\n  fromWireframeGeometry(geometry) {\n    this.setPositions(Array.from(geometry.attributes.position.array));\n    return this;\n  }\n\n  fromEdgesGeometry(geometry) {\n    this.setPositions(Array.from(geometry.attributes.position.array));\n    return this;\n  }\n\n  fromMesh(mesh) {\n    this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry));\n    return this;\n  }\n\n  fromLineSegments(lineSegments) {\n    const geometry = lineSegments.geometry;\n\n    if (geometry.isBufferGeometry) {\n      this.setPositions(Array.from(geometry.attributes.position.array)); // assumes non-indexed\n    } // set colors, maybe\n\n\n    return this;\n  }\n\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined && end !== undefined) {\n      this.boundingBox.setFromBufferAttribute(start);\n      this.box.setFromBufferAttribute(end);\n      this.boundingBox.union(this.box);\n    }\n  }\n\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n\n    if (this.boundingBox === null) {\n      this.computeBoundingBox();\n    }\n\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined && end !== undefined) {\n      const center = this.boundingSphere.center;\n\n      if (this.boundingBox) {\n        this.boundingBox.getCenter(center);\n      }\n\n      let maxRadiusSq = 0;\n\n      for (let i = 0, il = start.count; i < il; i++) {\n        this.vector.fromBufferAttribute(start, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(this.vector));\n        this.vector.fromBufferAttribute(end, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(this.vector));\n      }\n\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error('THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this);\n      }\n    }\n  }\n\n  toJSON() {// todo\n  }\n\n}\n\nexport { LineSegmentsGeometry };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}