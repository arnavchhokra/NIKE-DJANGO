{"ast":null,"code":"import _classCallCheck from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Group, BufferGeometry, BufferAttribute, LineSegments, LineBasicMaterial, Box3Helper, Box3, MeshBasicMaterial, DoubleSide, Mesh, PlaneGeometry } from 'three';\n\nvar CSMHelper = /*#__PURE__*/function (_Group) {\n  _inherits(CSMHelper, _Group);\n\n  var _super = _createSuper(CSMHelper);\n\n  function CSMHelper(csm) {\n    var _this;\n\n    _classCallCheck(this, CSMHelper);\n\n    _this = _super.call(this);\n    _this.csm = csm;\n    _this.displayFrustum = true;\n    _this.displayPlanes = true;\n    _this.displayShadowBounds = true;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = new Float32Array(24);\n    var frustumGeometry = new BufferGeometry();\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\n    frustumGeometry.setAttribute('position', new BufferAttribute(positions, 3, false));\n    var frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\n\n    _this.add(frustumLines);\n\n    _this.frustumLines = frustumLines;\n    _this.cascadeLines = [];\n    _this.cascadePlanes = [];\n    _this.shadowLines = [];\n    return _this;\n  }\n\n  _createClass(CSMHelper, [{\n    key: \"updateVisibility\",\n    value: function updateVisibility() {\n      var displayFrustum = this.displayFrustum;\n      var displayPlanes = this.displayPlanes;\n      var displayShadowBounds = this.displayShadowBounds;\n      var frustumLines = this.frustumLines;\n      var cascadeLines = this.cascadeLines;\n      var cascadePlanes = this.cascadePlanes;\n      var shadowLines = this.shadowLines;\n\n      for (var i = 0, l = cascadeLines.length; i < l; i++) {\n        var cascadeLine = cascadeLines[i];\n        var cascadePlane = cascadePlanes[i];\n        var shadowLineGroup = shadowLines[i];\n        cascadeLine.visible = displayFrustum;\n        cascadePlane.visible = displayFrustum && displayPlanes;\n        shadowLineGroup.visible = displayShadowBounds;\n      }\n\n      frustumLines.visible = displayFrustum;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var csm = this.csm;\n      var camera = csm.camera;\n      var cascades = csm.cascades;\n      var mainFrustum = csm.mainFrustum;\n      var frustums = csm.frustums;\n      var lights = csm.lights;\n      var frustumLines = this.frustumLines;\n      var frustumLinePositions = frustumLines.geometry.getAttribute('position');\n      var cascadeLines = this.cascadeLines;\n      var cascadePlanes = this.cascadePlanes;\n      var shadowLines = this.shadowLines;\n      this.position.copy(camera.position);\n      this.quaternion.copy(camera.quaternion);\n      this.scale.copy(camera.scale);\n      this.updateMatrixWorld(true);\n\n      while (cascadeLines.length > cascades) {\n        this.remove(cascadeLines.pop());\n        this.remove(cascadePlanes.pop());\n        this.remove(shadowLines.pop());\n      }\n\n      while (cascadeLines.length < cascades) {\n        var cascadeLine = new Box3Helper(new Box3(), 0xffffff);\n        var planeMat = new MeshBasicMaterial({\n          transparent: true,\n          opacity: 0.1,\n          depthWrite: false,\n          side: DoubleSide\n        });\n        var cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\n        var shadowLineGroup = new Group();\n        var shadowLine = new Box3Helper(new Box3(), 0xffff00);\n        shadowLineGroup.add(shadowLine);\n        this.add(cascadeLine);\n        this.add(cascadePlane);\n        this.add(shadowLineGroup);\n        cascadeLines.push(cascadeLine);\n        cascadePlanes.push(cascadePlane);\n        shadowLines.push(shadowLineGroup);\n      }\n\n      for (var i = 0; i < cascades; i++) {\n        var frustum = frustums[i];\n        var light = lights[i];\n        var shadowCam = light.shadow.camera;\n        var _farVerts = frustum.vertices.far;\n        var _cascadeLine = cascadeLines[i];\n        var _cascadePlane = cascadePlanes[i];\n        var _shadowLineGroup = shadowLines[i];\n        var _shadowLine = _shadowLineGroup.children[0];\n\n        _cascadeLine.box.min.copy(_farVerts[2]);\n\n        _cascadeLine.box.max.copy(_farVerts[0]);\n\n        _cascadeLine.box.max.z += 1e-4;\n\n        _cascadePlane.position.addVectors(_farVerts[0], _farVerts[2]);\n\n        _cascadePlane.position.multiplyScalar(0.5);\n\n        _cascadePlane.scale.subVectors(_farVerts[0], _farVerts[2]);\n\n        _cascadePlane.scale.z = 1e-4;\n        this.remove(_shadowLineGroup);\n\n        _shadowLineGroup.position.copy(shadowCam.position);\n\n        _shadowLineGroup.quaternion.copy(shadowCam.quaternion);\n\n        _shadowLineGroup.scale.copy(shadowCam.scale);\n\n        _shadowLineGroup.updateMatrixWorld(true);\n\n        this.attach(_shadowLineGroup);\n\n        _shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\n\n        _shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\n      }\n\n      var nearVerts = mainFrustum.vertices.near;\n      var farVerts = mainFrustum.vertices.far;\n      frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\n      frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\n      frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\n      frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\n      frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\n      frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\n      frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\n      frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\n      frustumLinePositions.needsUpdate = true;\n    }\n  }]);\n\n  return CSMHelper;\n}(Group);\n\nexport { CSMHelper };","map":{"version":3,"names":["Group","BufferGeometry","BufferAttribute","LineSegments","LineBasicMaterial","Box3Helper","Box3","MeshBasicMaterial","DoubleSide","Mesh","PlaneGeometry","CSMHelper","csm","displayFrustum","displayPlanes","displayShadowBounds","indices","Uint16Array","positions","Float32Array","frustumGeometry","setIndex","setAttribute","frustumLines","add","cascadeLines","cascadePlanes","shadowLines","i","l","length","cascadeLine","cascadePlane","shadowLineGroup","visible","camera","cascades","mainFrustum","frustums","lights","frustumLinePositions","geometry","getAttribute","position","copy","quaternion","scale","updateMatrixWorld","remove","pop","planeMat","transparent","opacity","depthWrite","side","shadowLine","push","frustum","light","shadowCam","shadow","farVerts","vertices","far","children","box","min","max","z","addVectors","multiplyScalar","subVectors","attach","set","bottom","left","top","right","near","nearVerts","setXYZ","x","y","needsUpdate"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/csm/CSMHelper.js"],"sourcesContent":["import { Group, BufferGeometry, BufferAttribute, LineSegments, LineBasicMaterial, Box3Helper, Box3, MeshBasicMaterial, DoubleSide, Mesh, PlaneGeometry } from 'three';\r\n\r\nclass CSMHelper extends Group {\r\n  constructor(csm) {\r\n    super();\r\n    this.csm = csm;\r\n    this.displayFrustum = true;\r\n    this.displayPlanes = true;\r\n    this.displayShadowBounds = true;\r\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\r\n    const positions = new Float32Array(24);\r\n    const frustumGeometry = new BufferGeometry();\r\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\r\n    frustumGeometry.setAttribute('position', new BufferAttribute(positions, 3, false));\r\n    const frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\r\n    this.add(frustumLines);\r\n    this.frustumLines = frustumLines;\r\n    this.cascadeLines = [];\r\n    this.cascadePlanes = [];\r\n    this.shadowLines = [];\r\n  }\r\n\r\n  updateVisibility() {\r\n    const displayFrustum = this.displayFrustum;\r\n    const displayPlanes = this.displayPlanes;\r\n    const displayShadowBounds = this.displayShadowBounds;\r\n    const frustumLines = this.frustumLines;\r\n    const cascadeLines = this.cascadeLines;\r\n    const cascadePlanes = this.cascadePlanes;\r\n    const shadowLines = this.shadowLines;\r\n\r\n    for (let i = 0, l = cascadeLines.length; i < l; i++) {\r\n      const cascadeLine = cascadeLines[i];\r\n      const cascadePlane = cascadePlanes[i];\r\n      const shadowLineGroup = shadowLines[i];\r\n      cascadeLine.visible = displayFrustum;\r\n      cascadePlane.visible = displayFrustum && displayPlanes;\r\n      shadowLineGroup.visible = displayShadowBounds;\r\n    }\r\n\r\n    frustumLines.visible = displayFrustum;\r\n  }\r\n\r\n  update() {\r\n    const csm = this.csm;\r\n    const camera = csm.camera;\r\n    const cascades = csm.cascades;\r\n    const mainFrustum = csm.mainFrustum;\r\n    const frustums = csm.frustums;\r\n    const lights = csm.lights;\r\n    const frustumLines = this.frustumLines;\r\n    const frustumLinePositions = frustumLines.geometry.getAttribute('position');\r\n    const cascadeLines = this.cascadeLines;\r\n    const cascadePlanes = this.cascadePlanes;\r\n    const shadowLines = this.shadowLines;\r\n    this.position.copy(camera.position);\r\n    this.quaternion.copy(camera.quaternion);\r\n    this.scale.copy(camera.scale);\r\n    this.updateMatrixWorld(true);\r\n\r\n    while (cascadeLines.length > cascades) {\r\n      this.remove(cascadeLines.pop());\r\n      this.remove(cascadePlanes.pop());\r\n      this.remove(shadowLines.pop());\r\n    }\r\n\r\n    while (cascadeLines.length < cascades) {\r\n      const cascadeLine = new Box3Helper(new Box3(), 0xffffff);\r\n      const planeMat = new MeshBasicMaterial({\r\n        transparent: true,\r\n        opacity: 0.1,\r\n        depthWrite: false,\r\n        side: DoubleSide\r\n      });\r\n      const cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\r\n      const shadowLineGroup = new Group();\r\n      const shadowLine = new Box3Helper(new Box3(), 0xffff00);\r\n      shadowLineGroup.add(shadowLine);\r\n      this.add(cascadeLine);\r\n      this.add(cascadePlane);\r\n      this.add(shadowLineGroup);\r\n      cascadeLines.push(cascadeLine);\r\n      cascadePlanes.push(cascadePlane);\r\n      shadowLines.push(shadowLineGroup);\r\n    }\r\n\r\n    for (let i = 0; i < cascades; i++) {\r\n      const frustum = frustums[i];\r\n      const light = lights[i];\r\n      const shadowCam = light.shadow.camera;\r\n      const farVerts = frustum.vertices.far;\r\n      const cascadeLine = cascadeLines[i];\r\n      const cascadePlane = cascadePlanes[i];\r\n      const shadowLineGroup = shadowLines[i];\r\n      const shadowLine = shadowLineGroup.children[0];\r\n      cascadeLine.box.min.copy(farVerts[2]);\r\n      cascadeLine.box.max.copy(farVerts[0]);\r\n      cascadeLine.box.max.z += 1e-4;\r\n      cascadePlane.position.addVectors(farVerts[0], farVerts[2]);\r\n      cascadePlane.position.multiplyScalar(0.5);\r\n      cascadePlane.scale.subVectors(farVerts[0], farVerts[2]);\r\n      cascadePlane.scale.z = 1e-4;\r\n      this.remove(shadowLineGroup);\r\n      shadowLineGroup.position.copy(shadowCam.position);\r\n      shadowLineGroup.quaternion.copy(shadowCam.quaternion);\r\n      shadowLineGroup.scale.copy(shadowCam.scale);\r\n      shadowLineGroup.updateMatrixWorld(true);\r\n      this.attach(shadowLineGroup);\r\n      shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\r\n      shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\r\n    }\r\n\r\n    const nearVerts = mainFrustum.vertices.near;\r\n    const farVerts = mainFrustum.vertices.far;\r\n    frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\r\n    frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\r\n    frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\r\n    frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\r\n    frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\r\n    frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\r\n    frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\r\n    frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\r\n    frustumLinePositions.needsUpdate = true;\r\n  }\r\n\r\n}\r\n\r\nexport { CSMHelper };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}