{"ast":null,"code":"import { Object3D, Box2, Color, Vector3, Matrix3, Matrix4, Camera } from 'three';\nimport { Projector, RenderableSprite, RenderableLine, RenderableFace } from './Projector.js';\n\nvar SVGObject = function SVGObject(node) {\n  Object3D.call(this);\n  this.node = node;\n};\n\nSVGObject.prototype = Object.create(Object3D.prototype);\nSVGObject.prototype.constructor = SVGObject;\n\nvar SVGRenderer = function SVGRenderer() {\n  var _this = this,\n      _renderData,\n      _elements,\n      _lights,\n      _projector = new Projector(),\n      _svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),\n      _svgWidth,\n      _svgHeight,\n      _svgWidthHalf,\n      _svgHeightHalf,\n      _v1,\n      _v2,\n      _v3,\n      _clipBox = new Box2(),\n      _elemBox = new Box2(),\n      _color = new Color(),\n      _diffuseColor = new Color(),\n      _ambientLight = new Color(),\n      _directionalLights = new Color(),\n      _pointLights = new Color(),\n      _clearColor = new Color(),\n      _vector3 = new Vector3(),\n      // Needed for PointLight\n  _centroid = new Vector3(),\n      _normal = new Vector3(),\n      _normalViewMatrix = new Matrix3(),\n      _viewMatrix = new Matrix4(),\n      _viewProjectionMatrix = new Matrix4(),\n      _svgPathPool = [],\n      _svgNode,\n      _pathCount = 0,\n      _currentPath,\n      _currentStyle,\n      _quality = 1,\n      _precision = null;\n\n  this.domElement = _svg;\n  this.autoClear = true;\n  this.sortObjects = true;\n  this.sortElements = true;\n  this.overdraw = 0.5;\n  this.info = {\n    render: {\n      vertices: 0,\n      faces: 0\n    }\n  };\n\n  this.setQuality = function (quality) {\n    switch (quality) {\n      case 'high':\n        _quality = 1;\n        break;\n\n      case 'low':\n        _quality = 0;\n        break;\n    }\n  };\n\n  this.setClearColor = function (color) {\n    _clearColor.set(color);\n  };\n\n  this.setPixelRatio = function () {};\n\n  this.setSize = function (width, height) {\n    _svgWidth = width;\n    _svgHeight = height;\n    _svgWidthHalf = _svgWidth / 2;\n    _svgHeightHalf = _svgHeight / 2;\n\n    _svg.setAttribute('viewBox', -_svgWidthHalf + ' ' + -_svgHeightHalf + ' ' + _svgWidth + ' ' + _svgHeight);\n\n    _svg.setAttribute('width', _svgWidth);\n\n    _svg.setAttribute('height', _svgHeight);\n\n    _clipBox.min.set(-_svgWidthHalf, -_svgHeightHalf);\n\n    _clipBox.max.set(_svgWidthHalf, _svgHeightHalf);\n  };\n\n  this.getSize = function () {\n    return {\n      width: _svgWidth,\n      height: _svgHeight\n    };\n  };\n\n  this.setPrecision = function (precision) {\n    _precision = precision;\n  };\n\n  function removeChildNodes() {\n    _pathCount = 0;\n\n    while (_svg.childNodes.length > 0) {\n      _svg.removeChild(_svg.childNodes[0]);\n    }\n  }\n\n  function convert(c) {\n    return _precision !== null ? c.toFixed(_precision) : c;\n  }\n\n  this.clear = function () {\n    removeChildNodes();\n    _svg.style.backgroundColor = _clearColor.getStyle();\n  };\n\n  this.render = function (scene, camera) {\n    if (camera instanceof Camera === false) {\n      console.error('THREE.SVGRenderer.render: camera is not an instance of Camera.');\n      return;\n    }\n\n    var background = scene.background;\n\n    if (background && background.isColor) {\n      removeChildNodes();\n      _svg.style.backgroundColor = background.getStyle();\n    } else if (this.autoClear === true) {\n      this.clear();\n    }\n\n    _this.info.render.vertices = 0;\n    _this.info.render.faces = 0;\n\n    _viewMatrix.copy(camera.matrixWorldInverse);\n\n    _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n\n    _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n    _elements = _renderData.elements;\n    _lights = _renderData.lights;\n\n    _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n\n    calculateLights(_lights); // reset accumulated path\n\n    _currentPath = '';\n    _currentStyle = '';\n\n    for (var e = 0, el = _elements.length; e < el; e++) {\n      var element = _elements[e];\n      var material = element.material;\n      if (material === undefined || material.opacity === 0) continue;\n\n      _elemBox.makeEmpty();\n\n      if (element instanceof RenderableSprite) {\n        _v1 = element;\n        _v1.x *= _svgWidthHalf;\n        _v1.y *= -_svgHeightHalf;\n        renderSprite(_v1, element, material);\n      } else if (element instanceof RenderableLine) {\n        _v1 = element.v1;\n        _v2 = element.v2;\n        _v1.positionScreen.x *= _svgWidthHalf;\n        _v1.positionScreen.y *= -_svgHeightHalf;\n        _v2.positionScreen.x *= _svgWidthHalf;\n        _v2.positionScreen.y *= -_svgHeightHalf;\n\n        _elemBox.setFromPoints([_v1.positionScreen, _v2.positionScreen]);\n\n        if (_clipBox.intersectsBox(_elemBox) === true) {\n          renderLine(_v1, _v2, element, material);\n        }\n      } else if (element instanceof RenderableFace) {\n        _v1 = element.v1;\n        _v2 = element.v2;\n        _v3 = element.v3;\n        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n        _v1.positionScreen.x *= _svgWidthHalf;\n        _v1.positionScreen.y *= -_svgHeightHalf;\n        _v2.positionScreen.x *= _svgWidthHalf;\n        _v2.positionScreen.y *= -_svgHeightHalf;\n        _v3.positionScreen.x *= _svgWidthHalf;\n        _v3.positionScreen.y *= -_svgHeightHalf;\n\n        if (this.overdraw > 0) {\n          expand(_v1.positionScreen, _v2.positionScreen, this.overdraw);\n          expand(_v2.positionScreen, _v3.positionScreen, this.overdraw);\n          expand(_v3.positionScreen, _v1.positionScreen, this.overdraw);\n        }\n\n        _elemBox.setFromPoints([_v1.positionScreen, _v2.positionScreen, _v3.positionScreen]);\n\n        if (_clipBox.intersectsBox(_elemBox) === true) {\n          renderFace3(_v1, _v2, _v3, element, material);\n        }\n      }\n    }\n\n    flushPath(); // just to flush last svg:path\n\n    scene.traverseVisible(function (object) {\n      if (object instanceof SVGObject) {\n        _vector3.setFromMatrixPosition(object.matrixWorld);\n\n        _vector3.applyMatrix4(_viewProjectionMatrix);\n\n        if (_vector3.z < -1 || _vector3.z > 1) return;\n        var x = _vector3.x * _svgWidthHalf;\n        var y = -_vector3.y * _svgHeightHalf;\n        var node = object.node;\n        node.setAttribute('transform', 'translate(' + x + ',' + y + ')');\n\n        _svg.appendChild(node);\n      }\n    });\n  };\n\n  function calculateLights(lights) {\n    _ambientLight.setRGB(0, 0, 0);\n\n    _directionalLights.setRGB(0, 0, 0);\n\n    _pointLights.setRGB(0, 0, 0);\n\n    for (var l = 0, ll = lights.length; l < ll; l++) {\n      var light = lights[l];\n      var lightColor = light.color;\n\n      if (light.isAmbientLight) {\n        _ambientLight.r += lightColor.r;\n        _ambientLight.g += lightColor.g;\n        _ambientLight.b += lightColor.b;\n      } else if (light.isDirectionalLight) {\n        _directionalLights.r += lightColor.r;\n        _directionalLights.g += lightColor.g;\n        _directionalLights.b += lightColor.b;\n      } else if (light.isPointLight) {\n        _pointLights.r += lightColor.r;\n        _pointLights.g += lightColor.g;\n        _pointLights.b += lightColor.b;\n      }\n    }\n  }\n\n  function calculateLight(lights, position, normal, color) {\n    for (var l = 0, ll = lights.length; l < ll; l++) {\n      var light = lights[l];\n      var lightColor = light.color;\n\n      if (light.isDirectionalLight) {\n        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n\n        var amount = normal.dot(lightPosition);\n        if (amount <= 0) continue;\n        amount *= light.intensity;\n        color.r += lightColor.r * amount;\n        color.g += lightColor.g * amount;\n        color.b += lightColor.b * amount;\n      } else if (light.isPointLight) {\n        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n\n        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n        if (amount <= 0) continue;\n        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n        if (amount == 0) continue;\n        amount *= light.intensity;\n        color.r += lightColor.r * amount;\n        color.g += lightColor.g * amount;\n        color.b += lightColor.b * amount;\n      }\n    }\n  }\n\n  function renderSprite(v1, element, material) {\n    var scaleX = element.scale.x * _svgWidthHalf;\n    var scaleY = element.scale.y * _svgHeightHalf;\n\n    if (material.isPointsMaterial) {\n      scaleX *= material.size;\n      scaleY *= material.size;\n    }\n\n    var path = 'M' + convert(v1.x - scaleX * 0.5) + ',' + convert(v1.y - scaleY * 0.5) + 'h' + convert(scaleX) + 'v' + convert(scaleY) + 'h' + convert(-scaleX) + 'z';\n    var style = '';\n\n    if (material.isSpriteMaterial || material.isPointsMaterial) {\n      style = 'fill:' + material.color.getStyle() + ';fill-opacity:' + material.opacity;\n    }\n\n    addPath(style, path);\n  }\n\n  function renderLine(v1, v2, element, material) {\n    var path = 'M' + convert(v1.positionScreen.x) + ',' + convert(v1.positionScreen.y) + 'L' + convert(v2.positionScreen.x) + ',' + convert(v2.positionScreen.y);\n\n    if (material.isLineBasicMaterial) {\n      var style = 'fill:none;stroke:' + material.color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.linewidth + ';stroke-linecap:' + material.linecap;\n\n      if (material.isLineDashedMaterial) {\n        style = style + ';stroke-dasharray:' + material.dashSize + ',' + material.gapSize;\n      }\n\n      addPath(style, path);\n    }\n  }\n\n  function renderFace3(v1, v2, v3, element, material) {\n    _this.info.render.vertices += 3;\n    _this.info.render.faces++;\n    var path = 'M' + convert(v1.positionScreen.x) + ',' + convert(v1.positionScreen.y) + 'L' + convert(v2.positionScreen.x) + ',' + convert(v2.positionScreen.y) + 'L' + convert(v3.positionScreen.x) + ',' + convert(v3.positionScreen.y) + 'z';\n    var style = '';\n\n    if (material.isMeshBasicMaterial) {\n      _color.copy(material.color);\n\n      if (material.vertexColors) {\n        _color.multiply(element.color);\n      }\n    } else if (material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial) {\n      _diffuseColor.copy(material.color);\n\n      if (material.vertexColors) {\n        _diffuseColor.multiply(element.color);\n      }\n\n      _color.copy(_ambientLight);\n\n      _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n\n      calculateLight(_lights, _centroid, element.normalModel, _color);\n\n      _color.multiply(_diffuseColor).add(material.emissive);\n    } else if (material.isMeshNormalMaterial) {\n      _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix).normalize();\n\n      _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(0.5).addScalar(0.5);\n    }\n\n    if (material.wireframe) {\n      style = 'fill:none;stroke:' + _color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.wireframeLinewidth + ';stroke-linecap:' + material.wireframeLinecap + ';stroke-linejoin:' + material.wireframeLinejoin;\n    } else {\n      style = 'fill:' + _color.getStyle() + ';fill-opacity:' + material.opacity;\n    }\n\n    addPath(style, path);\n  } // Hide anti-alias gaps\n\n\n  function expand(v1, v2, pixels) {\n    var x = v2.x - v1.x,\n        y = v2.y - v1.y,\n        det = x * x + y * y,\n        idet;\n    if (det === 0) return;\n    idet = pixels / Math.sqrt(det);\n    x *= idet;\n    y *= idet;\n    v2.x += x;\n    v2.y += y;\n    v1.x -= x;\n    v1.y -= y;\n  }\n\n  function addPath(style, path) {\n    if (_currentStyle === style) {\n      _currentPath += path;\n    } else {\n      flushPath();\n      _currentStyle = style;\n      _currentPath = path;\n    }\n  }\n\n  function flushPath() {\n    if (_currentPath) {\n      _svgNode = getPathNode(_pathCount++);\n\n      _svgNode.setAttribute('d', _currentPath);\n\n      _svgNode.setAttribute('style', _currentStyle);\n\n      _svg.appendChild(_svgNode);\n    }\n\n    _currentPath = '';\n    _currentStyle = '';\n  }\n\n  function getPathNode(id) {\n    if (_svgPathPool[id] == null) {\n      _svgPathPool[id] = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n      if (_quality == 0) {\n        _svgPathPool[id].setAttribute('shape-rendering', 'crispEdges'); //optimizeSpeed\n\n      }\n\n      return _svgPathPool[id];\n    }\n\n    return _svgPathPool[id];\n  }\n};\n\nexport { SVGObject, SVGRenderer };","map":{"version":3,"names":["Object3D","Box2","Color","Vector3","Matrix3","Matrix4","Camera","Projector","RenderableSprite","RenderableLine","RenderableFace","SVGObject","node","call","prototype","Object","create","constructor","SVGRenderer","_this","_renderData","_elements","_lights","_projector","_svg","document","createElementNS","_svgWidth","_svgHeight","_svgWidthHalf","_svgHeightHalf","_v1","_v2","_v3","_clipBox","_elemBox","_color","_diffuseColor","_ambientLight","_directionalLights","_pointLights","_clearColor","_vector3","_centroid","_normal","_normalViewMatrix","_viewMatrix","_viewProjectionMatrix","_svgPathPool","_svgNode","_pathCount","_currentPath","_currentStyle","_quality","_precision","domElement","autoClear","sortObjects","sortElements","overdraw","info","render","vertices","faces","setQuality","quality","setClearColor","color","set","setPixelRatio","setSize","width","height","setAttribute","min","max","getSize","setPrecision","precision","removeChildNodes","childNodes","length","removeChild","convert","c","toFixed","clear","style","backgroundColor","getStyle","scene","camera","console","error","background","isColor","copy","matrixWorldInverse","multiplyMatrices","projectionMatrix","projectScene","elements","lights","getNormalMatrix","calculateLights","e","el","element","material","undefined","opacity","makeEmpty","x","y","renderSprite","v1","v2","positionScreen","setFromPoints","intersectsBox","renderLine","v3","z","expand","renderFace3","flushPath","traverseVisible","object","setFromMatrixPosition","matrixWorld","applyMatrix4","appendChild","setRGB","l","ll","light","lightColor","isAmbientLight","r","g","b","isDirectionalLight","isPointLight","calculateLight","position","normal","lightPosition","normalize","amount","dot","intensity","subVectors","distance","Math","distanceTo","scaleX","scale","scaleY","isPointsMaterial","size","path","isSpriteMaterial","addPath","isLineBasicMaterial","linewidth","linecap","isLineDashedMaterial","dashSize","gapSize","isMeshBasicMaterial","vertexColors","multiply","isMeshLambertMaterial","isMeshPhongMaterial","isMeshStandardMaterial","positionWorld","add","divideScalar","normalModel","emissive","isMeshNormalMaterial","applyMatrix3","multiplyScalar","addScalar","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","pixels","det","idet","sqrt","getPathNode","id"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/renderers/SVGRenderer.js"],"sourcesContent":["import { Object3D, Box2, Color, Vector3, Matrix3, Matrix4, Camera } from 'three';\r\nimport { Projector, RenderableSprite, RenderableLine, RenderableFace } from './Projector.js';\r\n\r\nvar SVGObject = function (node) {\r\n  Object3D.call(this);\r\n  this.node = node;\r\n};\r\n\r\nSVGObject.prototype = Object.create(Object3D.prototype);\r\nSVGObject.prototype.constructor = SVGObject;\r\n\r\nvar SVGRenderer = function () {\r\n  var _this = this,\r\n      _renderData,\r\n      _elements,\r\n      _lights,\r\n      _projector = new Projector(),\r\n      _svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),\r\n      _svgWidth,\r\n      _svgHeight,\r\n      _svgWidthHalf,\r\n      _svgHeightHalf,\r\n      _v1,\r\n      _v2,\r\n      _v3,\r\n      _clipBox = new Box2(),\r\n      _elemBox = new Box2(),\r\n      _color = new Color(),\r\n      _diffuseColor = new Color(),\r\n      _ambientLight = new Color(),\r\n      _directionalLights = new Color(),\r\n      _pointLights = new Color(),\r\n      _clearColor = new Color(),\r\n      _vector3 = new Vector3(),\r\n      // Needed for PointLight\r\n  _centroid = new Vector3(),\r\n      _normal = new Vector3(),\r\n      _normalViewMatrix = new Matrix3(),\r\n      _viewMatrix = new Matrix4(),\r\n      _viewProjectionMatrix = new Matrix4(),\r\n      _svgPathPool = [],\r\n      _svgNode,\r\n      _pathCount = 0,\r\n      _currentPath,\r\n      _currentStyle,\r\n      _quality = 1,\r\n      _precision = null;\r\n\r\n  this.domElement = _svg;\r\n  this.autoClear = true;\r\n  this.sortObjects = true;\r\n  this.sortElements = true;\r\n  this.overdraw = 0.5;\r\n  this.info = {\r\n    render: {\r\n      vertices: 0,\r\n      faces: 0\r\n    }\r\n  };\r\n\r\n  this.setQuality = function (quality) {\r\n    switch (quality) {\r\n      case 'high':\r\n        _quality = 1;\r\n        break;\r\n\r\n      case 'low':\r\n        _quality = 0;\r\n        break;\r\n    }\r\n  };\r\n\r\n  this.setClearColor = function (color) {\r\n    _clearColor.set(color);\r\n  };\r\n\r\n  this.setPixelRatio = function () {};\r\n\r\n  this.setSize = function (width, height) {\r\n    _svgWidth = width;\r\n    _svgHeight = height;\r\n    _svgWidthHalf = _svgWidth / 2;\r\n    _svgHeightHalf = _svgHeight / 2;\r\n\r\n    _svg.setAttribute('viewBox', -_svgWidthHalf + ' ' + -_svgHeightHalf + ' ' + _svgWidth + ' ' + _svgHeight);\r\n\r\n    _svg.setAttribute('width', _svgWidth);\r\n\r\n    _svg.setAttribute('height', _svgHeight);\r\n\r\n    _clipBox.min.set(-_svgWidthHalf, -_svgHeightHalf);\r\n\r\n    _clipBox.max.set(_svgWidthHalf, _svgHeightHalf);\r\n  };\r\n\r\n  this.getSize = function () {\r\n    return {\r\n      width: _svgWidth,\r\n      height: _svgHeight\r\n    };\r\n  };\r\n\r\n  this.setPrecision = function (precision) {\r\n    _precision = precision;\r\n  };\r\n\r\n  function removeChildNodes() {\r\n    _pathCount = 0;\r\n\r\n    while (_svg.childNodes.length > 0) {\r\n      _svg.removeChild(_svg.childNodes[0]);\r\n    }\r\n  }\r\n\r\n  function convert(c) {\r\n    return _precision !== null ? c.toFixed(_precision) : c;\r\n  }\r\n\r\n  this.clear = function () {\r\n    removeChildNodes();\r\n    _svg.style.backgroundColor = _clearColor.getStyle();\r\n  };\r\n\r\n  this.render = function (scene, camera) {\r\n    if (camera instanceof Camera === false) {\r\n      console.error('THREE.SVGRenderer.render: camera is not an instance of Camera.');\r\n      return;\r\n    }\r\n\r\n    var background = scene.background;\r\n\r\n    if (background && background.isColor) {\r\n      removeChildNodes();\r\n      _svg.style.backgroundColor = background.getStyle();\r\n    } else if (this.autoClear === true) {\r\n      this.clear();\r\n    }\r\n\r\n    _this.info.render.vertices = 0;\r\n    _this.info.render.faces = 0;\r\n\r\n    _viewMatrix.copy(camera.matrixWorldInverse);\r\n\r\n    _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\r\n\r\n    _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\r\n    _elements = _renderData.elements;\r\n    _lights = _renderData.lights;\r\n\r\n    _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\r\n\r\n    calculateLights(_lights); // reset accumulated path\r\n\r\n    _currentPath = '';\r\n    _currentStyle = '';\r\n\r\n    for (let e = 0, el = _elements.length; e < el; e++) {\r\n      var element = _elements[e];\r\n      var material = element.material;\r\n      if (material === undefined || material.opacity === 0) continue;\r\n\r\n      _elemBox.makeEmpty();\r\n\r\n      if (element instanceof RenderableSprite) {\r\n        _v1 = element;\r\n        _v1.x *= _svgWidthHalf;\r\n        _v1.y *= -_svgHeightHalf;\r\n        renderSprite(_v1, element, material);\r\n      } else if (element instanceof RenderableLine) {\r\n        _v1 = element.v1;\r\n        _v2 = element.v2;\r\n        _v1.positionScreen.x *= _svgWidthHalf;\r\n        _v1.positionScreen.y *= -_svgHeightHalf;\r\n        _v2.positionScreen.x *= _svgWidthHalf;\r\n        _v2.positionScreen.y *= -_svgHeightHalf;\r\n\r\n        _elemBox.setFromPoints([_v1.positionScreen, _v2.positionScreen]);\r\n\r\n        if (_clipBox.intersectsBox(_elemBox) === true) {\r\n          renderLine(_v1, _v2, element, material);\r\n        }\r\n      } else if (element instanceof RenderableFace) {\r\n        _v1 = element.v1;\r\n        _v2 = element.v2;\r\n        _v3 = element.v3;\r\n        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\r\n        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\r\n        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\r\n        _v1.positionScreen.x *= _svgWidthHalf;\r\n        _v1.positionScreen.y *= -_svgHeightHalf;\r\n        _v2.positionScreen.x *= _svgWidthHalf;\r\n        _v2.positionScreen.y *= -_svgHeightHalf;\r\n        _v3.positionScreen.x *= _svgWidthHalf;\r\n        _v3.positionScreen.y *= -_svgHeightHalf;\r\n\r\n        if (this.overdraw > 0) {\r\n          expand(_v1.positionScreen, _v2.positionScreen, this.overdraw);\r\n          expand(_v2.positionScreen, _v3.positionScreen, this.overdraw);\r\n          expand(_v3.positionScreen, _v1.positionScreen, this.overdraw);\r\n        }\r\n\r\n        _elemBox.setFromPoints([_v1.positionScreen, _v2.positionScreen, _v3.positionScreen]);\r\n\r\n        if (_clipBox.intersectsBox(_elemBox) === true) {\r\n          renderFace3(_v1, _v2, _v3, element, material);\r\n        }\r\n      }\r\n    }\r\n\r\n    flushPath(); // just to flush last svg:path\r\n\r\n    scene.traverseVisible(function (object) {\r\n      if (object instanceof SVGObject) {\r\n        _vector3.setFromMatrixPosition(object.matrixWorld);\r\n\r\n        _vector3.applyMatrix4(_viewProjectionMatrix);\r\n\r\n        if (_vector3.z < -1 || _vector3.z > 1) return;\r\n        var x = _vector3.x * _svgWidthHalf;\r\n        var y = -_vector3.y * _svgHeightHalf;\r\n        var node = object.node;\r\n        node.setAttribute('transform', 'translate(' + x + ',' + y + ')');\r\n\r\n        _svg.appendChild(node);\r\n      }\r\n    });\r\n  };\r\n\r\n  function calculateLights(lights) {\r\n    _ambientLight.setRGB(0, 0, 0);\r\n\r\n    _directionalLights.setRGB(0, 0, 0);\r\n\r\n    _pointLights.setRGB(0, 0, 0);\r\n\r\n    for (let l = 0, ll = lights.length; l < ll; l++) {\r\n      var light = lights[l];\r\n      var lightColor = light.color;\r\n\r\n      if (light.isAmbientLight) {\r\n        _ambientLight.r += lightColor.r;\r\n        _ambientLight.g += lightColor.g;\r\n        _ambientLight.b += lightColor.b;\r\n      } else if (light.isDirectionalLight) {\r\n        _directionalLights.r += lightColor.r;\r\n        _directionalLights.g += lightColor.g;\r\n        _directionalLights.b += lightColor.b;\r\n      } else if (light.isPointLight) {\r\n        _pointLights.r += lightColor.r;\r\n        _pointLights.g += lightColor.g;\r\n        _pointLights.b += lightColor.b;\r\n      }\r\n    }\r\n  }\r\n\r\n  function calculateLight(lights, position, normal, color) {\r\n    for (let l = 0, ll = lights.length; l < ll; l++) {\r\n      var light = lights[l];\r\n      var lightColor = light.color;\r\n\r\n      if (light.isDirectionalLight) {\r\n        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\r\n\r\n        var amount = normal.dot(lightPosition);\r\n        if (amount <= 0) continue;\r\n        amount *= light.intensity;\r\n        color.r += lightColor.r * amount;\r\n        color.g += lightColor.g * amount;\r\n        color.b += lightColor.b * amount;\r\n      } else if (light.isPointLight) {\r\n        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\r\n\r\n        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\r\n        if (amount <= 0) continue;\r\n        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\r\n        if (amount == 0) continue;\r\n        amount *= light.intensity;\r\n        color.r += lightColor.r * amount;\r\n        color.g += lightColor.g * amount;\r\n        color.b += lightColor.b * amount;\r\n      }\r\n    }\r\n  }\r\n\r\n  function renderSprite(v1, element, material) {\r\n    var scaleX = element.scale.x * _svgWidthHalf;\r\n    var scaleY = element.scale.y * _svgHeightHalf;\r\n\r\n    if (material.isPointsMaterial) {\r\n      scaleX *= material.size;\r\n      scaleY *= material.size;\r\n    }\r\n\r\n    var path = 'M' + convert(v1.x - scaleX * 0.5) + ',' + convert(v1.y - scaleY * 0.5) + 'h' + convert(scaleX) + 'v' + convert(scaleY) + 'h' + convert(-scaleX) + 'z';\r\n    var style = '';\r\n\r\n    if (material.isSpriteMaterial || material.isPointsMaterial) {\r\n      style = 'fill:' + material.color.getStyle() + ';fill-opacity:' + material.opacity;\r\n    }\r\n\r\n    addPath(style, path);\r\n  }\r\n\r\n  function renderLine(v1, v2, element, material) {\r\n    var path = 'M' + convert(v1.positionScreen.x) + ',' + convert(v1.positionScreen.y) + 'L' + convert(v2.positionScreen.x) + ',' + convert(v2.positionScreen.y);\r\n\r\n    if (material.isLineBasicMaterial) {\r\n      var style = 'fill:none;stroke:' + material.color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.linewidth + ';stroke-linecap:' + material.linecap;\r\n\r\n      if (material.isLineDashedMaterial) {\r\n        style = style + ';stroke-dasharray:' + material.dashSize + ',' + material.gapSize;\r\n      }\r\n\r\n      addPath(style, path);\r\n    }\r\n  }\r\n\r\n  function renderFace3(v1, v2, v3, element, material) {\r\n    _this.info.render.vertices += 3;\r\n    _this.info.render.faces++;\r\n    var path = 'M' + convert(v1.positionScreen.x) + ',' + convert(v1.positionScreen.y) + 'L' + convert(v2.positionScreen.x) + ',' + convert(v2.positionScreen.y) + 'L' + convert(v3.positionScreen.x) + ',' + convert(v3.positionScreen.y) + 'z';\r\n    var style = '';\r\n\r\n    if (material.isMeshBasicMaterial) {\r\n      _color.copy(material.color);\r\n\r\n      if (material.vertexColors) {\r\n        _color.multiply(element.color);\r\n      }\r\n    } else if (material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial) {\r\n      _diffuseColor.copy(material.color);\r\n\r\n      if (material.vertexColors) {\r\n        _diffuseColor.multiply(element.color);\r\n      }\r\n\r\n      _color.copy(_ambientLight);\r\n\r\n      _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\r\n\r\n      calculateLight(_lights, _centroid, element.normalModel, _color);\r\n\r\n      _color.multiply(_diffuseColor).add(material.emissive);\r\n    } else if (material.isMeshNormalMaterial) {\r\n      _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix).normalize();\r\n\r\n      _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(0.5).addScalar(0.5);\r\n    }\r\n\r\n    if (material.wireframe) {\r\n      style = 'fill:none;stroke:' + _color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.wireframeLinewidth + ';stroke-linecap:' + material.wireframeLinecap + ';stroke-linejoin:' + material.wireframeLinejoin;\r\n    } else {\r\n      style = 'fill:' + _color.getStyle() + ';fill-opacity:' + material.opacity;\r\n    }\r\n\r\n    addPath(style, path);\r\n  } // Hide anti-alias gaps\r\n\r\n\r\n  function expand(v1, v2, pixels) {\r\n    var x = v2.x - v1.x,\r\n        y = v2.y - v1.y,\r\n        det = x * x + y * y,\r\n        idet;\r\n    if (det === 0) return;\r\n    idet = pixels / Math.sqrt(det);\r\n    x *= idet;\r\n    y *= idet;\r\n    v2.x += x;\r\n    v2.y += y;\r\n    v1.x -= x;\r\n    v1.y -= y;\r\n  }\r\n\r\n  function addPath(style, path) {\r\n    if (_currentStyle === style) {\r\n      _currentPath += path;\r\n    } else {\r\n      flushPath();\r\n      _currentStyle = style;\r\n      _currentPath = path;\r\n    }\r\n  }\r\n\r\n  function flushPath() {\r\n    if (_currentPath) {\r\n      _svgNode = getPathNode(_pathCount++);\r\n\r\n      _svgNode.setAttribute('d', _currentPath);\r\n\r\n      _svgNode.setAttribute('style', _currentStyle);\r\n\r\n      _svg.appendChild(_svgNode);\r\n    }\r\n\r\n    _currentPath = '';\r\n    _currentStyle = '';\r\n  }\r\n\r\n  function getPathNode(id) {\r\n    if (_svgPathPool[id] == null) {\r\n      _svgPathPool[id] = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n\r\n      if (_quality == 0) {\r\n        _svgPathPool[id].setAttribute('shape-rendering', 'crispEdges'); //optimizeSpeed\r\n\r\n      }\r\n\r\n      return _svgPathPool[id];\r\n    }\r\n\r\n    return _svgPathPool[id];\r\n  }\r\n};\r\n\r\nexport { SVGObject, SVGRenderer };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}