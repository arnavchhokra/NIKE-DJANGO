{"ast":null,"code":"import { ShaderLib, Mesh, BoxGeometry, ShaderMaterial, UniformsUtils, BackSide, Scene, PerspectiveCamera } from 'three';\nimport { Pass } from './Pass.js';\n\nvar CubeTexturePass = function CubeTexturePass(camera, envMap, opacity) {\n  this.camera = camera;\n  this.needsSwap = false;\n  this.cubeShader = ShaderLib['cube'];\n  this.cubeMesh = new Mesh(new BoxGeometry(10, 10, 10), new ShaderMaterial({\n    uniforms: UniformsUtils.clone(this.cubeShader.uniforms),\n    vertexShader: this.cubeShader.vertexShader,\n    fragmentShader: this.cubeShader.fragmentShader,\n    depthTest: false,\n    depthWrite: false,\n    side: BackSide\n  }));\n  Object.defineProperty(this.cubeMesh.material, 'envMap', {\n    get: function get() {\n      return this.uniforms.envMap.value;\n    }\n  });\n  this.envMap = envMap;\n  this.opacity = opacity !== undefined ? opacity : 1.0;\n  this.cubeScene = new Scene();\n  this.cubeCamera = new PerspectiveCamera();\n  this.cubeScene.add(this.cubeMesh);\n};\n\nCubeTexturePass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: CubeTexturePass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/\n  ) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    this.cubeCamera.projectionMatrix.copy(this.camera.projectionMatrix);\n    this.cubeCamera.quaternion.setFromRotationMatrix(this.camera.matrixWorld);\n    this.cubeMesh.material.uniforms.envMap.value = this.envMap;\n    this.cubeMesh.material.uniforms.flipEnvMap.value = this.envMap.isCubeTexture && this.envMap._needsFlipEnvMap ? -1 : 1;\n    this.cubeMesh.material.uniforms.opacity.value = this.opacity;\n    this.cubeMesh.material.transparent = this.opacity < 1.0;\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.cubeScene, this.cubeCamera);\n    renderer.autoClear = oldAutoClear;\n  }\n});\nexport { CubeTexturePass };","map":{"version":3,"names":["ShaderLib","Mesh","BoxGeometry","ShaderMaterial","UniformsUtils","BackSide","Scene","PerspectiveCamera","Pass","CubeTexturePass","camera","envMap","opacity","needsSwap","cubeShader","cubeMesh","uniforms","clone","vertexShader","fragmentShader","depthTest","depthWrite","side","Object","defineProperty","material","get","value","undefined","cubeScene","cubeCamera","add","prototype","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","projectionMatrix","copy","quaternion","setFromRotationMatrix","matrixWorld","flipEnvMap","isCubeTexture","_needsFlipEnvMap","transparent","setRenderTarget","renderToScreen","clear"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/three-stdlib/postprocessing/CubeTexturePass.js"],"sourcesContent":["import { ShaderLib, Mesh, BoxGeometry, ShaderMaterial, UniformsUtils, BackSide, Scene, PerspectiveCamera } from 'three';\nimport { Pass } from './Pass.js';\n\nvar CubeTexturePass = function (camera, envMap, opacity) {\n  this.camera = camera;\n  this.needsSwap = false;\n  this.cubeShader = ShaderLib['cube'];\n  this.cubeMesh = new Mesh(new BoxGeometry(10, 10, 10), new ShaderMaterial({\n    uniforms: UniformsUtils.clone(this.cubeShader.uniforms),\n    vertexShader: this.cubeShader.vertexShader,\n    fragmentShader: this.cubeShader.fragmentShader,\n    depthTest: false,\n    depthWrite: false,\n    side: BackSide\n  }));\n  Object.defineProperty(this.cubeMesh.material, 'envMap', {\n    get: function () {\n      return this.uniforms.envMap.value;\n    }\n  });\n  this.envMap = envMap;\n  this.opacity = opacity !== undefined ? opacity : 1.0;\n  this.cubeScene = new Scene();\n  this.cubeCamera = new PerspectiveCamera();\n  this.cubeScene.add(this.cubeMesh);\n};\n\nCubeTexturePass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: CubeTexturePass,\n  render: function (renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/\n  ) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    this.cubeCamera.projectionMatrix.copy(this.camera.projectionMatrix);\n    this.cubeCamera.quaternion.setFromRotationMatrix(this.camera.matrixWorld);\n    this.cubeMesh.material.uniforms.envMap.value = this.envMap;\n    this.cubeMesh.material.uniforms.flipEnvMap.value = this.envMap.isCubeTexture && this.envMap._needsFlipEnvMap ? -1 : 1;\n    this.cubeMesh.material.uniforms.opacity.value = this.opacity;\n    this.cubeMesh.material.transparent = this.opacity < 1.0;\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.cubeScene, this.cubeCamera);\n    renderer.autoClear = oldAutoClear;\n  }\n});\n\nexport { CubeTexturePass };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}