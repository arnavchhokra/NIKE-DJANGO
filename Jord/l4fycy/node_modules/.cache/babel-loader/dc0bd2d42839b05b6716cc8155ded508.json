{"ast":null,"code":"import _slicedToArray from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"fog\", \"frames\", \"resolution\", \"near\", \"far\"];\nimport { WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction CubeCamera(_ref) {\n  var children = _ref.children,\n      fog = _ref.fog,\n      _ref$frames = _ref.frames,\n      frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n      _ref$near = _ref.near,\n      near = _ref$near === void 0 ? 0.1 : _ref$near,\n      _ref$far = _ref.far,\n      far = _ref$far === void 0 ? 1000 : _ref$far,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var ref = React.useRef();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      camera = _React$useState2[0],\n      setCamera = _React$useState2[1];\n\n  var scene = useThree(function (_ref2) {\n    var scene = _ref2.scene;\n    return scene;\n  });\n  var gl = useThree(function (_ref3) {\n    var gl = _ref3.gl;\n    return gl;\n  });\n  var fbo = React.useMemo(function () {\n    var fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.encoding = gl.outputEncoding;\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  var count = 0;\n  useFrame(function () {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.traverse(function (obj) {\n        return obj.visible = false;\n      });\n      var originalFog = scene.fog;\n      scene.fog = fog || originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      ref.current.traverse(function (obj) {\n        return obj.visible = true;\n      });\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\n\nexport { CubeCamera };","map":{"version":3,"names":["WebGLCubeRenderTarget","HalfFloatType","React","useThree","useFrame","CubeCamera","children","fog","frames","Infinity","resolution","near","far","props","ref","useRef","useState","camera","setCamera","scene","gl","fbo","useMemo","texture","encoding","outputEncoding","type","count","current","traverse","obj","visible","originalFog","update","createElement","args"],"sources":["D:/Jord/l4fycy/node_modules/@react-three/drei/core/CubeCamera.js"],"sourcesContent":["import { WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction CubeCamera({\n  children,\n  fog,\n  frames = Infinity,\n  resolution = 256,\n  near = 0.1,\n  far = 1000,\n  ...props\n}) {\n  const ref = React.useRef();\n  const [camera, setCamera] = React.useState(null);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.encoding = gl.outputEncoding;\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  let count = 0;\n  useFrame(() => {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.traverse(obj => obj.visible = false);\n      const originalFog = scene.fog;\n      scene.fog = fog || originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      ref.current.traverse(obj => obj.visible = true);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\n\nexport { CubeCamera };\n"],"mappings":";;;AAAA,SAASA,qBAAT,EAAgCC,aAAhC,QAAqD,OAArD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;;AAEA,SAASC,UAAT,OAQG;EAAA,IAPDC,QAOC,QAPDA,QAOC;EAAA,IANDC,GAMC,QANDA,GAMC;EAAA,uBALDC,MAKC;EAAA,IALDA,MAKC,4BALQC,QAKR;EAAA,2BAJDC,UAIC;EAAA,IAJDA,UAIC,gCAJY,GAIZ;EAAA,qBAHDC,IAGC;EAAA,IAHDA,IAGC,0BAHM,GAGN;EAAA,oBAFDC,GAEC;EAAA,IAFDA,GAEC,yBAFK,IAEL;EAAA,IADEC,KACF;;EACD,IAAMC,GAAG,GAAGZ,KAAK,CAACa,MAAN,EAAZ;;EACA,sBAA4Bb,KAAK,CAACc,QAAN,CAAe,IAAf,CAA5B;EAAA;EAAA,IAAOC,MAAP;EAAA,IAAeC,SAAf;;EACA,IAAMC,KAAK,GAAGhB,QAAQ,CAAC;IAAA,IACrBgB,KADqB,SACrBA,KADqB;IAAA,OAEjBA,KAFiB;EAAA,CAAD,CAAtB;EAGA,IAAMC,EAAE,GAAGjB,QAAQ,CAAC;IAAA,IAClBiB,EADkB,SAClBA,EADkB;IAAA,OAEdA,EAFc;EAAA,CAAD,CAAnB;EAGA,IAAMC,GAAG,GAAGnB,KAAK,CAACoB,OAAN,CAAc,YAAM;IAC9B,IAAMD,GAAG,GAAG,IAAIrB,qBAAJ,CAA0BU,UAA1B,CAAZ;IACAW,GAAG,CAACE,OAAJ,CAAYC,QAAZ,GAAuBJ,EAAE,CAACK,cAA1B;IACAJ,GAAG,CAACE,OAAJ,CAAYG,IAAZ,GAAmBzB,aAAnB;IACA,OAAOoB,GAAP;EACD,CALW,EAKT,CAACX,UAAD,CALS,CAAZ;EAMA,IAAIiB,KAAK,GAAG,CAAZ;EACAvB,QAAQ,CAAC,YAAM;IACb,IAAIa,MAAM,IAAIH,GAAG,CAACc,OAAd,KAA0BpB,MAAM,KAAKC,QAAX,IAAuBkB,KAAK,GAAGnB,MAAzD,CAAJ,EAAsE;MACpEM,GAAG,CAACc,OAAJ,CAAYC,QAAZ,CAAqB,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,OAAJ,GAAc,KAAlB;MAAA,CAAxB;MACA,IAAMC,WAAW,GAAGb,KAAK,CAACZ,GAA1B;MACAY,KAAK,CAACZ,GAAN,GAAYA,GAAG,IAAIyB,WAAnB;MACAf,MAAM,CAACgB,MAAP,CAAcb,EAAd,EAAkBD,KAAlB;MACAA,KAAK,CAACZ,GAAN,GAAYyB,WAAZ;MACAlB,GAAG,CAACc,OAAJ,CAAYC,QAAZ,CAAqB,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,OAAJ,GAAc,IAAlB;MAAA,CAAxB;MACAJ,KAAK;IACN;EACF,CAVO,CAAR;EAWA,OAAO,aAAazB,KAAK,CAACgC,aAAN,CAAoB,OAApB,EAA6BrB,KAA7B,EAAoC,aAAaX,KAAK,CAACgC,aAAN,CAAoB,YAApB,EAAkC;IACrGpB,GAAG,EAAEI,SADgG;IAErGiB,IAAI,EAAE,CAACxB,IAAD,EAAOC,GAAP,EAAYS,GAAZ;EAF+F,CAAlC,CAAjD,EAGhB,aAAanB,KAAK,CAACgC,aAAN,CAAoB,OAApB,EAA6B;IAC5CpB,GAAG,EAAEA;EADuC,CAA7B,EAEdR,QAAQ,CAACe,GAAG,CAACE,OAAL,CAFM,CAHG,CAApB;AAMD;;AAED,SAASlB,UAAT"},"metadata":{},"sourceType":"module"}