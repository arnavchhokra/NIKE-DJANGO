{"ast":null,"code":"/**\r\n * Full-screen textured quad shader\r\n */\nvar CopyShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    opacity: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float opacity;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tgl_FragColor = opacity * texel;', '}'].join('\\n')\n};\nexport { CopyShader };","map":{"version":3,"names":["CopyShader","uniforms","tDiffuse","value","opacity","vertexShader","join","fragmentShader"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/shaders/CopyShader.js"],"sourcesContent":["/**\r\n * Full-screen textured quad shader\r\n */\r\nconst CopyShader = {\r\n  uniforms: {\r\n    tDiffuse: {\r\n      value: null\r\n    },\r\n    opacity: {\r\n      value: 1.0\r\n    }\r\n  },\r\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\r\n  fragmentShader: ['uniform float opacity;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tgl_FragColor = opacity * texel;', '}'].join('\\n')\r\n};\r\n\r\nexport { CopyShader };\r\n"],"mappings":"AAAA;AACA;AACA;AACA,IAAMA,UAAU,GAAG;EACjBC,QAAQ,EAAE;IACRC,QAAQ,EAAE;MACRC,KAAK,EAAE;IADC,CADF;IAIRC,OAAO,EAAE;MACPD,KAAK,EAAE;IADA;EAJD,CADO;EASjBE,YAAY,EAAE,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,YAAvC,EAAqD,4EAArD,EAAmI,GAAnI,EAAwIC,IAAxI,CAA6I,IAA7I,CATG;EAUjBC,cAAc,EAAE,CAAC,wBAAD,EAA2B,6BAA3B,EAA0D,mBAA1D,EAA+E,eAA/E,EAAgG,2CAAhG,EAA6I,kCAA7I,EAAiL,GAAjL,EAAsLD,IAAtL,CAA2L,IAA3L;AAVC,CAAnB;AAaA,SAASN,UAAT"},"metadata":{},"sourceType":"module"}