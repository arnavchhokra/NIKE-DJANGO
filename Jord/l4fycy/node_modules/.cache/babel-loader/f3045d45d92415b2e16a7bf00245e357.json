{"ast":null,"code":"import _slicedToArray from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nvar isOrthographicCamera = function isOrthographicCamera(def) {\n  return def && def.isOrthographicCamera;\n};\n\nvar col = new THREE.Color();\n\nfunction Container(_ref) {\n  var canvasSize = _ref.canvasSize,\n      scene = _ref.scene,\n      index = _ref.index,\n      children = _ref.children,\n      frames = _ref.frames,\n      rect = _ref.rect,\n      track = _ref.track;\n  var get = useThree(function (state) {\n    return state.get;\n  });\n  var camera = useThree(function (state) {\n    return state.camera;\n  });\n  var virtualScene = useThree(function (state) {\n    return state.scene;\n  });\n  var setEvents = useThree(function (state) {\n    return state.setEvents;\n  });\n  var frameCount = 0;\n  useFrame(function (state) {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n\n    if (rect.current) {\n      var _rect$current = rect.current,\n          left = _rect$current.left,\n          right = _rect$current.right,\n          top = _rect$current.top,\n          bottom = _rect$current.bottom,\n          width = _rect$current.width,\n          height = _rect$current.height;\n      var isOffscreen = bottom < 0 || top > canvasSize.height || right < 0 || left > canvasSize.width;\n      var positiveYUpBottom = canvasSize.height - bottom;\n      var aspect = width / height;\n\n      if (isOrthographicCamera(camera)) {\n        if (camera.left !== width / -2 || camera.right !== width / 2 || camera.top !== height / 2 || camera.bottom !== height / -2) {\n          Object.assign(camera, {\n            left: width / -2,\n            right: width / 2,\n            top: height / 2,\n            bottom: height / -2\n          });\n          camera.updateProjectionMatrix();\n        }\n      } else if (camera.aspect !== aspect) {\n        camera.aspect = aspect;\n        camera.updateProjectionMatrix();\n      }\n\n      state.gl.setViewport(left, positiveYUpBottom, width, height);\n      state.gl.setScissor(left, positiveYUpBottom, width, height);\n      state.gl.setScissorTest(true);\n\n      if (isOffscreen) {\n        state.gl.getClearColor(col);\n        state.gl.setClearColor(col, state.gl.getClearAlpha());\n        state.gl.clear(true, true);\n        return;\n      } // When children are present render the portalled scene, otherwise the default scene\n\n\n      state.gl.render(children ? virtualScene : scene, camera);\n    }\n  }, index);\n  React.useEffect(function () {\n    // Connect the event layer to the tracking element\n    var old = get().events.connected;\n    setEvents({\n      connected: track.current\n    });\n    return function () {\n      return setEvents({\n        connected: old\n      });\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nvar View = function View(_ref2) {\n  var track = _ref2.track,\n      _ref2$index = _ref2.index,\n      index = _ref2$index === void 0 ? 1 : _ref2$index,\n      _ref2$frames = _ref2.frames,\n      frames = _ref2$frames === void 0 ? Infinity : _ref2$frames,\n      children = _ref2.children;\n  var rect = React.useRef(null);\n\n  var _useThree = useThree(),\n      size = _useThree.size,\n      scene = _useThree.scene;\n\n  var _React$useState = React.useState(function () {\n    return new THREE.Scene();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      virtualScene = _React$useState2[0];\n\n  var compute = React.useCallback(function (event, state) {\n    if (track.current && event.target === track.current) {\n      var _rect$current2 = rect.current,\n          width = _rect$current2.width,\n          height = _rect$current2.height,\n          left = _rect$current2.left,\n          top = _rect$current2.top;\n      var x = event.clientX - left;\n      var y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect]);\n\n  var _React$useReducer = React.useReducer(function () {\n    return true;\n  }, false),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      ready = _React$useReducer2[0],\n      toggle = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    var _track$current2; // We need the tracking elements bounds beforehand in order to inject it into the portal\n\n\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect(); // And now we can proceed\n\n    toggle();\n  }, []);\n  return ready && createPortal( /*#__PURE__*/React.createElement(Container, {\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute: compute,\n      priority: index\n    },\n    size: {\n      width: rect.current.width,\n      height: rect.current.height\n    }\n  });\n};\n\nexport { View };","map":{"version":3,"names":["React","THREE","useThree","createPortal","useFrame","isOrthographicCamera","def","col","Color","Container","canvasSize","scene","index","children","frames","rect","track","get","state","camera","virtualScene","setEvents","frameCount","Infinity","_track$current","current","getBoundingClientRect","left","right","top","bottom","width","height","isOffscreen","positiveYUpBottom","aspect","Object","assign","updateProjectionMatrix","gl","setViewport","setScissor","setScissorTest","getClearColor","setClearColor","getClearAlpha","clear","render","useEffect","old","events","connected","createElement","Fragment","View","useRef","size","useState","Scene","compute","useCallback","event","target","x","clientX","y","clientY","pointer","set","raycaster","setFromCamera","useReducer","ready","toggle","_track$current2","priority"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/@react-three/drei/web/View.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\n\nconst col = new THREE.Color();\n\nfunction Container({\n  canvasSize,\n  scene,\n  index,\n  children,\n  frames,\n  rect,\n  track\n}) {\n  const get = useThree(state => state.get);\n  const camera = useThree(state => state.camera);\n  const virtualScene = useThree(state => state.scene);\n  const setEvents = useThree(state => state.setEvents);\n  let frameCount = 0;\n  useFrame(state => {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n\n    if (rect.current) {\n      const {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height\n      } = rect.current;\n      const isOffscreen = bottom < 0 || top > canvasSize.height || right < 0 || left > canvasSize.width;\n      const positiveYUpBottom = canvasSize.height - bottom;\n      const aspect = width / height;\n\n      if (isOrthographicCamera(camera)) {\n        if (camera.left !== width / -2 || camera.right !== width / 2 || camera.top !== height / 2 || camera.bottom !== height / -2) {\n          Object.assign(camera, {\n            left: width / -2,\n            right: width / 2,\n            top: height / 2,\n            bottom: height / -2\n          });\n          camera.updateProjectionMatrix();\n        }\n      } else if (camera.aspect !== aspect) {\n        camera.aspect = aspect;\n        camera.updateProjectionMatrix();\n      }\n\n      state.gl.setViewport(left, positiveYUpBottom, width, height);\n      state.gl.setScissor(left, positiveYUpBottom, width, height);\n      state.gl.setScissorTest(true);\n\n      if (isOffscreen) {\n        state.gl.getClearColor(col);\n        state.gl.setClearColor(col, state.gl.getClearAlpha());\n        state.gl.clear(true, true);\n        return;\n      } // When children are present render the portalled scene, otherwise the default scene\n\n\n      state.gl.render(children ? virtualScene : scene, camera);\n    }\n  }, index);\n  React.useEffect(() => {\n    // Connect the event layer to the tracking element\n    const old = get().events.connected;\n    setEvents({\n      connected: track.current\n    });\n    return () => setEvents({\n      connected: old\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nconst View = ({\n  track,\n  index = 1,\n  frames = Infinity,\n  children\n}) => {\n  const rect = React.useRef(null);\n  const {\n    size,\n    scene\n  } = useThree();\n  const [virtualScene] = React.useState(() => new THREE.Scene());\n  const compute = React.useCallback((event, state) => {\n    if (track.current && event.target === track.current) {\n      const {\n        width,\n        height,\n        left,\n        top\n      } = rect.current;\n      const x = event.clientX - left;\n      const y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect]);\n  const [ready, toggle] = React.useReducer(() => true, false);\n  React.useEffect(() => {\n    var _track$current2;\n\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect(); // And now we can proceed\n\n    toggle();\n  }, []);\n  return ready && createPortal( /*#__PURE__*/React.createElement(Container, {\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute,\n      priority: index\n    },\n    size: {\n      width: rect.current.width,\n      height: rect.current.height\n    }\n  });\n};\n\nexport { View };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}