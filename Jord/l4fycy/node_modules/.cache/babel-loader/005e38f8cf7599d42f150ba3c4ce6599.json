{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildModel = void 0;\n\nvar gast_1 = require(\"@chevrotain/gast\");\n\nvar map_1 = __importDefault(require(\"lodash/map\"));\n\nvar flatten_1 = __importDefault(require(\"lodash/flatten\"));\n\nvar values_1 = __importDefault(require(\"lodash/values\"));\n\nvar some_1 = __importDefault(require(\"lodash/some\"));\n\nvar groupBy_1 = __importDefault(require(\"lodash/groupBy\"));\n\nvar assign_1 = __importDefault(require(\"lodash/assign\"));\n\nfunction buildModel(productions) {\n  var generator = new CstNodeDefinitionGenerator();\n  var allRules = (0, values_1.default)(productions);\n  return (0, map_1.default)(allRules, function (rule) {\n    return generator.visitRule(rule);\n  });\n}\n\nexports.buildModel = buildModel;\n\nvar CstNodeDefinitionGenerator =\n/** @class */\nfunction (_super) {\n  __extends(CstNodeDefinitionGenerator, _super);\n\n  function CstNodeDefinitionGenerator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CstNodeDefinitionGenerator.prototype.visitRule = function (node) {\n    var rawElements = this.visitEach(node.definition);\n    var grouped = (0, groupBy_1.default)(rawElements, function (el) {\n      return el.propertyName;\n    });\n    var properties = (0, map_1.default)(grouped, function (group, propertyName) {\n      var allNullable = !(0, some_1.default)(group, function (el) {\n        return !el.canBeNull;\n      }); // In an alternation with a label a property name can have\n      // multiple types.\n\n      var propertyType = group[0].type;\n\n      if (group.length > 1) {\n        propertyType = (0, map_1.default)(group, function (g) {\n          return g.type;\n        });\n      }\n\n      return {\n        name: propertyName,\n        type: propertyType,\n        optional: allNullable\n      };\n    });\n    return {\n      name: node.name,\n      properties: properties\n    };\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitAlternative = function (node) {\n    return this.visitEachAndOverrideWith(node.definition, {\n      canBeNull: true\n    });\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitOption = function (node) {\n    return this.visitEachAndOverrideWith(node.definition, {\n      canBeNull: true\n    });\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitRepetition = function (node) {\n    return this.visitEachAndOverrideWith(node.definition, {\n      canBeNull: true\n    });\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitRepetitionMandatory = function (node) {\n    return this.visitEach(node.definition);\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitRepetitionMandatoryWithSeparator = function (node) {\n    return this.visitEach(node.definition).concat({\n      propertyName: node.separator.name,\n      canBeNull: true,\n      type: getType(node.separator)\n    });\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitRepetitionWithSeparator = function (node) {\n    return this.visitEachAndOverrideWith(node.definition, {\n      canBeNull: true\n    }).concat({\n      propertyName: node.separator.name,\n      canBeNull: true,\n      type: getType(node.separator)\n    });\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitAlternation = function (node) {\n    return this.visitEachAndOverrideWith(node.definition, {\n      canBeNull: true\n    });\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitTerminal = function (node) {\n    return [{\n      propertyName: node.label || node.terminalType.name,\n      canBeNull: false,\n      type: getType(node)\n    }];\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitNonTerminal = function (node) {\n    return [{\n      propertyName: node.label || node.nonTerminalName,\n      canBeNull: false,\n      type: getType(node)\n    }];\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitEachAndOverrideWith = function (definition, override) {\n    return (0, map_1.default)(this.visitEach(definition), function (definition) {\n      return (0, assign_1.default)({}, definition, override);\n    });\n  };\n\n  CstNodeDefinitionGenerator.prototype.visitEach = function (definition) {\n    var _this = this;\n\n    return (0, flatten_1.default)((0, map_1.default)(definition, function (definition) {\n      return _this.visit(definition);\n    }));\n  };\n\n  return CstNodeDefinitionGenerator;\n}(gast_1.GAstVisitor);\n\nfunction getType(production) {\n  if (production instanceof gast_1.NonTerminal) {\n    return {\n      kind: \"rule\",\n      name: production.referencedRule.name\n    };\n  }\n\n  return {\n    kind: \"token\"\n  };\n}","map":{"version":3,"mappings":"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","names":["buildModel","productions","generator","CstNodeDefinitionGenerator","allRules","rule","visitRule","exports","__extends","node","rawElements","visitEach","definition","grouped","el","propertyName","properties","group","allNullable","canBeNull","propertyType","type","length","g","name","optional","visitEachAndOverrideWith","concat","separator","getType","label","terminalType","nonTerminalName","override","visit","gast_1","production","kind","referencedRule"],"sources":["C:\\Users\\Arnav\\Downloads\\l4fycy\\node_modules\\@chevrotain\\cst-dts-gen\\src\\model.ts"],"sourcesContent":["import type {\n  Alternation,\n  Alternative,\n  IProduction,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n  TokenType\n} from \"@chevrotain/types\"\nimport { NonTerminal, GAstVisitor } from \"@chevrotain/gast\"\nimport map from \"lodash/map\"\nimport flatten from \"lodash/flatten\"\nimport values from \"lodash/values\"\nimport some from \"lodash/some\"\nimport groupBy from \"lodash/groupBy\"\nimport assign from \"lodash/assign\"\n\nexport function buildModel(\n  productions: Record<string, Rule>\n): CstNodeTypeDefinition[] {\n  const generator = new CstNodeDefinitionGenerator()\n  const allRules = values(productions)\n  return map(allRules, (rule) => generator.visitRule(rule))\n}\n\nexport type CstNodeTypeDefinition = {\n  name: string\n  properties: PropertyTypeDefinition[]\n}\n\nexport type PropertyTypeDefinition = {\n  name: string\n  type: PropertyArrayType\n  optional: boolean\n}\n\nexport type PropertyArrayType =\n  | TokenArrayType\n  | RuleArrayType\n  | (TokenArrayType | RuleArrayType)[]\n\nexport type TokenArrayType = { kind: \"token\" }\nexport type RuleArrayType = {\n  kind: \"rule\"\n  name: string\n}\n\nclass CstNodeDefinitionGenerator extends GAstVisitor {\n  visitRule(node: Rule): CstNodeTypeDefinition {\n    const rawElements = this.visitEach(node.definition)\n\n    const grouped = groupBy(rawElements, (el) => el.propertyName)\n    const properties = map(grouped, (group, propertyName) => {\n      const allNullable = !some(group, (el) => !el.canBeNull)\n\n      // In an alternation with a label a property name can have\n      // multiple types.\n      let propertyType: PropertyArrayType = group[0].type\n      if (group.length > 1) {\n        propertyType = map(group, (g) => g.type)\n      }\n\n      return {\n        name: propertyName,\n        type: propertyType,\n        optional: allNullable\n      } as PropertyTypeDefinition\n    })\n\n    return {\n      name: node.name,\n      properties: properties\n    }\n  }\n\n  visitAlternative(node: Alternative) {\n    return this.visitEachAndOverrideWith(node.definition, { canBeNull: true })\n  }\n\n  visitOption(node: Option) {\n    return this.visitEachAndOverrideWith(node.definition, { canBeNull: true })\n  }\n\n  visitRepetition(node: Repetition) {\n    return this.visitEachAndOverrideWith(node.definition, { canBeNull: true })\n  }\n\n  visitRepetitionMandatory(node: RepetitionMandatory) {\n    return this.visitEach(node.definition)\n  }\n\n  visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator\n  ) {\n    return this.visitEach(node.definition).concat({\n      propertyName: node.separator.name,\n      canBeNull: true,\n      type: getType(node.separator)\n    })\n  }\n\n  visitRepetitionWithSeparator(node: RepetitionWithSeparator) {\n    return this.visitEachAndOverrideWith(node.definition, {\n      canBeNull: true\n    }).concat({\n      propertyName: node.separator.name,\n      canBeNull: true,\n      type: getType(node.separator)\n    })\n  }\n\n  visitAlternation(node: Alternation) {\n    return this.visitEachAndOverrideWith(node.definition, { canBeNull: true })\n  }\n\n  visitTerminal(node: Terminal): PropertyTupleElement[] {\n    return [\n      {\n        propertyName: node.label || node.terminalType.name,\n        canBeNull: false,\n        type: getType(node)\n      }\n    ]\n  }\n\n  visitNonTerminal(node: NonTerminal): PropertyTupleElement[] {\n    return [\n      {\n        propertyName: node.label || node.nonTerminalName,\n        canBeNull: false,\n        type: getType(node)\n      }\n    ]\n  }\n\n  private visitEachAndOverrideWith(\n    definition: IProduction[],\n    override: Partial<PropertyTupleElement>\n  ) {\n    return map(\n      this.visitEach(definition),\n      (definition) => assign({}, definition, override) as PropertyTupleElement\n    )\n  }\n\n  private visitEach(definition: IProduction[]) {\n    return flatten<PropertyTupleElement>(\n      map(\n        definition,\n        (definition) => this.visit(definition) as PropertyTupleElement[]\n      )\n    )\n  }\n}\n\ntype PropertyTupleElement = {\n  propertyName: string\n  canBeNull: boolean\n  type: TokenArrayType | RuleArrayType\n}\n\nfunction getType(\n  production: Terminal | NonTerminal | TokenType\n): TokenArrayType | RuleArrayType {\n  if (production instanceof NonTerminal) {\n    return {\n      kind: \"rule\",\n      name: production.referencedRule.name\n    }\n  }\n\n  return { kind: \"token\" }\n}\n"]},"metadata":{},"sourceType":"script"}