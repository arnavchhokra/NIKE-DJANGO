{"ast":null,"code":"/**\r\n * Vignette shader\r\n * based on PaintEffect postprocess from ro.me\r\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\r\n */\nvar VignetteShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    offset: {\n      value: 1.0\n    },\n    darkness: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float offset;', 'uniform float darkness;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', // Eskil's vignette\n  '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );', '\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );',\n  /*\r\n  // alternative version from glfx.js\r\n  // this one makes more \"dusty\" look (as opposed to \"burned\")\r\n  \"\tvec4 color = texture2D( tDiffuse, vUv );\",\r\n  \"\tfloat dist = distance( vUv, vec2( 0.5 ) );\",\r\n  \"\tcolor.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\r\n  \"\tgl_FragColor = color;\",\r\n  */\n  '}'].join('\\n')\n};\nexport { VignetteShader };","map":{"version":3,"names":["VignetteShader","uniforms","tDiffuse","value","offset","darkness","vertexShader","join","fragmentShader"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/shaders/VignetteShader.js"],"sourcesContent":["/**\r\n * Vignette shader\r\n * based on PaintEffect postprocess from ro.me\r\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\r\n */\r\nconst VignetteShader = {\r\n  uniforms: {\r\n    tDiffuse: {\r\n      value: null\r\n    },\r\n    offset: {\r\n      value: 1.0\r\n    },\r\n    darkness: {\r\n      value: 1.0\r\n    }\r\n  },\r\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\r\n  fragmentShader: ['uniform float offset;', 'uniform float darkness;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', // Eskil's vignette\r\n  '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );', '\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );',\r\n  /*\r\n  // alternative version from glfx.js\r\n  // this one makes more \"dusty\" look (as opposed to \"burned\")\r\n  \"\tvec4 color = texture2D( tDiffuse, vUv );\",\r\n  \"\tfloat dist = distance( vUv, vec2( 0.5 ) );\",\r\n  \"\tcolor.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\r\n  \"\tgl_FragColor = color;\",\r\n  */\r\n  '}'].join('\\n')\r\n};\r\n\r\nexport { VignetteShader };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAMA,cAAc,GAAG;EACrBC,QAAQ,EAAE;IACRC,QAAQ,EAAE;MACRC,KAAK,EAAE;IADC,CADF;IAIRC,MAAM,EAAE;MACND,KAAK,EAAE;IADD,CAJA;IAORE,QAAQ,EAAE;MACRF,KAAK,EAAE;IADC;EAPF,CADW;EAYrBG,YAAY,EAAE,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,YAAvC,EAAqD,4EAArD,EAAmI,GAAnI,EAAwIC,IAAxI,CAA6I,IAA7I,CAZO;EAarBC,cAAc,EAAE,CAAC,uBAAD,EAA0B,yBAA1B,EAAqD,6BAArD,EAAoF,mBAApF,EAAyG,eAAzG,EAA0H;EAC1I,2CADgB,EAC6B,oDAD7B,EACmF,2FADnF;EAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,GAVgB,EAUXD,IAVW,CAUN,IAVM;AAbK,CAAvB;AA0BA,SAASP,cAAT"},"metadata":{},"sourceType":"module"}