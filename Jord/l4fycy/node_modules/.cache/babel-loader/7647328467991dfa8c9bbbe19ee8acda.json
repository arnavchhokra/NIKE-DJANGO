{"ast":null,"code":"\"use strict\";\n/* istanbul ignore file - tricky to import some things from this module during testing */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.createSyntaxDiagramsCode = exports.clearCache = exports.generateCstDts = exports.GAstVisitor = exports.serializeProduction = exports.serializeGrammar = exports.Terminal = exports.Rule = exports.RepetitionWithSeparator = exports.RepetitionMandatoryWithSeparator = exports.RepetitionMandatory = exports.Repetition = exports.Option = exports.NonTerminal = exports.Alternative = exports.Alternation = exports.defaultLexerErrorProvider = exports.NoViableAltException = exports.NotAllInputParsedException = exports.MismatchedTokenException = exports.isRecognitionException = exports.EarlyExitException = exports.defaultParserErrorProvider = exports.tokenName = exports.tokenMatcher = exports.tokenLabel = exports.EOF = exports.createTokenInstance = exports.createToken = exports.LexerDefinitionErrorType = exports.Lexer = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.EmbeddedActionsParser = exports.CstParser = exports.VERSION = void 0; // semantic version\n\nvar version_1 = require(\"./version\");\n\nObject.defineProperty(exports, \"VERSION\", {\n  enumerable: true,\n  get: function get() {\n    return version_1.VERSION;\n  }\n});\n\nvar parser_1 = require(\"./parse/parser/parser\");\n\nObject.defineProperty(exports, \"CstParser\", {\n  enumerable: true,\n  get: function get() {\n    return parser_1.CstParser;\n  }\n});\nObject.defineProperty(exports, \"EmbeddedActionsParser\", {\n  enumerable: true,\n  get: function get() {\n    return parser_1.EmbeddedActionsParser;\n  }\n});\nObject.defineProperty(exports, \"ParserDefinitionErrorType\", {\n  enumerable: true,\n  get: function get() {\n    return parser_1.ParserDefinitionErrorType;\n  }\n});\nObject.defineProperty(exports, \"EMPTY_ALT\", {\n  enumerable: true,\n  get: function get() {\n    return parser_1.EMPTY_ALT;\n  }\n});\n\nvar lexer_public_1 = require(\"./scan/lexer_public\");\n\nObject.defineProperty(exports, \"Lexer\", {\n  enumerable: true,\n  get: function get() {\n    return lexer_public_1.Lexer;\n  }\n});\nObject.defineProperty(exports, \"LexerDefinitionErrorType\", {\n  enumerable: true,\n  get: function get() {\n    return lexer_public_1.LexerDefinitionErrorType;\n  }\n}); // Tokens utilities\n\nvar tokens_public_1 = require(\"./scan/tokens_public\");\n\nObject.defineProperty(exports, \"createToken\", {\n  enumerable: true,\n  get: function get() {\n    return tokens_public_1.createToken;\n  }\n});\nObject.defineProperty(exports, \"createTokenInstance\", {\n  enumerable: true,\n  get: function get() {\n    return tokens_public_1.createTokenInstance;\n  }\n});\nObject.defineProperty(exports, \"EOF\", {\n  enumerable: true,\n  get: function get() {\n    return tokens_public_1.EOF;\n  }\n});\nObject.defineProperty(exports, \"tokenLabel\", {\n  enumerable: true,\n  get: function get() {\n    return tokens_public_1.tokenLabel;\n  }\n});\nObject.defineProperty(exports, \"tokenMatcher\", {\n  enumerable: true,\n  get: function get() {\n    return tokens_public_1.tokenMatcher;\n  }\n});\nObject.defineProperty(exports, \"tokenName\", {\n  enumerable: true,\n  get: function get() {\n    return tokens_public_1.tokenName;\n  }\n}); // Other Utilities\n\nvar errors_public_1 = require(\"./parse/errors_public\");\n\nObject.defineProperty(exports, \"defaultParserErrorProvider\", {\n  enumerable: true,\n  get: function get() {\n    return errors_public_1.defaultParserErrorProvider;\n  }\n});\n\nvar exceptions_public_1 = require(\"./parse/exceptions_public\");\n\nObject.defineProperty(exports, \"EarlyExitException\", {\n  enumerable: true,\n  get: function get() {\n    return exceptions_public_1.EarlyExitException;\n  }\n});\nObject.defineProperty(exports, \"isRecognitionException\", {\n  enumerable: true,\n  get: function get() {\n    return exceptions_public_1.isRecognitionException;\n  }\n});\nObject.defineProperty(exports, \"MismatchedTokenException\", {\n  enumerable: true,\n  get: function get() {\n    return exceptions_public_1.MismatchedTokenException;\n  }\n});\nObject.defineProperty(exports, \"NotAllInputParsedException\", {\n  enumerable: true,\n  get: function get() {\n    return exceptions_public_1.NotAllInputParsedException;\n  }\n});\nObject.defineProperty(exports, \"NoViableAltException\", {\n  enumerable: true,\n  get: function get() {\n    return exceptions_public_1.NoViableAltException;\n  }\n});\n\nvar lexer_errors_public_1 = require(\"./scan/lexer_errors_public\");\n\nObject.defineProperty(exports, \"defaultLexerErrorProvider\", {\n  enumerable: true,\n  get: function get() {\n    return lexer_errors_public_1.defaultLexerErrorProvider;\n  }\n}); // grammar reflection API\n\nvar gast_1 = require(\"@chevrotain/gast\");\n\nObject.defineProperty(exports, \"Alternation\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.Alternation;\n  }\n});\nObject.defineProperty(exports, \"Alternative\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.Alternative;\n  }\n});\nObject.defineProperty(exports, \"NonTerminal\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.NonTerminal;\n  }\n});\nObject.defineProperty(exports, \"Option\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.Option;\n  }\n});\nObject.defineProperty(exports, \"Repetition\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.Repetition;\n  }\n});\nObject.defineProperty(exports, \"RepetitionMandatory\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.RepetitionMandatory;\n  }\n});\nObject.defineProperty(exports, \"RepetitionMandatoryWithSeparator\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.RepetitionMandatoryWithSeparator;\n  }\n});\nObject.defineProperty(exports, \"RepetitionWithSeparator\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.RepetitionWithSeparator;\n  }\n});\nObject.defineProperty(exports, \"Rule\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.Rule;\n  }\n});\nObject.defineProperty(exports, \"Terminal\", {\n  enumerable: true,\n  get: function get() {\n    return gast_1.Terminal;\n  }\n}); // GAST Utilities\n\nvar gast_2 = require(\"@chevrotain/gast\");\n\nObject.defineProperty(exports, \"serializeGrammar\", {\n  enumerable: true,\n  get: function get() {\n    return gast_2.serializeGrammar;\n  }\n});\nObject.defineProperty(exports, \"serializeProduction\", {\n  enumerable: true,\n  get: function get() {\n    return gast_2.serializeProduction;\n  }\n});\nObject.defineProperty(exports, \"GAstVisitor\", {\n  enumerable: true,\n  get: function get() {\n    return gast_2.GAstVisitor;\n  }\n});\n\nvar cst_dts_gen_1 = require(\"@chevrotain/cst-dts-gen\");\n\nObject.defineProperty(exports, \"generateCstDts\", {\n  enumerable: true,\n  get: function get() {\n    return cst_dts_gen_1.generateCstDts;\n  }\n});\n/* istanbul ignore next */\n\nfunction clearCache() {\n  console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" + \"\\n\\t It performs no action other than printing this message.\" + \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n}\n\nexports.clearCache = clearCache;\n\nvar render_public_1 = require(\"./diagrams/render_public\");\n\nObject.defineProperty(exports, \"createSyntaxDiagramsCode\", {\n  enumerable: true,\n  get: function get() {\n    return render_public_1.createSyntaxDiagramsCode;\n  }\n});\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser() {\n    throw new Error(\"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" + \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\");\n  }\n\n  return Parser;\n}();\n\nexports.Parser = Parser;","map":{"version":3,"mappings":";AAAA;;;;;+8BAEA;;AACA;;AAASA;EAAAC;EAAAC;IAAA;EAAO;AAAP;;AAET;;AACEF;EAAAC;EAAAC;IAAA;EAAS;AAAT;AACAF;EAAAC;EAAAC;IAAA;EAAqB;AAArB;AACAF;EAAAC;EAAAC;IAAA;EAAyB;AAAzB;AACAF;EAAAC;EAAAC;IAAA;EAAS;AAAT;;AAGF;;AAASF;EAAAC;EAAAC;IAAA;EAAK;AAAL;AAAOF;EAAAC;EAAAC;IAAA;EAAwB;AAAxB,G,CAEhB;;AACA;;AACEF;EAAAC;EAAAC;IAAA;EAAW;AAAX;AACAF;EAAAC;EAAAC;IAAA;EAAmB;AAAnB;AACAF;EAAAC;EAAAC;IAAA;EAAG;AAAH;AACAF;EAAAC;EAAAC;IAAA;EAAU;AAAV;AACAF;EAAAC;EAAAC;IAAA;EAAY;AAAZ;AACAF;EAAAC;EAAAC;IAAA;EAAS;AAAT,G,CAGF;;AAEA;;AAASF;EAAAC;EAAAC;IAAA;EAA0B;AAA1B;;AAET;;AACEF;EAAAC;EAAAC;IAAA;EAAkB;AAAlB;AACAF;EAAAC;EAAAC;IAAA;EAAsB;AAAtB;AACAF;EAAAC;EAAAC;IAAA;EAAwB;AAAxB;AACAF;EAAAC;EAAAC;IAAA;EAA0B;AAA1B;AACAF;EAAAC;EAAAC;IAAA;EAAoB;AAApB;;AAGF;;AAASF;EAAAC;EAAAC;IAAA;EAAyB;AAAzB,G,CAET;;AACA;;AACEF;EAAAC;EAAAC;IAAA;EAAW;AAAX;AACAF;EAAAC;EAAAC;IAAA;EAAW;AAAX;AACAF;EAAAC;EAAAC;IAAA;EAAW;AAAX;AACAF;EAAAC;EAAAC;IAAA;EAAM;AAAN;AACAF;EAAAC;EAAAC;IAAA;EAAU;AAAV;AACAF;EAAAC;EAAAC;IAAA;EAAmB;AAAnB;AACAF;EAAAC;EAAAC;IAAA;EAAgC;AAAhC;AACAF;EAAAC;EAAAC;IAAA;EAAuB;AAAvB;AACAF;EAAAC;EAAAC;IAAA;EAAI;AAAJ;AACAF;EAAAC;EAAAC;IAAA;EAAQ;AAAR,G,CAGF;;AAEA;;AACEF;EAAAC;EAAAC;IAAA;EAAgB;AAAhB;AACAF;EAAAC;EAAAC;IAAA;EAAmB;AAAnB;AACAF;EAAAC;EAAAC;IAAA;EAAW;AAAX;;AAGF;;AAASF;EAAAC;EAAAC;IAAA;EAAc;AAAd;AAET;;AACA,SAAgBC,UAAhB,GAA0B;EACxBC,OAAO,CAACC,IAAR,CACE,wEACE,8DADF,GAEE,2EAHJ;AAKD;;AANDC;;AAQA;;AAASN;EAAAC;EAAAC;IAAA;EAAwB;AAAxB;;AAET;AAAA;AAAA;EACE;IACE,MAAM,IAAIK,KAAJ,CACJ,8FACE,sEAFE,CAAN;EAID;;EACH;AAAC,CAPD;;AAAaD","names":["Object","enumerable","get","clearCache","console","warn","exports","Error"],"sources":["C:\\Users\\Arnav\\Downloads\\l4fycy\\node_modules\\chevrotain\\src\\api.ts"],"sourcesContent":["/* istanbul ignore file - tricky to import some things from this module during testing */\n\n// semantic version\nexport { VERSION } from \"./version\"\n\nexport {\n  CstParser,\n  EmbeddedActionsParser,\n  ParserDefinitionErrorType,\n  EMPTY_ALT\n} from \"./parse/parser/parser\"\n\nexport { Lexer, LexerDefinitionErrorType } from \"./scan/lexer_public\"\n\n// Tokens utilities\nexport {\n  createToken,\n  createTokenInstance,\n  EOF,\n  tokenLabel,\n  tokenMatcher,\n  tokenName\n} from \"./scan/tokens_public\"\n\n// Other Utilities\n\nexport { defaultParserErrorProvider } from \"./parse/errors_public\"\n\nexport {\n  EarlyExitException,\n  isRecognitionException,\n  MismatchedTokenException,\n  NotAllInputParsedException,\n  NoViableAltException\n} from \"./parse/exceptions_public\"\n\nexport { defaultLexerErrorProvider } from \"./scan/lexer_errors_public\"\n\n// grammar reflection API\nexport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"@chevrotain/gast\"\n\n// GAST Utilities\n\nexport {\n  serializeGrammar,\n  serializeProduction,\n  GAstVisitor\n} from \"@chevrotain/gast\"\n\nexport { generateCstDts } from \"@chevrotain/cst-dts-gen\"\n\n/* istanbul ignore next */\nexport function clearCache() {\n  console.warn(\n    \"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n      \"\\n\\t It performs no action other than printing this message.\" +\n      \"\\n\\t Please avoid using it as it will be completely removed in the future\"\n  )\n}\n\nexport { createSyntaxDiagramsCode } from \"./diagrams/render_public\"\n\nexport class Parser {\n  constructor() {\n    throw new Error(\n      \"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" +\n        \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\"\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}