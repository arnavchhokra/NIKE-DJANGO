{"ast":null,"code":"import { warn } from \"./chunk-M3TFMUOL.mjs\";\nimport { isNotNumber } from \"./chunk-Y5FGD7DM.mjs\";\n\n// src/number.ts\nvar minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\nfunction toNumber(value) {\n  const num = parseFloat(value);\n  return isNotNumber(num) ? 0 : num;\n}\nfunction toPrecision(value, precision) {\n  let nextValue = toNumber(value);\n  const scaleFactor = 10 ** (precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\nfunction countDecimalPlaces(value) {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1;\n  let p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n}\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction roundValueToStep(value, from, step) {\n  const nextValue = Math.round((value - from) / step) * step + from;\n  const precision = countDecimalPlaces(step);\n  return toPrecision(nextValue, precision);\n}\nfunction clampValue(value, min, max) {\n  if (value == null) return value;\n  warn({\n    condition: max < min,\n    message: \"clamp: max cannot be less than min\"\n  });\n  return Math.min(Math.max(value, min), max);\n}\nexport { minSafeInteger, maxSafeInteger, toPrecision, countDecimalPlaces, valueToPercent, percentToValue, roundValueToStep, clampValue };","map":{"version":3,"names":["warn","isNotNumber","minSafeInteger","Number","MIN_SAFE_INTEGER","maxSafeInteger","MAX_SAFE_INTEGER","toNumber","value","num","parseFloat","toPrecision","precision","nextValue","scaleFactor","Math","round","toFixed","toString","countDecimalPlaces","isFinite","e","p","valueToPercent","min","max","percentToValue","percent","roundValueToStep","from","step","clampValue","condition","message"],"sources":["D:/Repos/NIKE-DJANGO/Jord/l4fycy/node_modules/@chakra-ui/utils/dist/chunk-YAFHXCR4.mjs"],"sourcesContent":["import {\r\n  warn\r\n} from \"./chunk-M3TFMUOL.mjs\";\r\nimport {\r\n  isNotNumber\r\n} from \"./chunk-Y5FGD7DM.mjs\";\r\n\r\n// src/number.ts\r\nvar minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;\r\nvar maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\nfunction toNumber(value) {\r\n  const num = parseFloat(value);\r\n  return isNotNumber(num) ? 0 : num;\r\n}\r\nfunction toPrecision(value, precision) {\r\n  let nextValue = toNumber(value);\r\n  const scaleFactor = 10 ** (precision != null ? precision : 10);\r\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\r\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\r\n}\r\nfunction countDecimalPlaces(value) {\r\n  if (!Number.isFinite(value))\r\n    return 0;\r\n  let e = 1;\r\n  let p = 0;\r\n  while (Math.round(value * e) / e !== value) {\r\n    e *= 10;\r\n    p += 1;\r\n  }\r\n  return p;\r\n}\r\nfunction valueToPercent(value, min, max) {\r\n  return (value - min) * 100 / (max - min);\r\n}\r\nfunction percentToValue(percent, min, max) {\r\n  return (max - min) * percent + min;\r\n}\r\nfunction roundValueToStep(value, from, step) {\r\n  const nextValue = Math.round((value - from) / step) * step + from;\r\n  const precision = countDecimalPlaces(step);\r\n  return toPrecision(nextValue, precision);\r\n}\r\nfunction clampValue(value, min, max) {\r\n  if (value == null)\r\n    return value;\r\n  warn({\r\n    condition: max < min,\r\n    message: \"clamp: max cannot be less than min\"\r\n  });\r\n  return Math.min(Math.max(value, min), max);\r\n}\r\n\r\nexport {\r\n  minSafeInteger,\r\n  maxSafeInteger,\r\n  toPrecision,\r\n  countDecimalPlaces,\r\n  valueToPercent,\r\n  percentToValue,\r\n  roundValueToStep,\r\n  clampValue\r\n};\r\n"],"mappings":"AAAA,SACEA,IAAI,QACC,sBAAsB;AAC7B,SACEC,WAAW,QACN,sBAAsB;;AAE7B;AACA,IAAIC,cAAc,GAAGC,MAAM,CAACC,gBAAgB,IAAI,CAAC,gBAAgB;AACjE,IAAIC,cAAc,GAAGF,MAAM,CAACG,gBAAgB,IAAI,gBAAgB;AAChE,SAASC,QAAQA,CAACC,KAAK,EAAE;EACvB,MAAMC,GAAG,GAAGC,UAAU,CAACF,KAAK,CAAC;EAC7B,OAAOP,WAAW,CAACQ,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG;AACnC;AACA,SAASE,WAAWA,CAACH,KAAK,EAAEI,SAAS,EAAE;EACrC,IAAIC,SAAS,GAAGN,QAAQ,CAACC,KAAK,CAAC;EAC/B,MAAMM,WAAW,GAAG,EAAE,KAAKF,SAAS,IAAI,IAAI,GAAGA,SAAS,GAAG,EAAE,CAAC;EAC9DC,SAAS,GAAGE,IAAI,CAACC,KAAK,CAACH,SAAS,GAAGC,WAAW,CAAC,GAAGA,WAAW;EAC7D,OAAOF,SAAS,GAAGC,SAAS,CAACI,OAAO,CAACL,SAAS,CAAC,GAAGC,SAAS,CAACK,QAAQ,CAAC,CAAC;AACxE;AACA,SAASC,kBAAkBA,CAACX,KAAK,EAAE;EACjC,IAAI,CAACL,MAAM,CAACiB,QAAQ,CAACZ,KAAK,CAAC,EACzB,OAAO,CAAC;EACV,IAAIa,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,OAAOP,IAAI,CAACC,KAAK,CAACR,KAAK,GAAGa,CAAC,CAAC,GAAGA,CAAC,KAAKb,KAAK,EAAE;IAC1Ca,CAAC,IAAI,EAAE;IACPC,CAAC,IAAI,CAAC;EACR;EACA,OAAOA,CAAC;AACV;AACA,SAASC,cAAcA,CAACf,KAAK,EAAEgB,GAAG,EAAEC,GAAG,EAAE;EACvC,OAAO,CAACjB,KAAK,GAAGgB,GAAG,IAAI,GAAG,IAAIC,GAAG,GAAGD,GAAG,CAAC;AAC1C;AACA,SAASE,cAAcA,CAACC,OAAO,EAAEH,GAAG,EAAEC,GAAG,EAAE;EACzC,OAAO,CAACA,GAAG,GAAGD,GAAG,IAAIG,OAAO,GAAGH,GAAG;AACpC;AACA,SAASI,gBAAgBA,CAACpB,KAAK,EAAEqB,IAAI,EAAEC,IAAI,EAAE;EAC3C,MAAMjB,SAAS,GAAGE,IAAI,CAACC,KAAK,CAAC,CAACR,KAAK,GAAGqB,IAAI,IAAIC,IAAI,CAAC,GAAGA,IAAI,GAAGD,IAAI;EACjE,MAAMjB,SAAS,GAAGO,kBAAkB,CAACW,IAAI,CAAC;EAC1C,OAAOnB,WAAW,CAACE,SAAS,EAAED,SAAS,CAAC;AAC1C;AACA,SAASmB,UAAUA,CAACvB,KAAK,EAAEgB,GAAG,EAAEC,GAAG,EAAE;EACnC,IAAIjB,KAAK,IAAI,IAAI,EACf,OAAOA,KAAK;EACdR,IAAI,CAAC;IACHgC,SAAS,EAAEP,GAAG,GAAGD,GAAG;IACpBS,OAAO,EAAE;EACX,CAAC,CAAC;EACF,OAAOlB,IAAI,CAACS,GAAG,CAACT,IAAI,CAACU,GAAG,CAACjB,KAAK,EAAEgB,GAAG,CAAC,EAAEC,GAAG,CAAC;AAC5C;AAEA,SACEvB,cAAc,EACdG,cAAc,EACdM,WAAW,EACXQ,kBAAkB,EAClBI,cAAc,EACdG,cAAc,EACdE,gBAAgB,EAChBG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}