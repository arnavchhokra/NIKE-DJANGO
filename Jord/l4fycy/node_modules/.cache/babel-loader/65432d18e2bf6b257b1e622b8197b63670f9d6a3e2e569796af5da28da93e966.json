{"ast":null,"code":"import { Curve, Vector3 } from \"three\";\nclass GrannyKnot extends Curve {\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    t = 2 * Math.PI * t;\n    const x = -0.22 * Math.cos(t) - 1.28 * Math.sin(t) - 0.44 * Math.cos(3 * t) - 0.78 * Math.sin(3 * t);\n    const y = -0.1 * Math.cos(2 * t) - 0.27 * Math.sin(2 * t) + 0.38 * Math.cos(4 * t) + 0.46 * Math.sin(4 * t);\n    const z = 0.7 * Math.cos(3 * t) - 0.4 * Math.sin(3 * t);\n    return point.set(x, y, z).multiplyScalar(20);\n  }\n}\nclass HeartCurve extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    t *= 2 * Math.PI;\n    const x = 16 * Math.pow(Math.sin(t), 3);\n    const y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t);\n    const z = 0;\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass VivianiCurve extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 70;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    t = t * 4 * Math.PI;\n    const a = this.scale / 2;\n    const x = a * (1 + Math.cos(t));\n    const y = a * Math.sin(t);\n    const z = 2 * a * Math.sin(t / 2);\n    return point.set(x, y, z);\n  }\n}\nclass KnotCurve extends Curve {\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    t *= 2 * Math.PI;\n    const R = 10;\n    const s = 50;\n    const x = s * Math.sin(t);\n    const y = Math.cos(t) * (R + s * Math.cos(t));\n    const z = Math.sin(t) * (R + s * Math.cos(t));\n    return point.set(x, y, z);\n  }\n}\nclass HelixCurve extends Curve {\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const a = 30;\n    const b = 150;\n    const t2 = 2 * Math.PI * t * b / 30;\n    const x = Math.cos(t2) * a;\n    const y = Math.sin(t2) * a;\n    const z = b * t;\n    return point.set(x, y, z);\n  }\n}\nclass TrefoilKnot extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(3 * t)) * Math.cos(2 * t);\n    const y = (2 + Math.cos(3 * t)) * Math.sin(2 * t);\n    const z = Math.sin(3 * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass TorusKnot extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const p = 3;\n    const q = 4;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n    const z = Math.sin(q * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass CinquefoilKnot extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const p = 2;\n    const q = 5;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n    const z = Math.sin(q * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass TrefoilPolynomialKnot extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    t = t * 4 - 2;\n    const x = Math.pow(t, 3) - 3 * t;\n    const y = Math.pow(t, 4) - 4 * t * t;\n    const z = 1 / 5 * Math.pow(t, 5) - 2 * t;\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nfunction scaleTo(x, y, t) {\n  const r = y - x;\n  return t * r + x;\n}\nclass FigureEightPolynomialKnot extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    t = scaleTo(-4, 4, t);\n    const x = 2 / 5 * t * (t * t - 7) * (t * t - 10);\n    const y = Math.pow(t, 4) - 13 * t * t;\n    const z = 1 / 10 * t * (t * t - 4) * (t * t - 9) * (t * t - 12);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot4a extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    t *= Math.PI * 2;\n    const x = Math.cos(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n    const y = Math.sin(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n    const z = 0.35 * Math.sin(5 * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot4b extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n    const y = Math.sin(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n    const z = 0.2 * Math.sin(9 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot5a extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n    const y = Math.sin(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n    const z = 0.2 * Math.sin(20 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot5c extends Curve {\n  constructor() {\n    let scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    super();\n    this.scale = scale;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n    const y = Math.sin(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n    const z = 0.35 * Math.sin(15 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nexport { CinquefoilKnot, DecoratedTorusKnot4a, DecoratedTorusKnot4b, DecoratedTorusKnot5a, DecoratedTorusKnot5c, FigureEightPolynomialKnot, GrannyKnot, HeartCurve, HelixCurve, KnotCurve, TorusKnot, TrefoilKnot, TrefoilPolynomialKnot, VivianiCurve };","map":{"version":3,"names":["GrannyKnot","Curve","getPoint","t","optionalTarget","arguments","length","undefined","Vector3","point","Math","PI","x","cos","sin","y","z","set","multiplyScalar","HeartCurve","constructor","scale","pow","VivianiCurve","a","KnotCurve","R","s","HelixCurve","b","t2","TrefoilKnot","TorusKnot","p","q","CinquefoilKnot","TrefoilPolynomialKnot","scaleTo","r","FigureEightPolynomialKnot","DecoratedTorusKnot4a","DecoratedTorusKnot4b","fi","DecoratedTorusKnot5a","DecoratedTorusKnot5c"],"sources":["D:\\Repos\\NIKE-DJANGO\\Jord\\l4fycy\\node_modules\\src\\curves\\CurveExtras.js"],"sourcesContent":["import { Curve, Vector3 } from 'three'\n\n/**\n * A bunch of parametric curves\n *\n * Formulas collected from various sources\n * http://mathworld.wolfram.com/HeartCurve.html\n * http://en.wikipedia.org/wiki/Viviani%27s_curve\n * http://www.mi.sanu.ac.rs/vismath/taylorapril2011/Taylor.pdf\n * https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\n// GrannyKnot\n\nclass GrannyKnot extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t = 2 * Math.PI * t\n\n    const x = -0.22 * Math.cos(t) - 1.28 * Math.sin(t) - 0.44 * Math.cos(3 * t) - 0.78 * Math.sin(3 * t)\n    const y = -0.1 * Math.cos(2 * t) - 0.27 * Math.sin(2 * t) + 0.38 * Math.cos(4 * t) + 0.46 * Math.sin(4 * t)\n    const z = 0.7 * Math.cos(3 * t) - 0.4 * Math.sin(3 * t)\n\n    return point.set(x, y, z).multiplyScalar(20)\n  }\n}\n\n// HeartCurve\n\nclass HeartCurve extends Curve {\n  constructor(scale = 5) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t *= 2 * Math.PI\n\n    const x = 16 * Math.pow(Math.sin(t), 3)\n    const y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t)\n    const z = 0\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// Viviani's Curve\n\nclass VivianiCurve extends Curve {\n  constructor(scale = 70) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t = t * 4 * Math.PI // normalized to 0..1\n    const a = this.scale / 2\n\n    const x = a * (1 + Math.cos(t))\n    const y = a * Math.sin(t)\n    const z = 2 * a * Math.sin(t / 2)\n\n    return point.set(x, y, z)\n  }\n}\n\n// KnotCurve\n\nclass KnotCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t *= 2 * Math.PI\n\n    const R = 10\n    const s = 50\n\n    const x = s * Math.sin(t)\n    const y = Math.cos(t) * (R + s * Math.cos(t))\n    const z = Math.sin(t) * (R + s * Math.cos(t))\n\n    return point.set(x, y, z)\n  }\n}\n\n// HelixCurve\n\nclass HelixCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const a = 30 // radius\n    const b = 150 // height\n\n    const t2 = (2 * Math.PI * t * b) / 30\n\n    const x = Math.cos(t2) * a\n    const y = Math.sin(t2) * a\n    const z = b * t\n\n    return point.set(x, y, z)\n  }\n}\n\n// TrefoilKnot\n\nclass TrefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t *= Math.PI * 2\n\n    const x = (2 + Math.cos(3 * t)) * Math.cos(2 * t)\n    const y = (2 + Math.cos(3 * t)) * Math.sin(2 * t)\n    const z = Math.sin(3 * t)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// TorusKnot\n\nclass TorusKnot extends Curve {\n  constructor(scale = 10) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const p = 3\n    const q = 4\n\n    t *= Math.PI * 2\n\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t)\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t)\n    const z = Math.sin(q * t)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// CinquefoilKnot\n\nclass CinquefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const p = 2\n    const q = 5\n\n    t *= Math.PI * 2\n\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t)\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t)\n    const z = Math.sin(q * t)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// TrefoilPolynomialKnot\n\nclass TrefoilPolynomialKnot extends Curve {\n  constructor(scale = 10) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t = t * 4 - 2\n\n    const x = Math.pow(t, 3) - 3 * t\n    const y = Math.pow(t, 4) - 4 * t * t\n    const z = (1 / 5) * Math.pow(t, 5) - 2 * t\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\nfunction scaleTo(x, y, t) {\n  const r = y - x\n  return t * r + x\n}\n\n// FigureEightPolynomialKnot\n\nclass FigureEightPolynomialKnot extends Curve {\n  constructor(scale = 1) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t = scaleTo(-4, 4, t)\n\n    const x = (2 / 5) * t * (t * t - 7) * (t * t - 10)\n    const y = Math.pow(t, 4) - 13 * t * t\n    const z = (1 / 10) * t * (t * t - 4) * (t * t - 9) * (t * t - 12)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// DecoratedTorusKnot4a\n\nclass DecoratedTorusKnot4a extends Curve {\n  constructor(scale = 40) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t *= Math.PI * 2\n\n    const x = Math.cos(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)))\n    const y = Math.sin(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)))\n    const z = 0.35 * Math.sin(5 * t)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// DecoratedTorusKnot4b\n\nclass DecoratedTorusKnot4b extends Curve {\n  constructor(scale = 40) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const fi = t * Math.PI * 2\n\n    const x = Math.cos(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi))\n    const y = Math.sin(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi))\n    const z = 0.2 * Math.sin(9 * fi)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// DecoratedTorusKnot5a\n\nclass DecoratedTorusKnot5a extends Curve {\n  constructor(scale = 40) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const fi = t * Math.PI * 2\n\n    const x = Math.cos(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi))\n    const y = Math.sin(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi))\n    const z = 0.2 * Math.sin(20 * fi)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// DecoratedTorusKnot5c\n\nclass DecoratedTorusKnot5c extends Curve {\n  constructor(scale = 40) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const fi = t * Math.PI * 2\n\n    const x = Math.cos(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)))\n    const y = Math.sin(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)))\n    const z = 0.35 * Math.sin(15 * fi)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\nexport {\n  GrannyKnot,\n  HeartCurve,\n  VivianiCurve,\n  KnotCurve,\n  HelixCurve,\n  TrefoilKnot,\n  TorusKnot,\n  CinquefoilKnot,\n  TrefoilPolynomialKnot,\n  FigureEightPolynomialKnot,\n  DecoratedTorusKnot4a,\n  DecoratedTorusKnot4b,\n  DecoratedTorusKnot5a,\n  DecoratedTorusKnot5c,\n}\n"],"mappings":";AAcA,MAAMA,UAAA,SAAmBC,KAAA,CAAM;EAC7BC,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEdD,CAAA,GAAI,IAAIO,IAAA,CAAKC,EAAA,GAAKR,CAAA;IAElB,MAAMS,CAAA,GAAI,QAAQF,IAAA,CAAKG,GAAA,CAAIV,CAAC,IAAI,OAAOO,IAAA,CAAKI,GAAA,CAAIX,CAAC,IAAI,OAAOO,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,IAAI,OAAOO,IAAA,CAAKI,GAAA,CAAI,IAAIX,CAAC;IACnG,MAAMY,CAAA,GAAI,OAAOL,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,IAAI,OAAOO,IAAA,CAAKI,GAAA,CAAI,IAAIX,CAAC,IAAI,OAAOO,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,IAAI,OAAOO,IAAA,CAAKI,GAAA,CAAI,IAAIX,CAAC;IAC1G,MAAMa,CAAA,GAAI,MAAMN,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,IAAI,MAAMO,IAAA,CAAKI,GAAA,CAAI,IAAIX,CAAC;IAEtD,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,EAAE;EAC5C;AACH;AAIA,MAAMC,UAAA,SAAmBlB,KAAA,CAAM;EAC7BmB,YAAA,EAAuB;IAAA,IAAXC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEdD,CAAA,IAAK,IAAIO,IAAA,CAAKC,EAAA;IAEd,MAAMC,CAAA,GAAI,KAAKF,IAAA,CAAKY,GAAA,CAAIZ,IAAA,CAAKI,GAAA,CAAIX,CAAC,GAAG,CAAC;IACtC,MAAMY,CAAA,GAAI,KAAKL,IAAA,CAAKG,GAAA,CAAIV,CAAC,IAAI,IAAIO,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,IAAI,IAAIO,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,IAAIO,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC;IACvF,MAAMa,CAAA,GAAI;IAEV,OAAOP,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH;AAIA,MAAME,YAAA,SAAqBtB,KAAA,CAAM;EAC/BmB,YAAA,EAAwB;IAAA,IAAZC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEdD,CAAA,GAAIA,CAAA,GAAI,IAAIO,IAAA,CAAKC,EAAA;IACjB,MAAMa,CAAA,GAAI,KAAKH,KAAA,GAAQ;IAEvB,MAAMT,CAAA,GAAIY,CAAA,IAAK,IAAId,IAAA,CAAKG,GAAA,CAAIV,CAAC;IAC7B,MAAMY,CAAA,GAAIS,CAAA,GAAId,IAAA,CAAKI,GAAA,CAAIX,CAAC;IACxB,MAAMa,CAAA,GAAI,IAAIQ,CAAA,GAAId,IAAA,CAAKI,GAAA,CAAIX,CAAA,GAAI,CAAC;IAEhC,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC;EACzB;AACH;AAIA,MAAMS,SAAA,SAAkBxB,KAAA,CAAM;EAC5BC,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEdD,CAAA,IAAK,IAAIO,IAAA,CAAKC,EAAA;IAEd,MAAMe,CAAA,GAAI;IACV,MAAMC,CAAA,GAAI;IAEV,MAAMf,CAAA,GAAIe,CAAA,GAAIjB,IAAA,CAAKI,GAAA,CAAIX,CAAC;IACxB,MAAMY,CAAA,GAAIL,IAAA,CAAKG,GAAA,CAAIV,CAAC,KAAKuB,CAAA,GAAIC,CAAA,GAAIjB,IAAA,CAAKG,GAAA,CAAIV,CAAC;IAC3C,MAAMa,CAAA,GAAIN,IAAA,CAAKI,GAAA,CAAIX,CAAC,KAAKuB,CAAA,GAAIC,CAAA,GAAIjB,IAAA,CAAKG,GAAA,CAAIV,CAAC;IAE3C,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC;EACzB;AACH;AAIA,MAAMY,UAAA,SAAmB3B,KAAA,CAAM;EAC7BC,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEd,MAAMoB,CAAA,GAAI;IACV,MAAMK,CAAA,GAAI;IAEV,MAAMC,EAAA,GAAM,IAAIpB,IAAA,CAAKC,EAAA,GAAKR,CAAA,GAAI0B,CAAA,GAAK;IAEnC,MAAMjB,CAAA,GAAIF,IAAA,CAAKG,GAAA,CAAIiB,EAAE,IAAIN,CAAA;IACzB,MAAMT,CAAA,GAAIL,IAAA,CAAKI,GAAA,CAAIgB,EAAE,IAAIN,CAAA;IACzB,MAAMR,CAAA,GAAIa,CAAA,GAAI1B,CAAA;IAEd,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC;EACzB;AACH;AAIA,MAAMe,WAAA,SAAoB9B,KAAA,CAAM;EAC9BmB,YAAA,EAAwB;IAAA,IAAZC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEdD,CAAA,IAAKO,IAAA,CAAKC,EAAA,GAAK;IAEf,MAAMC,CAAA,IAAK,IAAIF,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,KAAKO,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC;IAChD,MAAMY,CAAA,IAAK,IAAIL,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,KAAKO,IAAA,CAAKI,GAAA,CAAI,IAAIX,CAAC;IAChD,MAAMa,CAAA,GAAIN,IAAA,CAAKI,GAAA,CAAI,IAAIX,CAAC;IAExB,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH;AAIA,MAAMW,SAAA,SAAkB/B,KAAA,CAAM;EAC5BmB,YAAA,EAAwB;IAAA,IAAZC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEd,MAAM6B,CAAA,GAAI;IACV,MAAMC,CAAA,GAAI;IAEV/B,CAAA,IAAKO,IAAA,CAAKC,EAAA,GAAK;IAEf,MAAMC,CAAA,IAAK,IAAIF,IAAA,CAAKG,GAAA,CAAIqB,CAAA,GAAI/B,CAAC,KAAKO,IAAA,CAAKG,GAAA,CAAIoB,CAAA,GAAI9B,CAAC;IAChD,MAAMY,CAAA,IAAK,IAAIL,IAAA,CAAKG,GAAA,CAAIqB,CAAA,GAAI/B,CAAC,KAAKO,IAAA,CAAKI,GAAA,CAAImB,CAAA,GAAI9B,CAAC;IAChD,MAAMa,CAAA,GAAIN,IAAA,CAAKI,GAAA,CAAIoB,CAAA,GAAI/B,CAAC;IAExB,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH;AAIA,MAAMc,cAAA,SAAuBlC,KAAA,CAAM;EACjCmB,YAAA,EAAwB;IAAA,IAAZC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEd,MAAM6B,CAAA,GAAI;IACV,MAAMC,CAAA,GAAI;IAEV/B,CAAA,IAAKO,IAAA,CAAKC,EAAA,GAAK;IAEf,MAAMC,CAAA,IAAK,IAAIF,IAAA,CAAKG,GAAA,CAAIqB,CAAA,GAAI/B,CAAC,KAAKO,IAAA,CAAKG,GAAA,CAAIoB,CAAA,GAAI9B,CAAC;IAChD,MAAMY,CAAA,IAAK,IAAIL,IAAA,CAAKG,GAAA,CAAIqB,CAAA,GAAI/B,CAAC,KAAKO,IAAA,CAAKI,GAAA,CAAImB,CAAA,GAAI9B,CAAC;IAChD,MAAMa,CAAA,GAAIN,IAAA,CAAKI,GAAA,CAAIoB,CAAA,GAAI/B,CAAC;IAExB,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH;AAIA,MAAMe,qBAAA,SAA8BnC,KAAA,CAAM;EACxCmB,YAAA,EAAwB;IAAA,IAAZC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEdD,CAAA,GAAIA,CAAA,GAAI,IAAI;IAEZ,MAAMS,CAAA,GAAIF,IAAA,CAAKY,GAAA,CAAInB,CAAA,EAAG,CAAC,IAAI,IAAIA,CAAA;IAC/B,MAAMY,CAAA,GAAIL,IAAA,CAAKY,GAAA,CAAInB,CAAA,EAAG,CAAC,IAAI,IAAIA,CAAA,GAAIA,CAAA;IACnC,MAAMa,CAAA,GAAK,IAAI,IAAKN,IAAA,CAAKY,GAAA,CAAInB,CAAA,EAAG,CAAC,IAAI,IAAIA,CAAA;IAEzC,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH;AAEA,SAASgB,QAAQzB,CAAA,EAAGG,CAAA,EAAGZ,CAAA,EAAG;EACxB,MAAMmC,CAAA,GAAIvB,CAAA,GAAIH,CAAA;EACd,OAAOT,CAAA,GAAImC,CAAA,GAAI1B,CAAA;AACjB;AAIA,MAAM2B,yBAAA,SAAkCtC,KAAA,CAAM;EAC5CmB,YAAA,EAAuB;IAAA,IAAXC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEdD,CAAA,GAAIkC,OAAA,CAAQ,IAAI,GAAGlC,CAAC;IAEpB,MAAMS,CAAA,GAAK,IAAI,IAAKT,CAAA,IAAKA,CAAA,GAAIA,CAAA,GAAI,MAAMA,CAAA,GAAIA,CAAA,GAAI;IAC/C,MAAMY,CAAA,GAAIL,IAAA,CAAKY,GAAA,CAAInB,CAAA,EAAG,CAAC,IAAI,KAAKA,CAAA,GAAIA,CAAA;IACpC,MAAMa,CAAA,GAAK,IAAI,KAAMb,CAAA,IAAKA,CAAA,GAAIA,CAAA,GAAI,MAAMA,CAAA,GAAIA,CAAA,GAAI,MAAMA,CAAA,GAAIA,CAAA,GAAI;IAE9D,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH;AAIA,MAAMmB,oBAAA,SAA6BvC,KAAA,CAAM;EACvCmB,YAAA,EAAwB;IAAA,IAAZC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEdD,CAAA,IAAKO,IAAA,CAAKC,EAAA,GAAK;IAEf,MAAMC,CAAA,GAAIF,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,KAAK,IAAI,OAAOO,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,IAAI,OAAOO,IAAA,CAAKG,GAAA,CAAI,KAAKV,CAAC;IAChF,MAAMY,CAAA,GAAIL,IAAA,CAAKI,GAAA,CAAI,IAAIX,CAAC,KAAK,IAAI,OAAOO,IAAA,CAAKG,GAAA,CAAI,IAAIV,CAAC,IAAI,OAAOO,IAAA,CAAKG,GAAA,CAAI,KAAKV,CAAC;IAChF,MAAMa,CAAA,GAAI,OAAON,IAAA,CAAKI,GAAA,CAAI,IAAIX,CAAC;IAE/B,OAAOM,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH;AAIA,MAAMoB,oBAAA,SAA6BxC,KAAA,CAAM;EACvCmB,YAAA,EAAwB;IAAA,IAAZC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEd,MAAMsC,EAAA,GAAKvC,CAAA,GAAIO,IAAA,CAAKC,EAAA,GAAK;IAEzB,MAAMC,CAAA,GAAIF,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE,KAAK,IAAI,OAAOhC,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE,IAAI,MAAMhC,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE;IACjF,MAAM3B,CAAA,GAAIL,IAAA,CAAKI,GAAA,CAAI,IAAI4B,EAAE,KAAK,IAAI,OAAOhC,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE,IAAI,MAAMhC,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE;IACjF,MAAM1B,CAAA,GAAI,MAAMN,IAAA,CAAKI,GAAA,CAAI,IAAI4B,EAAE;IAE/B,OAAOjC,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH;AAIA,MAAMsB,oBAAA,SAA6B1C,KAAA,CAAM;EACvCmB,YAAA,EAAwB;IAAA,IAAZC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEd,MAAMsC,EAAA,GAAKvC,CAAA,GAAIO,IAAA,CAAKC,EAAA,GAAK;IAEzB,MAAMC,CAAA,GAAIF,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE,KAAK,IAAI,MAAMhC,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE,IAAI,MAAMhC,IAAA,CAAKG,GAAA,CAAI,KAAK6B,EAAE;IACjF,MAAM3B,CAAA,GAAIL,IAAA,CAAKI,GAAA,CAAI,IAAI4B,EAAE,KAAK,IAAI,MAAMhC,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE,IAAI,MAAMhC,IAAA,CAAKG,GAAA,CAAI,KAAK6B,EAAE;IACjF,MAAM1B,CAAA,GAAI,MAAMN,IAAA,CAAKI,GAAA,CAAI,KAAK4B,EAAE;IAEhC,OAAOjC,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH;AAIA,MAAMuB,oBAAA,SAA6B3C,KAAA,CAAM;EACvCmB,YAAA,EAAwB;IAAA,IAAZC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ;IAClB,MAAO;IAEP,KAAKgB,KAAA,GAAQA,KAAA;EACd;EAEDnB,SAASC,CAAA,EAAmC;IAAA,IAAhCC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IAAIG,OAAA,CAAO;IACtC,MAAMC,KAAA,GAAQL,cAAA;IAEd,MAAMsC,EAAA,GAAKvC,CAAA,GAAIO,IAAA,CAAKC,EAAA,GAAK;IAEzB,MAAMC,CAAA,GAAIF,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE,KAAK,IAAI,OAAOhC,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE,IAAI,MAAMhC,IAAA,CAAKG,GAAA,CAAI,KAAK6B,EAAE;IAClF,MAAM3B,CAAA,GAAIL,IAAA,CAAKI,GAAA,CAAI,IAAI4B,EAAE,KAAK,IAAI,OAAOhC,IAAA,CAAKG,GAAA,CAAI,IAAI6B,EAAE,IAAI,MAAMhC,IAAA,CAAKG,GAAA,CAAI,KAAK6B,EAAE;IAClF,MAAM1B,CAAA,GAAI,OAAON,IAAA,CAAKI,GAAA,CAAI,KAAK4B,EAAE;IAEjC,OAAOjC,KAAA,CAAMQ,GAAA,CAAIL,CAAA,EAAGG,CAAA,EAAGC,CAAC,EAAEE,cAAA,CAAe,KAAKG,KAAK;EACpD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}