{"ast":null,"code":"import _classCallCheck from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { DataTextureLoader, HalfFloatType, CubeTexture, RGBAFormat, LinearFilter, DataUtils } from 'three';\n\nvar RGBMLoader = /*#__PURE__*/function (_DataTextureLoader) {\n  _inherits(RGBMLoader, _DataTextureLoader);\n\n  var _super = _createSuper(RGBMLoader);\n\n  function RGBMLoader(manager) {\n    var _this;\n\n    _classCallCheck(this, RGBMLoader);\n\n    _this = _super.call(this, manager);\n    _this.type = HalfFloatType;\n    _this.maxRange = 7; // more information about this property at https://iwasbeingirony.blogspot.com/2010/06/difference-between-rgbm-and-rgbd.html\n\n    return _this;\n  }\n\n  _createClass(RGBMLoader, [{\n    key: \"setDataType\",\n    value: function setDataType(value) {\n      this.type = value;\n      return this;\n    }\n  }, {\n    key: \"setMaxRange\",\n    value: function setMaxRange(value) {\n      this.maxRange = value;\n      return this;\n    }\n  }, {\n    key: \"loadCubemap\",\n    value: function loadCubemap(urls, onLoad, onProgress, onError) {\n      var texture = new CubeTexture();\n      var loaded = 0;\n      var scope = this;\n\n      function loadTexture(i) {\n        scope.load(urls[i], function (image) {\n          texture.images[i] = image;\n          loaded++;\n\n          if (loaded === 6) {\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, undefined, onError);\n      }\n\n      for (var i = 0; i < urls.length; ++i) {\n        loadTexture(i);\n      }\n\n      texture.type = this.type;\n      texture.format = RGBAFormat;\n      texture.minFilter = LinearFilter;\n      texture.generateMipmaps = false;\n      return texture;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(buffer) {\n      var img = UPNG.decode(buffer);\n      var rgba = UPNG.toRGBA8(img)[0];\n      var data = new Uint8Array(rgba);\n      var size = img.width * img.height * 4;\n      var output = this.type === HalfFloatType ? new Uint16Array(size) : new Float32Array(size); // decode RGBM\n\n      for (var i = 0; i < data.length; i += 4) {\n        var r = data[i + 0] / 255;\n        var g = data[i + 1] / 255;\n        var b = data[i + 2] / 255;\n        var a = data[i + 3] / 255;\n\n        if (this.type === HalfFloatType) {\n          output[i + 0] = DataUtils.toHalfFloat(Math.min(r * a * this.maxRange, 65504));\n          output[i + 1] = DataUtils.toHalfFloat(Math.min(g * a * this.maxRange, 65504));\n          output[i + 2] = DataUtils.toHalfFloat(Math.min(b * a * this.maxRange, 65504));\n          output[i + 3] = DataUtils.toHalfFloat(1);\n        } else {\n          output[i + 0] = r * a * this.maxRange;\n          output[i + 1] = g * a * this.maxRange;\n          output[i + 2] = b * a * this.maxRange;\n          output[i + 3] = 1;\n        }\n      }\n\n      return {\n        width: img.width,\n        height: img.height,\n        data: output,\n        format: RGBAFormat,\n        type: this.type,\n        flipY: true\n      };\n    }\n  }]);\n\n  return RGBMLoader;\n}(DataTextureLoader); // from https://github.com/photopea/UPNG.js (MIT License)\n\n\nvar UPNG = {};\n\nUPNG.toRGBA8 = function (out) {\n  var w = out.width,\n      h = out.height;\n  if (out.tabs.acTL == null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n  var frms = [];\n  if (out.frames[0].data == null) out.frames[0].data = out.data;\n  var len = w * h * 4,\n      img = new Uint8Array(len),\n      empty = new Uint8Array(len),\n      prev = new Uint8Array(len);\n\n  for (var i = 0; i < out.frames.length; i++) {\n    var frm = out.frames[i];\n    var fx = frm.rect.x,\n        fy = frm.rect.y,\n        fw = frm.rect.width,\n        fh = frm.rect.height;\n    var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw, fh, out);\n    if (i != 0) for (var j = 0; j < len; j++) {\n      prev[j] = img[j];\n    }\n    if (frm.blend == 0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);else if (frm.blend == 1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n    frms.push(img.buffer.slice(0));\n    if (frm.dispose == 1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);else if (frm.dispose == 2) for (var j = 0; j < len; j++) {\n      img[j] = prev[j];\n    }\n  }\n\n  return frms;\n};\n\nUPNG.toRGBA8.decodeImage = function (data, w, h, out) {\n  var area = w * h,\n      bpp = UPNG.decode._getBPP(out);\n\n  var bpl = Math.ceil(w * bpp / 8); // bytes per line\n\n  var bf = new Uint8Array(area * 4),\n      bf32 = new Uint32Array(bf.buffer);\n  var ctype = out.ctype,\n      depth = out.depth;\n  var rs = UPNG._bin.readUshort;\n\n  if (ctype == 6) {\n    // RGB + alpha\n    var qarea = area << 2;\n    if (depth == 8) for (var i = 0; i < qarea; i += 4) {\n      bf[i] = data[i];\n      bf[i + 1] = data[i + 1];\n      bf[i + 2] = data[i + 2];\n      bf[i + 3] = data[i + 3];\n    }\n    if (depth == 16) for (var i = 0; i < qarea; i++) {\n      bf[i] = data[i << 1];\n    }\n  } else if (ctype == 2) {\n    // RGB\n    var ts = out.tabs['tRNS'];\n\n    if (ts == null) {\n      if (depth == 8) for (var i = 0; i < area; i++) {\n        var ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n      }\n      if (depth == 16) for (var i = 0; i < area; i++) {\n        var ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n      }\n    } else {\n      var tr = ts[0],\n          tg = ts[1],\n          tb = ts[2];\n      if (depth == 8) for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n            ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n        if (data[ti] == tr && data[ti + 1] == tg && data[ti + 2] == tb) bf[qi + 3] = 0;\n      }\n      if (depth == 16) for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n            ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n        if (rs(data, ti) == tr && rs(data, ti + 2) == tg && rs(data, ti + 4) == tb) bf[qi + 3] = 0;\n      }\n    }\n  } else if (ctype == 3) {\n    // palette\n    var p = out.tabs['PLTE'],\n        ap = out.tabs['tRNS'],\n        tl = ap ? ap.length : 0; //console.log(p, ap);\n\n    if (depth == 1) for (var y = 0; y < h; y++) {\n      var s0 = y * bpl,\n          t0 = y * w;\n\n      for (var i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n            j = data[s0 + (i >> 3)] >> 7 - ((i & 7) << 0) & 1,\n            cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 2) for (var y = 0; y < h; y++) {\n      var s0 = y * bpl,\n          t0 = y * w;\n\n      for (var i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n            j = data[s0 + (i >> 2)] >> 6 - ((i & 3) << 1) & 3,\n            cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 4) for (var y = 0; y < h; y++) {\n      var s0 = y * bpl,\n          t0 = y * w;\n\n      for (var i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n            j = data[s0 + (i >> 1)] >> 4 - ((i & 1) << 2) & 15,\n            cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 8) for (var i = 0; i < area; i++) {\n      var qi = i << 2,\n          j = data[i],\n          cj = 3 * j;\n      bf[qi] = p[cj];\n      bf[qi + 1] = p[cj + 1];\n      bf[qi + 2] = p[cj + 2];\n      bf[qi + 3] = j < tl ? ap[j] : 255;\n    }\n  } else if (ctype == 4) {\n    // gray + alpha\n    if (depth == 8) for (var i = 0; i < area; i++) {\n      var qi = i << 2,\n          di = i << 1,\n          gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 1];\n    }\n    if (depth == 16) for (var i = 0; i < area; i++) {\n      var qi = i << 2,\n          di = i << 2,\n          gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 2];\n    }\n  } else if (ctype == 0) {\n    // gray\n    var tr = out.tabs['tRNS'] ? out.tabs['tRNS'] : -1;\n\n    for (var y = 0; y < h; y++) {\n      var off = y * bpl,\n          to = y * w;\n      if (depth == 1) for (var x = 0; x < w; x++) {\n        var gr = 255 * (data[off + (x >>> 3)] >>> 7 - (x & 7) & 1),\n            al = gr == tr * 255 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 2) for (var x = 0; x < w; x++) {\n        var gr = 85 * (data[off + (x >>> 2)] >>> 6 - ((x & 3) << 1) & 3),\n            al = gr == tr * 85 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 4) for (var x = 0; x < w; x++) {\n        var gr = 17 * (data[off + (x >>> 1)] >>> 4 - ((x & 1) << 2) & 15),\n            al = gr == tr * 17 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 8) for (var x = 0; x < w; x++) {\n        var gr = data[off + x],\n            al = gr == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 16) for (var x = 0; x < w; x++) {\n        var gr = data[off + (x << 1)],\n            al = rs(data, off + (x << 1)) == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      }\n    }\n  } //console.log(Date.now()-time);\n\n\n  return bf;\n};\n\nUPNG.decode = function (buff) {\n  var data = new Uint8Array(buff),\n      offset = 8,\n      bin = UPNG._bin,\n      rUs = bin.readUshort,\n      rUi = bin.readUint;\n  var out = {\n    tabs: {},\n    frames: []\n  };\n  var dd = new Uint8Array(data.length),\n      doff = 0; // put all IDAT data into it\n\n  var fd,\n      foff = 0; // frames\n\n  var text, keyw, bfr;\n  var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\n  for (var i = 0; i < 8; i++) {\n    if (data[i] != mgck[i]) throw new Error('The input is not a PNG file!');\n  }\n\n  while (offset < data.length) {\n    var len = bin.readUint(data, offset);\n    offset += 4;\n    var type = bin.readASCII(data, offset, 4);\n    offset += 4; //console.log(type,len);\n\n    if (type == 'IHDR') {\n      UPNG.decode._IHDR(data, offset, out);\n    } else if (type == 'CgBI') {\n      out.tabs[type] = data.slice(offset, offset + 4);\n    } else if (type == 'IDAT') {\n      for (var i = 0; i < len; i++) {\n        dd[doff + i] = data[offset + i];\n      }\n\n      doff += len;\n    } else if (type == 'acTL') {\n      out.tabs[type] = {\n        num_frames: rUi(data, offset),\n        num_plays: rUi(data, offset + 4)\n      };\n      fd = new Uint8Array(data.length);\n    } else if (type == 'fcTL') {\n      if (foff != 0) {\n        var fr = out.frames[out.frames.length - 1];\n        fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n        foff = 0;\n      }\n\n      var rct = {\n        x: rUi(data, offset + 12),\n        y: rUi(data, offset + 16),\n        width: rUi(data, offset + 4),\n        height: rUi(data, offset + 8)\n      };\n      var del = rUs(data, offset + 22);\n      del = rUs(data, offset + 20) / (del == 0 ? 100 : del);\n      var frm = {\n        rect: rct,\n        delay: Math.round(del * 1000),\n        dispose: data[offset + 24],\n        blend: data[offset + 25]\n      }; //console.log(frm);\n\n      out.frames.push(frm);\n    } else if (type == 'fdAT') {\n      for (var i = 0; i < len - 4; i++) {\n        fd[foff + i] = data[offset + i + 4];\n      }\n\n      foff += len - 4;\n    } else if (type == 'pHYs') {\n      out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset + 4), data[offset + 8]];\n    } else if (type == 'cHRM') {\n      out.tabs[type] = [];\n\n      for (var i = 0; i < 8; i++) {\n        out.tabs[type].push(bin.readUint(data, offset + i * 4));\n      }\n    } else if (type == 'tEXt' || type == 'zTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = bin.nextZero(data, offset);\n      keyw = bin.readASCII(data, offset, nz - offset);\n      var tl = offset + len - nz - 1;\n      if (type == 'tEXt') text = bin.readASCII(data, nz + 1, tl);else {\n        bfr = UPNG.decode._inflate(data.slice(nz + 2, nz + 2 + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'iTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = 0,\n          off = offset;\n      nz = bin.nextZero(data, off);\n      keyw = bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      var cflag = data[off];\n      off += 2;\n      nz = bin.nextZero(data, off);\n      bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      nz = bin.nextZero(data, off);\n      bin.readUTF8(data, off, nz - off);\n      off = nz + 1;\n      var tl = len - (off - offset);\n      if (cflag == 0) text = bin.readUTF8(data, off, tl);else {\n        bfr = UPNG.decode._inflate(data.slice(off, off + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'PLTE') {\n      out.tabs[type] = bin.readBytes(data, offset, len);\n    } else if (type == 'hIST') {\n      var pl = out.tabs['PLTE'].length / 3;\n      out.tabs[type] = [];\n\n      for (var i = 0; i < pl; i++) {\n        out.tabs[type].push(rUs(data, offset + i * 2));\n      }\n    } else if (type == 'tRNS') {\n      if (out.ctype == 3) out.tabs[type] = bin.readBytes(data, offset, len);else if (out.ctype == 0) out.tabs[type] = rUs(data, offset);else if (out.ctype == 2) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)]; //else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n    } else if (type == 'gAMA') out.tabs[type] = bin.readUint(data, offset) / 100000;else if (type == 'sRGB') out.tabs[type] = data[offset];else if (type == 'bKGD') {\n      if (out.ctype == 0 || out.ctype == 4) out.tabs[type] = [rUs(data, offset)];else if (out.ctype == 2 || out.ctype == 6) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];else if (out.ctype == 3) out.tabs[type] = data[offset];\n    } else if (type == 'IEND') {\n      break;\n    } //else {  console.log(\"unknown chunk type\", type, len);  out.tabs[type]=data.slice(offset,offset+len);  }\n\n\n    offset += len;\n    bin.readUint(data, offset);\n    offset += 4;\n  }\n\n  if (foff != 0) {\n    var fr = out.frames[out.frames.length - 1];\n    fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n  }\n\n  out.data = UPNG.decode._decompress(out, dd, out.width, out.height);\n  delete out.compress;\n  delete out.interlace;\n  delete out.filter;\n  return out;\n};\n\nUPNG.decode._decompress = function (out, dd, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n      bpl = Math.ceil(w * bpp / 8),\n      buff = new Uint8Array((bpl + 1 + out.interlace) * h);\n\n  if (out.tabs['CgBI']) dd = UPNG.inflateRaw(dd, buff);else dd = UPNG.decode._inflate(dd, buff);\n  if (out.interlace == 0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);else if (out.interlace == 1) dd = UPNG.decode._readInterlace(dd, out);\n  return dd;\n};\n\nUPNG.decode._inflate = function (data, buff) {\n  var out = UPNG['inflateRaw'](new Uint8Array(data.buffer, 2, data.length - 6), buff);\n  return out;\n};\n\nUPNG.inflateRaw = function () {\n  var H = {};\n  H.H = {};\n\n  H.H.N = function (N, W) {\n    var R = Uint8Array,\n        i = 0,\n        m = 0,\n        J = 0,\n        h = 0,\n        Q = 0,\n        X = 0,\n        u = 0,\n        w = 0,\n        d = 0,\n        v,\n        C;\n    if (N[0] == 3 && N[1] == 0) return W ? W : new R(0);\n    var V = H.H,\n        n = V.b,\n        A = V.e,\n        l = V.R,\n        M = V.n,\n        I = V.A,\n        e = V.Z,\n        b = V.m,\n        Z = W == null;\n    if (Z) W = new R(N.length >>> 2 << 5);\n\n    while (i == 0) {\n      i = n(N, d, 1);\n      m = n(N, d + 1, 2);\n      d += 3;\n\n      if (m == 0) {\n        if ((d & 7) != 0) d += 8 - (d & 7);\n        var D = (d >>> 3) + 4,\n            q = N[D - 4] | N[D - 3] << 8;\n        if (Z) W = H.H.W(W, w + q);\n        W.set(new R(N.buffer, N.byteOffset + D, q), w);\n        d = D + q << 3;\n        w += q;\n        continue;\n      }\n\n      if (Z) W = H.H.W(W, w + (1 << 17));\n\n      if (m == 1) {\n        v = b.J;\n        C = b.h;\n        X = (1 << 9) - 1;\n        u = (1 << 5) - 1;\n      }\n\n      if (m == 2) {\n        J = A(N, d, 5) + 257;\n        h = A(N, d + 5, 5) + 1;\n        Q = A(N, d + 10, 4) + 4;\n        d += 14;\n        var j = 1;\n\n        for (var c = 0; c < 38; c += 2) {\n          b.Q[c] = 0;\n          b.Q[c + 1] = 0;\n        }\n\n        for (var c = 0; c < Q; c++) {\n          var K = A(N, d + c * 3, 3);\n          b.Q[(b.X[c] << 1) + 1] = K;\n          if (K > j) j = K;\n        }\n\n        d += 3 * Q;\n        M(b.Q, j);\n        I(b.Q, j, b.u);\n        v = b.w;\n        C = b.d;\n        d = l(b.u, (1 << j) - 1, J + h, N, d, b.v);\n        var r = V.V(b.v, 0, J, b.C);\n        X = (1 << r) - 1;\n        var S = V.V(b.v, J, h, b.D);\n        u = (1 << S) - 1;\n        M(b.C, r);\n        I(b.C, r, v);\n        M(b.D, S);\n        I(b.D, S, C);\n      }\n\n      while (!0) {\n        var T = v[e(N, d) & X];\n        d += T & 15;\n        var p = T >>> 4;\n\n        if (p >>> 8 == 0) {\n          W[w++] = p;\n        } else if (p == 256) {\n          break;\n        } else {\n          var z = w + p - 254;\n\n          if (p > 264) {\n            var _ = b.q[p - 257];\n            z = w + (_ >>> 3) + A(N, d, _ & 7);\n            d += _ & 7;\n          }\n\n          var $ = C[e(N, d) & u];\n          d += $ & 15;\n          var s = $ >>> 4,\n              Y = b.c[s],\n              a = (Y >>> 4) + n(N, d, Y & 15);\n          d += Y & 15;\n\n          while (w < z) {\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n          }\n\n          w = z;\n        }\n      }\n    }\n\n    return W.length == w ? W : W.slice(0, w);\n  };\n\n  H.H.W = function (N, W) {\n    var R = N.length;\n    if (W <= R) return N;\n    var V = new Uint8Array(R << 1);\n    V.set(N, 0);\n    return V;\n  };\n\n  H.H.R = function (N, W, R, V, n, A) {\n    var l = H.H.e,\n        M = H.H.Z,\n        I = 0;\n\n    while (I < R) {\n      var e = N[M(V, n) & W];\n      n += e & 15;\n      var b = e >>> 4;\n\n      if (b <= 15) {\n        A[I] = b;\n        I++;\n      } else {\n        var Z = 0,\n            m = 0;\n\n        if (b == 16) {\n          m = 3 + l(V, n, 2);\n          n += 2;\n          Z = A[I - 1];\n        } else if (b == 17) {\n          m = 3 + l(V, n, 3);\n          n += 3;\n        } else if (b == 18) {\n          m = 11 + l(V, n, 7);\n          n += 7;\n        }\n\n        var J = I + m;\n\n        while (I < J) {\n          A[I] = Z;\n          I++;\n        }\n      }\n    }\n\n    return n;\n  };\n\n  H.H.V = function (N, W, R, V) {\n    var n = 0,\n        A = 0,\n        l = V.length >>> 1;\n\n    while (A < R) {\n      var M = N[A + W];\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = M;\n      if (M > n) n = M;\n      A++;\n    }\n\n    while (A < l) {\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = 0;\n      A++;\n    }\n\n    return n;\n  };\n\n  H.H.n = function (N, W) {\n    var R = H.H.m,\n        V = N.length,\n        n,\n        A,\n        l,\n        M,\n        I,\n        e = R.j;\n\n    for (var M = 0; M <= W; M++) {\n      e[M] = 0;\n    }\n\n    for (M = 1; M < V; M += 2) {\n      e[N[M]]++;\n    }\n\n    var b = R.K;\n    n = 0;\n    e[0] = 0;\n\n    for (A = 1; A <= W; A++) {\n      n = n + e[A - 1] << 1;\n      b[A] = n;\n    }\n\n    for (l = 0; l < V; l += 2) {\n      I = N[l + 1];\n\n      if (I != 0) {\n        N[l] = b[I];\n        b[I]++;\n      }\n    }\n  };\n\n  H.H.A = function (N, W, R) {\n    var V = N.length,\n        n = H.H.m,\n        A = n.r;\n\n    for (var l = 0; l < V; l += 2) {\n      if (N[l + 1] != 0) {\n        var M = l >> 1,\n            I = N[l + 1],\n            e = M << 4 | I,\n            b = W - I,\n            Z = N[l] << b,\n            m = Z + (1 << b);\n\n        while (Z != m) {\n          var J = A[Z] >>> 15 - W;\n          R[J] = e;\n          Z++;\n        }\n      }\n    }\n  };\n\n  H.H.l = function (N, W) {\n    var R = H.H.m.r,\n        V = 15 - W;\n\n    for (var n = 0; n < N.length; n += 2) {\n      var A = N[n] << W - N[n + 1];\n      N[n] = R[A] >>> V;\n    }\n  };\n\n  H.H.M = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n  };\n\n  H.H.I = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n    N[V + 2] |= R >>> 16;\n  };\n\n  H.H.e = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8) >>> (W & 7) & (1 << R) - 1;\n  };\n\n  H.H.b = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7) & (1 << R) - 1;\n  };\n\n  H.H.Z = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7);\n  };\n\n  H.H.i = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16 | N[(W >>> 3) + 3] << 24) >>> (W & 7);\n  };\n\n  H.H.m = function () {\n    var N = Uint16Array,\n        W = Uint32Array;\n    return {\n      K: new N(16),\n      j: new N(16),\n      X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n      S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n      T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n      q: new N(32),\n      p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],\n      z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n      c: new W(32),\n      J: new N(512),\n      _: [],\n      h: new N(32),\n      $: [],\n      w: new N(32768),\n      C: [],\n      v: [],\n      d: new N(32768),\n      D: [],\n      u: new N(512),\n      Q: [],\n      r: new N(1 << 15),\n      s: new W(286),\n      Y: new W(30),\n      a: new W(19),\n      t: new W(15e3),\n      k: new N(1 << 16),\n      g: new N(1 << 15)\n    };\n  }();\n\n  (function () {\n    var N = H.H.m,\n        W = 1 << 15;\n\n    for (var R = 0; R < W; R++) {\n      var V = R;\n      V = (V & 2863311530) >>> 1 | (V & 1431655765) << 1;\n      V = (V & 3435973836) >>> 2 | (V & 858993459) << 2;\n      V = (V & 4042322160) >>> 4 | (V & 252645135) << 4;\n      V = (V & 4278255360) >>> 8 | (V & 16711935) << 8;\n      N.r[R] = (V >>> 16 | V << 16) >>> 17;\n    }\n\n    function n(A, l, M) {\n      while (l-- != 0) {\n        A.push(0, M);\n      }\n    }\n\n    for (var R = 0; R < 32; R++) {\n      N.q[R] = N.S[R] << 3 | N.T[R];\n      N.c[R] = N.p[R] << 4 | N.z[R];\n    }\n\n    n(N._, 144, 8);\n    n(N._, 255 - 143, 9);\n    n(N._, 279 - 255, 7);\n    n(N._, 287 - 279, 8);\n    H.H.n(N._, 9);\n    H.H.A(N._, 9, N.J);\n    H.H.l(N._, 9);\n    n(N.$, 32, 5);\n    H.H.n(N.$, 5);\n    H.H.A(N.$, 5, N.h);\n    H.H.l(N.$, 5);\n    n(N.Q, 19, 0);\n    n(N.C, 286, 0);\n    n(N.D, 30, 0);\n    n(N.v, 320, 0);\n  })();\n\n  return H.H.N;\n}();\n\nUPNG.decode._readInterlace = function (data, out) {\n  var w = out.width,\n      h = out.height;\n\n  var bpp = UPNG.decode._getBPP(out),\n      cbpp = bpp >> 3,\n      bpl = Math.ceil(w * bpp / 8);\n\n  var img = new Uint8Array(h * bpl);\n  var di = 0;\n  var starting_row = [0, 0, 4, 0, 2, 0, 1];\n  var starting_col = [0, 4, 0, 2, 0, 1, 0];\n  var row_increment = [8, 8, 8, 4, 4, 2, 2];\n  var col_increment = [8, 8, 4, 4, 2, 2, 1];\n  var pass = 0;\n\n  while (pass < 7) {\n    var ri = row_increment[pass],\n        ci = col_increment[pass];\n    var sw = 0,\n        sh = 0;\n    var cr = starting_row[pass];\n\n    while (cr < h) {\n      cr += ri;\n      sh++;\n    }\n\n    var cc = starting_col[pass];\n\n    while (cc < w) {\n      cc += ci;\n      sw++;\n    }\n\n    var bpll = Math.ceil(sw * bpp / 8);\n\n    UPNG.decode._filterZero(data, out, di, sw, sh);\n\n    var y = 0,\n        row = starting_row[pass];\n    var val;\n\n    while (row < h) {\n      var col = starting_col[pass];\n      var cdi = di + y * bpll << 3;\n\n      while (col < w) {\n        if (bpp == 1) {\n          val = data[cdi >> 3];\n          val = val >> 7 - (cdi & 7) & 1;\n          img[row * bpl + (col >> 3)] |= val << 7 - ((col & 7) << 0);\n        }\n\n        if (bpp == 2) {\n          val = data[cdi >> 3];\n          val = val >> 6 - (cdi & 7) & 3;\n          img[row * bpl + (col >> 2)] |= val << 6 - ((col & 3) << 1);\n        }\n\n        if (bpp == 4) {\n          val = data[cdi >> 3];\n          val = val >> 4 - (cdi & 7) & 15;\n          img[row * bpl + (col >> 1)] |= val << 4 - ((col & 1) << 2);\n        }\n\n        if (bpp >= 8) {\n          var ii = row * bpl + col * cbpp;\n\n          for (var j = 0; j < cbpp; j++) {\n            img[ii + j] = data[(cdi >> 3) + j];\n          }\n        }\n\n        cdi += bpp;\n        col += ci;\n      }\n\n      y++;\n      row += ri;\n    }\n\n    if (sw * sh != 0) di += sh * (1 + bpll);\n    pass = pass + 1;\n  }\n\n  return img;\n};\n\nUPNG.decode._getBPP = function (out) {\n  var noc = [1, null, 3, 1, 2, null, 4][out.ctype];\n  return noc * out.depth;\n};\n\nUPNG.decode._filterZero = function (data, out, off, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n      bpl = Math.ceil(w * bpp / 8),\n      paeth = UPNG.decode._paeth;\n\n  bpp = Math.ceil(bpp / 8);\n  var i,\n      di,\n      type = data[off],\n      x = 0;\n  if (type > 1) data[off] = [0, 0, 1][type - 2];\n  if (type == 3) for (x = bpp; x < bpl; x++) {\n    data[x + 1] = data[x + 1] + (data[x + 1 - bpp] >>> 1) & 255;\n  }\n\n  for (var y = 0; y < h; y++) {\n    i = off + y * bpl;\n    di = i + y + 1;\n    type = data[di - 1];\n    x = 0;\n    if (type == 0) for (; x < bpl; x++) {\n      data[i + x] = data[di + x];\n    } else if (type == 1) {\n      for (; x < bpp; x++) {\n        data[i + x] = data[di + x];\n      }\n\n      for (; x < bpl; x++) {\n        data[i + x] = data[di + x] + data[i + x - bpp];\n      }\n    } else if (type == 2) {\n      for (; x < bpl; x++) {\n        data[i + x] = data[di + x] + data[i + x - bpl];\n      }\n    } else if (type == 3) {\n      for (; x < bpp; x++) {\n        data[i + x] = data[di + x] + (data[i + x - bpl] >>> 1);\n      }\n\n      for (; x < bpl; x++) {\n        data[i + x] = data[di + x] + (data[i + x - bpl] + data[i + x - bpp] >>> 1);\n      }\n    } else {\n      for (; x < bpp; x++) {\n        data[i + x] = data[di + x] + paeth(0, data[i + x - bpl], 0);\n      }\n\n      for (; x < bpl; x++) {\n        data[i + x] = data[di + x] + paeth(data[i + x - bpp], data[i + x - bpl], data[i + x - bpp - bpl]);\n      }\n    }\n  }\n\n  return data;\n};\n\nUPNG.decode._paeth = function (a, b, c) {\n  var p = a + b - c,\n      pa = p - a,\n      pb = p - b,\n      pc = p - c;\n  if (pa * pa <= pb * pb && pa * pa <= pc * pc) return a;else if (pb * pb <= pc * pc) return b;\n  return c;\n};\n\nUPNG.decode._IHDR = function (data, offset, out) {\n  var bin = UPNG._bin;\n  out.width = bin.readUint(data, offset);\n  offset += 4;\n  out.height = bin.readUint(data, offset);\n  offset += 4;\n  out.depth = data[offset];\n  offset++;\n  out.ctype = data[offset];\n  offset++;\n  out.compress = data[offset];\n  offset++;\n  out.filter = data[offset];\n  offset++;\n  out.interlace = data[offset];\n  offset++;\n};\n\nUPNG._bin = {\n  nextZero: function nextZero(data, p) {\n    while (data[p] != 0) {\n      p++;\n    }\n\n    return p;\n  },\n  readUshort: function readUshort(buff, p) {\n    return buff[p] << 8 | buff[p + 1];\n  },\n  writeUshort: function writeUshort(buff, p, n) {\n    buff[p] = n >> 8 & 255;\n    buff[p + 1] = n & 255;\n  },\n  readUint: function readUint(buff, p) {\n    return buff[p] * (256 * 256 * 256) + (buff[p + 1] << 16 | buff[p + 2] << 8 | buff[p + 3]);\n  },\n  writeUint: function writeUint(buff, p, n) {\n    buff[p] = n >> 24 & 255;\n    buff[p + 1] = n >> 16 & 255;\n    buff[p + 2] = n >> 8 & 255;\n    buff[p + 3] = n & 255;\n  },\n  readASCII: function readASCII(buff, p, l) {\n    var s = '';\n\n    for (var i = 0; i < l; i++) {\n      s += String.fromCharCode(buff[p + i]);\n    }\n\n    return s;\n  },\n  writeASCII: function writeASCII(data, p, s) {\n    for (var i = 0; i < s.length; i++) {\n      data[p + i] = s.charCodeAt(i);\n    }\n  },\n  readBytes: function readBytes(buff, p, l) {\n    var arr = [];\n\n    for (var i = 0; i < l; i++) {\n      arr.push(buff[p + i]);\n    }\n\n    return arr;\n  },\n  pad: function pad(n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function readUTF8(buff, p, l) {\n    var s = '',\n        ns;\n\n    for (var i = 0; i < l; i++) {\n      s += '%' + UPNG._bin.pad(buff[p + i].toString(16));\n    }\n\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UPNG._bin.readASCII(buff, p, l);\n    }\n\n    return ns;\n  }\n};\n\nUPNG._copyTile = function (sb, sw, sh, tb, tw, th, xoff, yoff, mode) {\n  var w = Math.min(sw, tw),\n      h = Math.min(sh, th);\n  var si = 0,\n      ti = 0;\n\n  for (var y = 0; y < h; y++) {\n    for (var x = 0; x < w; x++) {\n      if (xoff >= 0 && yoff >= 0) {\n        si = y * sw + x << 2;\n        ti = (yoff + y) * tw + xoff + x << 2;\n      } else {\n        si = (-yoff + y) * sw - xoff + x << 2;\n        ti = y * tw + x << 2;\n      }\n\n      if (mode == 0) {\n        tb[ti] = sb[si];\n        tb[ti + 1] = sb[si + 1];\n        tb[ti + 2] = sb[si + 2];\n        tb[ti + 3] = sb[si + 3];\n      } else if (mode == 1) {\n        var fa = sb[si + 3] * (1 / 255),\n            fr = sb[si] * fa,\n            fg = sb[si + 1] * fa,\n            fb = sb[si + 2] * fa;\n        var ba = tb[ti + 3] * (1 / 255),\n            br = tb[ti] * ba,\n            bg = tb[ti + 1] * ba,\n            bb = tb[ti + 2] * ba;\n        var ifa = 1 - fa,\n            oa = fa + ba * ifa,\n            ioa = oa == 0 ? 0 : 1 / oa;\n        tb[ti + 3] = 255 * oa;\n        tb[ti + 0] = (fr + br * ifa) * ioa;\n        tb[ti + 1] = (fg + bg * ifa) * ioa;\n        tb[ti + 2] = (fb + bb * ifa) * ioa;\n      } else if (mode == 2) {\n        // copy only differences, otherwise zero\n        var fa = sb[si + 3],\n            fr = sb[si],\n            fg = sb[si + 1],\n            fb = sb[si + 2];\n        var ba = tb[ti + 3],\n            br = tb[ti],\n            bg = tb[ti + 1],\n            bb = tb[ti + 2];\n\n        if (fa == ba && fr == br && fg == bg && fb == bb) {\n          tb[ti] = 0;\n          tb[ti + 1] = 0;\n          tb[ti + 2] = 0;\n          tb[ti + 3] = 0;\n        } else {\n          tb[ti] = fr;\n          tb[ti + 1] = fg;\n          tb[ti + 2] = fb;\n          tb[ti + 3] = fa;\n        }\n      } else if (mode == 3) {\n        // check if can be blended\n        var fa = sb[si + 3],\n            fr = sb[si],\n            fg = sb[si + 1],\n            fb = sb[si + 2];\n        var ba = tb[ti + 3],\n            br = tb[ti],\n            bg = tb[ti + 1],\n            bb = tb[ti + 2];\n        if (fa == ba && fr == br && fg == bg && fb == bb) continue; //if(fa!=255 && ba!=0) return false;\n\n        if (fa < 220 && ba > 20) return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nexport { RGBMLoader };","map":{"version":3,"names":["DataTextureLoader","HalfFloatType","CubeTexture","RGBAFormat","LinearFilter","DataUtils","RGBMLoader","manager","type","maxRange","value","urls","onLoad","onProgress","onError","texture","loaded","scope","loadTexture","i","load","image","images","needsUpdate","undefined","length","format","minFilter","generateMipmaps","buffer","img","UPNG","decode","rgba","toRGBA8","data","Uint8Array","size","width","height","output","Uint16Array","Float32Array","r","g","b","a","toHalfFloat","Math","min","flipY","out","w","h","tabs","acTL","decodeImage","frms","frames","len","empty","prev","frm","fx","rect","x","fy","y","fw","fh","fdata","j","blend","_copyTile","push","slice","dispose","area","bpp","_getBPP","bpl","ceil","bf","bf32","Uint32Array","ctype","depth","rs","_bin","readUshort","qarea","ts","ti","tr","tg","tb","qi","p","ap","tl","s0","t0","cj","di","gr","off","to","al","buff","offset","bin","rUs","rUi","readUint","dd","doff","fd","foff","text","keyw","bfr","mgck","Error","readASCII","_IHDR","num_frames","num_plays","fr","_decompress","rct","del","delay","round","nz","nextZero","_inflate","readUTF8","cflag","readBytes","pl","compress","interlace","filter","inflateRaw","_filterZero","_readInterlace","H","N","W","R","m","J","Q","X","u","d","v","C","V","n","A","e","l","M","I","Z","D","q","set","byteOffset","c","K","S","T","z","_","$","s","Y","t","k","cbpp","starting_row","starting_col","row_increment","col_increment","pass","ri","ci","sw","sh","cr","cc","bpll","row","val","col","cdi","ii","noc","paeth","_paeth","pa","pb","pc","writeUshort","writeUint","String","fromCharCode","writeASCII","charCodeAt","arr","pad","ns","toString","decodeURIComponent","sb","tw","th","xoff","yoff","mode","si","fa","fg","fb","ba","br","bg","bb","ifa","oa","ioa"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/loaders/RGBMLoader.js"],"sourcesContent":["import { DataTextureLoader, HalfFloatType, CubeTexture, RGBAFormat, LinearFilter, DataUtils } from 'three';\r\n\r\nclass RGBMLoader extends DataTextureLoader {\r\n  constructor(manager) {\r\n    super(manager);\r\n    this.type = HalfFloatType;\r\n    this.maxRange = 7; // more information about this property at https://iwasbeingirony.blogspot.com/2010/06/difference-between-rgbm-and-rgbd.html\r\n  }\r\n\r\n  setDataType(value) {\r\n    this.type = value;\r\n    return this;\r\n  }\r\n\r\n  setMaxRange(value) {\r\n    this.maxRange = value;\r\n    return this;\r\n  }\r\n\r\n  loadCubemap(urls, onLoad, onProgress, onError) {\r\n    const texture = new CubeTexture();\r\n    let loaded = 0;\r\n    const scope = this;\r\n\r\n    function loadTexture(i) {\r\n      scope.load(urls[i], function (image) {\r\n        texture.images[i] = image;\r\n        loaded++;\r\n\r\n        if (loaded === 6) {\r\n          texture.needsUpdate = true;\r\n          if (onLoad) onLoad(texture);\r\n        }\r\n      }, undefined, onError);\r\n    }\r\n\r\n    for (let i = 0; i < urls.length; ++i) {\r\n      loadTexture(i);\r\n    }\r\n\r\n    texture.type = this.type;\r\n    texture.format = RGBAFormat;\r\n    texture.minFilter = LinearFilter;\r\n    texture.generateMipmaps = false;\r\n    return texture;\r\n  }\r\n\r\n  parse(buffer) {\r\n    const img = UPNG.decode(buffer);\r\n    const rgba = UPNG.toRGBA8(img)[0];\r\n    const data = new Uint8Array(rgba);\r\n    const size = img.width * img.height * 4;\r\n    const output = this.type === HalfFloatType ? new Uint16Array(size) : new Float32Array(size); // decode RGBM\r\n\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const r = data[i + 0] / 255;\r\n      const g = data[i + 1] / 255;\r\n      const b = data[i + 2] / 255;\r\n      const a = data[i + 3] / 255;\r\n\r\n      if (this.type === HalfFloatType) {\r\n        output[i + 0] = DataUtils.toHalfFloat(Math.min(r * a * this.maxRange, 65504));\r\n        output[i + 1] = DataUtils.toHalfFloat(Math.min(g * a * this.maxRange, 65504));\r\n        output[i + 2] = DataUtils.toHalfFloat(Math.min(b * a * this.maxRange, 65504));\r\n        output[i + 3] = DataUtils.toHalfFloat(1);\r\n      } else {\r\n        output[i + 0] = r * a * this.maxRange;\r\n        output[i + 1] = g * a * this.maxRange;\r\n        output[i + 2] = b * a * this.maxRange;\r\n        output[i + 3] = 1;\r\n      }\r\n    }\r\n\r\n    return {\r\n      width: img.width,\r\n      height: img.height,\r\n      data: output,\r\n      format: RGBAFormat,\r\n      type: this.type,\r\n      flipY: true\r\n    };\r\n  }\r\n\r\n} // from https://github.com/photopea/UPNG.js (MIT License)\r\n\r\n\r\nvar UPNG = {};\r\n\r\nUPNG.toRGBA8 = function (out) {\r\n  var w = out.width,\r\n      h = out.height;\r\n  if (out.tabs.acTL == null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\r\n  var frms = [];\r\n  if (out.frames[0].data == null) out.frames[0].data = out.data;\r\n  var len = w * h * 4,\r\n      img = new Uint8Array(len),\r\n      empty = new Uint8Array(len),\r\n      prev = new Uint8Array(len);\r\n\r\n  for (var i = 0; i < out.frames.length; i++) {\r\n    var frm = out.frames[i];\r\n    var fx = frm.rect.x,\r\n        fy = frm.rect.y,\r\n        fw = frm.rect.width,\r\n        fh = frm.rect.height;\r\n    var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw, fh, out);\r\n    if (i != 0) for (var j = 0; j < len; j++) prev[j] = img[j];\r\n    if (frm.blend == 0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);else if (frm.blend == 1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\r\n    frms.push(img.buffer.slice(0));\r\n    if (frm.dispose == 1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);else if (frm.dispose == 2) for (var j = 0; j < len; j++) img[j] = prev[j];\r\n  }\r\n\r\n  return frms;\r\n};\r\n\r\nUPNG.toRGBA8.decodeImage = function (data, w, h, out) {\r\n  var area = w * h,\r\n      bpp = UPNG.decode._getBPP(out);\r\n\r\n  var bpl = Math.ceil(w * bpp / 8); // bytes per line\r\n\r\n  var bf = new Uint8Array(area * 4),\r\n      bf32 = new Uint32Array(bf.buffer);\r\n  var ctype = out.ctype,\r\n      depth = out.depth;\r\n  var rs = UPNG._bin.readUshort;\r\n\r\n  if (ctype == 6) {\r\n    // RGB + alpha\r\n    var qarea = area << 2;\r\n    if (depth == 8) for (var i = 0; i < qarea; i += 4) {\r\n      bf[i] = data[i];\r\n      bf[i + 1] = data[i + 1];\r\n      bf[i + 2] = data[i + 2];\r\n      bf[i + 3] = data[i + 3];\r\n    }\r\n    if (depth == 16) for (var i = 0; i < qarea; i++) {\r\n      bf[i] = data[i << 1];\r\n    }\r\n  } else if (ctype == 2) {\r\n    // RGB\r\n    var ts = out.tabs['tRNS'];\r\n\r\n    if (ts == null) {\r\n      if (depth == 8) for (var i = 0; i < area; i++) {\r\n        var ti = i * 3;\r\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\r\n      }\r\n      if (depth == 16) for (var i = 0; i < area; i++) {\r\n        var ti = i * 6;\r\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\r\n      }\r\n    } else {\r\n      var tr = ts[0],\r\n          tg = ts[1],\r\n          tb = ts[2];\r\n      if (depth == 8) for (var i = 0; i < area; i++) {\r\n        var qi = i << 2,\r\n            ti = i * 3;\r\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\r\n        if (data[ti] == tr && data[ti + 1] == tg && data[ti + 2] == tb) bf[qi + 3] = 0;\r\n      }\r\n      if (depth == 16) for (var i = 0; i < area; i++) {\r\n        var qi = i << 2,\r\n            ti = i * 6;\r\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\r\n        if (rs(data, ti) == tr && rs(data, ti + 2) == tg && rs(data, ti + 4) == tb) bf[qi + 3] = 0;\r\n      }\r\n    }\r\n  } else if (ctype == 3) {\r\n    // palette\r\n    var p = out.tabs['PLTE'],\r\n        ap = out.tabs['tRNS'],\r\n        tl = ap ? ap.length : 0; //console.log(p, ap);\r\n\r\n    if (depth == 1) for (var y = 0; y < h; y++) {\r\n      var s0 = y * bpl,\r\n          t0 = y * w;\r\n\r\n      for (var i = 0; i < w; i++) {\r\n        var qi = t0 + i << 2,\r\n            j = data[s0 + (i >> 3)] >> 7 - ((i & 7) << 0) & 1,\r\n            cj = 3 * j;\r\n        bf[qi] = p[cj];\r\n        bf[qi + 1] = p[cj + 1];\r\n        bf[qi + 2] = p[cj + 2];\r\n        bf[qi + 3] = j < tl ? ap[j] : 255;\r\n      }\r\n    }\r\n    if (depth == 2) for (var y = 0; y < h; y++) {\r\n      var s0 = y * bpl,\r\n          t0 = y * w;\r\n\r\n      for (var i = 0; i < w; i++) {\r\n        var qi = t0 + i << 2,\r\n            j = data[s0 + (i >> 2)] >> 6 - ((i & 3) << 1) & 3,\r\n            cj = 3 * j;\r\n        bf[qi] = p[cj];\r\n        bf[qi + 1] = p[cj + 1];\r\n        bf[qi + 2] = p[cj + 2];\r\n        bf[qi + 3] = j < tl ? ap[j] : 255;\r\n      }\r\n    }\r\n    if (depth == 4) for (var y = 0; y < h; y++) {\r\n      var s0 = y * bpl,\r\n          t0 = y * w;\r\n\r\n      for (var i = 0; i < w; i++) {\r\n        var qi = t0 + i << 2,\r\n            j = data[s0 + (i >> 1)] >> 4 - ((i & 1) << 2) & 15,\r\n            cj = 3 * j;\r\n        bf[qi] = p[cj];\r\n        bf[qi + 1] = p[cj + 1];\r\n        bf[qi + 2] = p[cj + 2];\r\n        bf[qi + 3] = j < tl ? ap[j] : 255;\r\n      }\r\n    }\r\n    if (depth == 8) for (var i = 0; i < area; i++) {\r\n      var qi = i << 2,\r\n          j = data[i],\r\n          cj = 3 * j;\r\n      bf[qi] = p[cj];\r\n      bf[qi + 1] = p[cj + 1];\r\n      bf[qi + 2] = p[cj + 2];\r\n      bf[qi + 3] = j < tl ? ap[j] : 255;\r\n    }\r\n  } else if (ctype == 4) {\r\n    // gray + alpha\r\n    if (depth == 8) for (var i = 0; i < area; i++) {\r\n      var qi = i << 2,\r\n          di = i << 1,\r\n          gr = data[di];\r\n      bf[qi] = gr;\r\n      bf[qi + 1] = gr;\r\n      bf[qi + 2] = gr;\r\n      bf[qi + 3] = data[di + 1];\r\n    }\r\n    if (depth == 16) for (var i = 0; i < area; i++) {\r\n      var qi = i << 2,\r\n          di = i << 2,\r\n          gr = data[di];\r\n      bf[qi] = gr;\r\n      bf[qi + 1] = gr;\r\n      bf[qi + 2] = gr;\r\n      bf[qi + 3] = data[di + 2];\r\n    }\r\n  } else if (ctype == 0) {\r\n    // gray\r\n    var tr = out.tabs['tRNS'] ? out.tabs['tRNS'] : -1;\r\n\r\n    for (var y = 0; y < h; y++) {\r\n      var off = y * bpl,\r\n          to = y * w;\r\n      if (depth == 1) for (var x = 0; x < w; x++) {\r\n        var gr = 255 * (data[off + (x >>> 3)] >>> 7 - (x & 7) & 1),\r\n            al = gr == tr * 255 ? 0 : 255;\r\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\r\n      } else if (depth == 2) for (var x = 0; x < w; x++) {\r\n        var gr = 85 * (data[off + (x >>> 2)] >>> 6 - ((x & 3) << 1) & 3),\r\n            al = gr == tr * 85 ? 0 : 255;\r\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\r\n      } else if (depth == 4) for (var x = 0; x < w; x++) {\r\n        var gr = 17 * (data[off + (x >>> 1)] >>> 4 - ((x & 1) << 2) & 15),\r\n            al = gr == tr * 17 ? 0 : 255;\r\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\r\n      } else if (depth == 8) for (var x = 0; x < w; x++) {\r\n        var gr = data[off + x],\r\n            al = gr == tr ? 0 : 255;\r\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\r\n      } else if (depth == 16) for (var x = 0; x < w; x++) {\r\n        var gr = data[off + (x << 1)],\r\n            al = rs(data, off + (x << 1)) == tr ? 0 : 255;\r\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\r\n      }\r\n    }\r\n  } //console.log(Date.now()-time);\r\n\r\n\r\n  return bf;\r\n};\r\n\r\nUPNG.decode = function (buff) {\r\n  var data = new Uint8Array(buff),\r\n      offset = 8,\r\n      bin = UPNG._bin,\r\n      rUs = bin.readUshort,\r\n      rUi = bin.readUint;\r\n  var out = {\r\n    tabs: {},\r\n    frames: []\r\n  };\r\n  var dd = new Uint8Array(data.length),\r\n      doff = 0; // put all IDAT data into it\r\n\r\n  var fd,\r\n      foff = 0; // frames\r\n\r\n  var text, keyw, bfr;\r\n  var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\r\n\r\n  for (var i = 0; i < 8; i++) if (data[i] != mgck[i]) throw new Error('The input is not a PNG file!');\r\n\r\n  while (offset < data.length) {\r\n    var len = bin.readUint(data, offset);\r\n    offset += 4;\r\n    var type = bin.readASCII(data, offset, 4);\r\n    offset += 4; //console.log(type,len);\r\n\r\n    if (type == 'IHDR') {\r\n      UPNG.decode._IHDR(data, offset, out);\r\n    } else if (type == 'CgBI') {\r\n      out.tabs[type] = data.slice(offset, offset + 4);\r\n    } else if (type == 'IDAT') {\r\n      for (var i = 0; i < len; i++) dd[doff + i] = data[offset + i];\r\n\r\n      doff += len;\r\n    } else if (type == 'acTL') {\r\n      out.tabs[type] = {\r\n        num_frames: rUi(data, offset),\r\n        num_plays: rUi(data, offset + 4)\r\n      };\r\n      fd = new Uint8Array(data.length);\r\n    } else if (type == 'fcTL') {\r\n      if (foff != 0) {\r\n        var fr = out.frames[out.frames.length - 1];\r\n        fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\r\n        foff = 0;\r\n      }\r\n\r\n      var rct = {\r\n        x: rUi(data, offset + 12),\r\n        y: rUi(data, offset + 16),\r\n        width: rUi(data, offset + 4),\r\n        height: rUi(data, offset + 8)\r\n      };\r\n      var del = rUs(data, offset + 22);\r\n      del = rUs(data, offset + 20) / (del == 0 ? 100 : del);\r\n      var frm = {\r\n        rect: rct,\r\n        delay: Math.round(del * 1000),\r\n        dispose: data[offset + 24],\r\n        blend: data[offset + 25]\r\n      }; //console.log(frm);\r\n\r\n      out.frames.push(frm);\r\n    } else if (type == 'fdAT') {\r\n      for (var i = 0; i < len - 4; i++) fd[foff + i] = data[offset + i + 4];\r\n\r\n      foff += len - 4;\r\n    } else if (type == 'pHYs') {\r\n      out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset + 4), data[offset + 8]];\r\n    } else if (type == 'cHRM') {\r\n      out.tabs[type] = [];\r\n\r\n      for (var i = 0; i < 8; i++) out.tabs[type].push(bin.readUint(data, offset + i * 4));\r\n    } else if (type == 'tEXt' || type == 'zTXt') {\r\n      if (out.tabs[type] == null) out.tabs[type] = {};\r\n      var nz = bin.nextZero(data, offset);\r\n      keyw = bin.readASCII(data, offset, nz - offset);\r\n      var tl = offset + len - nz - 1;\r\n      if (type == 'tEXt') text = bin.readASCII(data, nz + 1, tl);else {\r\n        bfr = UPNG.decode._inflate(data.slice(nz + 2, nz + 2 + tl));\r\n        text = bin.readUTF8(bfr, 0, bfr.length);\r\n      }\r\n      out.tabs[type][keyw] = text;\r\n    } else if (type == 'iTXt') {\r\n      if (out.tabs[type] == null) out.tabs[type] = {};\r\n      var nz = 0,\r\n          off = offset;\r\n      nz = bin.nextZero(data, off);\r\n      keyw = bin.readASCII(data, off, nz - off);\r\n      off = nz + 1;\r\n      var cflag = data[off];\r\n      off += 2;\r\n      nz = bin.nextZero(data, off);\r\n      bin.readASCII(data, off, nz - off);\r\n      off = nz + 1;\r\n      nz = bin.nextZero(data, off);\r\n      bin.readUTF8(data, off, nz - off);\r\n      off = nz + 1;\r\n      var tl = len - (off - offset);\r\n      if (cflag == 0) text = bin.readUTF8(data, off, tl);else {\r\n        bfr = UPNG.decode._inflate(data.slice(off, off + tl));\r\n        text = bin.readUTF8(bfr, 0, bfr.length);\r\n      }\r\n      out.tabs[type][keyw] = text;\r\n    } else if (type == 'PLTE') {\r\n      out.tabs[type] = bin.readBytes(data, offset, len);\r\n    } else if (type == 'hIST') {\r\n      var pl = out.tabs['PLTE'].length / 3;\r\n      out.tabs[type] = [];\r\n\r\n      for (var i = 0; i < pl; i++) out.tabs[type].push(rUs(data, offset + i * 2));\r\n    } else if (type == 'tRNS') {\r\n      if (out.ctype == 3) out.tabs[type] = bin.readBytes(data, offset, len);else if (out.ctype == 0) out.tabs[type] = rUs(data, offset);else if (out.ctype == 2) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)]; //else console.log(\"tRNS for unsupported color type\",out.ctype, len);\r\n    } else if (type == 'gAMA') out.tabs[type] = bin.readUint(data, offset) / 100000;else if (type == 'sRGB') out.tabs[type] = data[offset];else if (type == 'bKGD') {\r\n      if (out.ctype == 0 || out.ctype == 4) out.tabs[type] = [rUs(data, offset)];else if (out.ctype == 2 || out.ctype == 6) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];else if (out.ctype == 3) out.tabs[type] = data[offset];\r\n    } else if (type == 'IEND') {\r\n      break;\r\n    } //else {  console.log(\"unknown chunk type\", type, len);  out.tabs[type]=data.slice(offset,offset+len);  }\r\n\r\n\r\n    offset += len;\r\n    bin.readUint(data, offset);\r\n    offset += 4;\r\n  }\r\n\r\n  if (foff != 0) {\r\n    var fr = out.frames[out.frames.length - 1];\r\n    fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\r\n  }\r\n\r\n  out.data = UPNG.decode._decompress(out, dd, out.width, out.height);\r\n  delete out.compress;\r\n  delete out.interlace;\r\n  delete out.filter;\r\n  return out;\r\n};\r\n\r\nUPNG.decode._decompress = function (out, dd, w, h) {\r\n  var bpp = UPNG.decode._getBPP(out),\r\n      bpl = Math.ceil(w * bpp / 8),\r\n      buff = new Uint8Array((bpl + 1 + out.interlace) * h);\r\n\r\n  if (out.tabs['CgBI']) dd = UPNG.inflateRaw(dd, buff);else dd = UPNG.decode._inflate(dd, buff);\r\n  if (out.interlace == 0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);else if (out.interlace == 1) dd = UPNG.decode._readInterlace(dd, out);\r\n  return dd;\r\n};\r\n\r\nUPNG.decode._inflate = function (data, buff) {\r\n  var out = UPNG['inflateRaw'](new Uint8Array(data.buffer, 2, data.length - 6), buff);\r\n  return out;\r\n};\r\n\r\nUPNG.inflateRaw = function () {\r\n  var H = {};\r\n  H.H = {};\r\n\r\n  H.H.N = function (N, W) {\r\n    var R = Uint8Array,\r\n        i = 0,\r\n        m = 0,\r\n        J = 0,\r\n        h = 0,\r\n        Q = 0,\r\n        X = 0,\r\n        u = 0,\r\n        w = 0,\r\n        d = 0,\r\n        v,\r\n        C;\r\n    if (N[0] == 3 && N[1] == 0) return W ? W : new R(0);\r\n    var V = H.H,\r\n        n = V.b,\r\n        A = V.e,\r\n        l = V.R,\r\n        M = V.n,\r\n        I = V.A,\r\n        e = V.Z,\r\n        b = V.m,\r\n        Z = W == null;\r\n    if (Z) W = new R(N.length >>> 2 << 5);\r\n\r\n    while (i == 0) {\r\n      i = n(N, d, 1);\r\n      m = n(N, d + 1, 2);\r\n      d += 3;\r\n\r\n      if (m == 0) {\r\n        if ((d & 7) != 0) d += 8 - (d & 7);\r\n        var D = (d >>> 3) + 4,\r\n            q = N[D - 4] | N[D - 3] << 8;\r\n        if (Z) W = H.H.W(W, w + q);\r\n        W.set(new R(N.buffer, N.byteOffset + D, q), w);\r\n        d = D + q << 3;\r\n        w += q;\r\n        continue;\r\n      }\r\n\r\n      if (Z) W = H.H.W(W, w + (1 << 17));\r\n\r\n      if (m == 1) {\r\n        v = b.J;\r\n        C = b.h;\r\n        X = (1 << 9) - 1;\r\n        u = (1 << 5) - 1;\r\n      }\r\n\r\n      if (m == 2) {\r\n        J = A(N, d, 5) + 257;\r\n        h = A(N, d + 5, 5) + 1;\r\n        Q = A(N, d + 10, 4) + 4;\r\n        d += 14;\r\n        var j = 1;\r\n\r\n        for (var c = 0; c < 38; c += 2) {\r\n          b.Q[c] = 0;\r\n          b.Q[c + 1] = 0;\r\n        }\r\n\r\n        for (var c = 0; c < Q; c++) {\r\n          var K = A(N, d + c * 3, 3);\r\n          b.Q[(b.X[c] << 1) + 1] = K;\r\n          if (K > j) j = K;\r\n        }\r\n\r\n        d += 3 * Q;\r\n        M(b.Q, j);\r\n        I(b.Q, j, b.u);\r\n        v = b.w;\r\n        C = b.d;\r\n        d = l(b.u, (1 << j) - 1, J + h, N, d, b.v);\r\n        var r = V.V(b.v, 0, J, b.C);\r\n        X = (1 << r) - 1;\r\n        var S = V.V(b.v, J, h, b.D);\r\n        u = (1 << S) - 1;\r\n        M(b.C, r);\r\n        I(b.C, r, v);\r\n        M(b.D, S);\r\n        I(b.D, S, C);\r\n      }\r\n\r\n      while (!0) {\r\n        var T = v[e(N, d) & X];\r\n        d += T & 15;\r\n        var p = T >>> 4;\r\n\r\n        if (p >>> 8 == 0) {\r\n          W[w++] = p;\r\n        } else if (p == 256) {\r\n          break;\r\n        } else {\r\n          var z = w + p - 254;\r\n\r\n          if (p > 264) {\r\n            var _ = b.q[p - 257];\r\n            z = w + (_ >>> 3) + A(N, d, _ & 7);\r\n            d += _ & 7;\r\n          }\r\n\r\n          var $ = C[e(N, d) & u];\r\n          d += $ & 15;\r\n          var s = $ >>> 4,\r\n              Y = b.c[s],\r\n              a = (Y >>> 4) + n(N, d, Y & 15);\r\n          d += Y & 15;\r\n\r\n          while (w < z) {\r\n            W[w] = W[w++ - a];\r\n            W[w] = W[w++ - a];\r\n            W[w] = W[w++ - a];\r\n            W[w] = W[w++ - a];\r\n          }\r\n\r\n          w = z;\r\n        }\r\n      }\r\n    }\r\n\r\n    return W.length == w ? W : W.slice(0, w);\r\n  };\r\n\r\n  H.H.W = function (N, W) {\r\n    var R = N.length;\r\n    if (W <= R) return N;\r\n    var V = new Uint8Array(R << 1);\r\n    V.set(N, 0);\r\n    return V;\r\n  };\r\n\r\n  H.H.R = function (N, W, R, V, n, A) {\r\n    var l = H.H.e,\r\n        M = H.H.Z,\r\n        I = 0;\r\n\r\n    while (I < R) {\r\n      var e = N[M(V, n) & W];\r\n      n += e & 15;\r\n      var b = e >>> 4;\r\n\r\n      if (b <= 15) {\r\n        A[I] = b;\r\n        I++;\r\n      } else {\r\n        var Z = 0,\r\n            m = 0;\r\n\r\n        if (b == 16) {\r\n          m = 3 + l(V, n, 2);\r\n          n += 2;\r\n          Z = A[I - 1];\r\n        } else if (b == 17) {\r\n          m = 3 + l(V, n, 3);\r\n          n += 3;\r\n        } else if (b == 18) {\r\n          m = 11 + l(V, n, 7);\r\n          n += 7;\r\n        }\r\n\r\n        var J = I + m;\r\n\r\n        while (I < J) {\r\n          A[I] = Z;\r\n          I++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n  H.H.V = function (N, W, R, V) {\r\n    var n = 0,\r\n        A = 0,\r\n        l = V.length >>> 1;\r\n\r\n    while (A < R) {\r\n      var M = N[A + W];\r\n      V[A << 1] = 0;\r\n      V[(A << 1) + 1] = M;\r\n      if (M > n) n = M;\r\n      A++;\r\n    }\r\n\r\n    while (A < l) {\r\n      V[A << 1] = 0;\r\n      V[(A << 1) + 1] = 0;\r\n      A++;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n  H.H.n = function (N, W) {\r\n    var R = H.H.m,\r\n        V = N.length,\r\n        n,\r\n        A,\r\n        l,\r\n        M,\r\n        I,\r\n        e = R.j;\r\n\r\n    for (var M = 0; M <= W; M++) e[M] = 0;\r\n\r\n    for (M = 1; M < V; M += 2) e[N[M]]++;\r\n\r\n    var b = R.K;\r\n    n = 0;\r\n    e[0] = 0;\r\n\r\n    for (A = 1; A <= W; A++) {\r\n      n = n + e[A - 1] << 1;\r\n      b[A] = n;\r\n    }\r\n\r\n    for (l = 0; l < V; l += 2) {\r\n      I = N[l + 1];\r\n\r\n      if (I != 0) {\r\n        N[l] = b[I];\r\n        b[I]++;\r\n      }\r\n    }\r\n  };\r\n\r\n  H.H.A = function (N, W, R) {\r\n    var V = N.length,\r\n        n = H.H.m,\r\n        A = n.r;\r\n\r\n    for (var l = 0; l < V; l += 2) if (N[l + 1] != 0) {\r\n      var M = l >> 1,\r\n          I = N[l + 1],\r\n          e = M << 4 | I,\r\n          b = W - I,\r\n          Z = N[l] << b,\r\n          m = Z + (1 << b);\r\n\r\n      while (Z != m) {\r\n        var J = A[Z] >>> 15 - W;\r\n        R[J] = e;\r\n        Z++;\r\n      }\r\n    }\r\n  };\r\n\r\n  H.H.l = function (N, W) {\r\n    var R = H.H.m.r,\r\n        V = 15 - W;\r\n\r\n    for (var n = 0; n < N.length; n += 2) {\r\n      var A = N[n] << W - N[n + 1];\r\n      N[n] = R[A] >>> V;\r\n    }\r\n  };\r\n\r\n  H.H.M = function (N, W, R) {\r\n    R = R << (W & 7);\r\n    var V = W >>> 3;\r\n    N[V] |= R;\r\n    N[V + 1] |= R >>> 8;\r\n  };\r\n\r\n  H.H.I = function (N, W, R) {\r\n    R = R << (W & 7);\r\n    var V = W >>> 3;\r\n    N[V] |= R;\r\n    N[V + 1] |= R >>> 8;\r\n    N[V + 2] |= R >>> 16;\r\n  };\r\n\r\n  H.H.e = function (N, W, R) {\r\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8) >>> (W & 7) & (1 << R) - 1;\r\n  };\r\n\r\n  H.H.b = function (N, W, R) {\r\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7) & (1 << R) - 1;\r\n  };\r\n\r\n  H.H.Z = function (N, W) {\r\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7);\r\n  };\r\n\r\n  H.H.i = function (N, W) {\r\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16 | N[(W >>> 3) + 3] << 24) >>> (W & 7);\r\n  };\r\n\r\n  H.H.m = function () {\r\n    var N = Uint16Array,\r\n        W = Uint32Array;\r\n    return {\r\n      K: new N(16),\r\n      j: new N(16),\r\n      X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\r\n      S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\r\n      T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\r\n      q: new N(32),\r\n      p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],\r\n      z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\r\n      c: new W(32),\r\n      J: new N(512),\r\n      _: [],\r\n      h: new N(32),\r\n      $: [],\r\n      w: new N(32768),\r\n      C: [],\r\n      v: [],\r\n      d: new N(32768),\r\n      D: [],\r\n      u: new N(512),\r\n      Q: [],\r\n      r: new N(1 << 15),\r\n      s: new W(286),\r\n      Y: new W(30),\r\n      a: new W(19),\r\n      t: new W(15e3),\r\n      k: new N(1 << 16),\r\n      g: new N(1 << 15)\r\n    };\r\n  }();\r\n\r\n  (function () {\r\n    var N = H.H.m,\r\n        W = 1 << 15;\r\n\r\n    for (var R = 0; R < W; R++) {\r\n      var V = R;\r\n      V = (V & 2863311530) >>> 1 | (V & 1431655765) << 1;\r\n      V = (V & 3435973836) >>> 2 | (V & 858993459) << 2;\r\n      V = (V & 4042322160) >>> 4 | (V & 252645135) << 4;\r\n      V = (V & 4278255360) >>> 8 | (V & 16711935) << 8;\r\n      N.r[R] = (V >>> 16 | V << 16) >>> 17;\r\n    }\r\n\r\n    function n(A, l, M) {\r\n      while (l-- != 0) A.push(0, M);\r\n    }\r\n\r\n    for (var R = 0; R < 32; R++) {\r\n      N.q[R] = N.S[R] << 3 | N.T[R];\r\n      N.c[R] = N.p[R] << 4 | N.z[R];\r\n    }\r\n\r\n    n(N._, 144, 8);\r\n    n(N._, 255 - 143, 9);\r\n    n(N._, 279 - 255, 7);\r\n    n(N._, 287 - 279, 8);\r\n    H.H.n(N._, 9);\r\n    H.H.A(N._, 9, N.J);\r\n    H.H.l(N._, 9);\r\n    n(N.$, 32, 5);\r\n    H.H.n(N.$, 5);\r\n    H.H.A(N.$, 5, N.h);\r\n    H.H.l(N.$, 5);\r\n    n(N.Q, 19, 0);\r\n    n(N.C, 286, 0);\r\n    n(N.D, 30, 0);\r\n    n(N.v, 320, 0);\r\n  })();\r\n\r\n  return H.H.N;\r\n}();\r\n\r\nUPNG.decode._readInterlace = function (data, out) {\r\n  var w = out.width,\r\n      h = out.height;\r\n\r\n  var bpp = UPNG.decode._getBPP(out),\r\n      cbpp = bpp >> 3,\r\n      bpl = Math.ceil(w * bpp / 8);\r\n\r\n  var img = new Uint8Array(h * bpl);\r\n  var di = 0;\r\n  var starting_row = [0, 0, 4, 0, 2, 0, 1];\r\n  var starting_col = [0, 4, 0, 2, 0, 1, 0];\r\n  var row_increment = [8, 8, 8, 4, 4, 2, 2];\r\n  var col_increment = [8, 8, 4, 4, 2, 2, 1];\r\n  var pass = 0;\r\n\r\n  while (pass < 7) {\r\n    var ri = row_increment[pass],\r\n        ci = col_increment[pass];\r\n    var sw = 0,\r\n        sh = 0;\r\n    var cr = starting_row[pass];\r\n\r\n    while (cr < h) {\r\n      cr += ri;\r\n      sh++;\r\n    }\r\n\r\n    var cc = starting_col[pass];\r\n\r\n    while (cc < w) {\r\n      cc += ci;\r\n      sw++;\r\n    }\r\n\r\n    var bpll = Math.ceil(sw * bpp / 8);\r\n\r\n    UPNG.decode._filterZero(data, out, di, sw, sh);\r\n\r\n    var y = 0,\r\n        row = starting_row[pass];\r\n    var val;\r\n\r\n    while (row < h) {\r\n      var col = starting_col[pass];\r\n      var cdi = di + y * bpll << 3;\r\n\r\n      while (col < w) {\r\n        if (bpp == 1) {\r\n          val = data[cdi >> 3];\r\n          val = val >> 7 - (cdi & 7) & 1;\r\n          img[row * bpl + (col >> 3)] |= val << 7 - ((col & 7) << 0);\r\n        }\r\n\r\n        if (bpp == 2) {\r\n          val = data[cdi >> 3];\r\n          val = val >> 6 - (cdi & 7) & 3;\r\n          img[row * bpl + (col >> 2)] |= val << 6 - ((col & 3) << 1);\r\n        }\r\n\r\n        if (bpp == 4) {\r\n          val = data[cdi >> 3];\r\n          val = val >> 4 - (cdi & 7) & 15;\r\n          img[row * bpl + (col >> 1)] |= val << 4 - ((col & 1) << 2);\r\n        }\r\n\r\n        if (bpp >= 8) {\r\n          var ii = row * bpl + col * cbpp;\r\n\r\n          for (var j = 0; j < cbpp; j++) img[ii + j] = data[(cdi >> 3) + j];\r\n        }\r\n\r\n        cdi += bpp;\r\n        col += ci;\r\n      }\r\n\r\n      y++;\r\n      row += ri;\r\n    }\r\n\r\n    if (sw * sh != 0) di += sh * (1 + bpll);\r\n    pass = pass + 1;\r\n  }\r\n\r\n  return img;\r\n};\r\n\r\nUPNG.decode._getBPP = function (out) {\r\n  var noc = [1, null, 3, 1, 2, null, 4][out.ctype];\r\n  return noc * out.depth;\r\n};\r\n\r\nUPNG.decode._filterZero = function (data, out, off, w, h) {\r\n  var bpp = UPNG.decode._getBPP(out),\r\n      bpl = Math.ceil(w * bpp / 8),\r\n      paeth = UPNG.decode._paeth;\r\n\r\n  bpp = Math.ceil(bpp / 8);\r\n  var i,\r\n      di,\r\n      type = data[off],\r\n      x = 0;\r\n  if (type > 1) data[off] = [0, 0, 1][type - 2];\r\n  if (type == 3) for (x = bpp; x < bpl; x++) data[x + 1] = data[x + 1] + (data[x + 1 - bpp] >>> 1) & 255;\r\n\r\n  for (var y = 0; y < h; y++) {\r\n    i = off + y * bpl;\r\n    di = i + y + 1;\r\n    type = data[di - 1];\r\n    x = 0;\r\n    if (type == 0) for (; x < bpl; x++) data[i + x] = data[di + x];else if (type == 1) {\r\n      for (; x < bpp; x++) data[i + x] = data[di + x];\r\n\r\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpp];\r\n    } else if (type == 2) {\r\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpl];\r\n    } else if (type == 3) {\r\n      for (; x < bpp; x++) data[i + x] = data[di + x] + (data[i + x - bpl] >>> 1);\r\n\r\n      for (; x < bpl; x++) data[i + x] = data[di + x] + (data[i + x - bpl] + data[i + x - bpp] >>> 1);\r\n    } else {\r\n      for (; x < bpp; x++) data[i + x] = data[di + x] + paeth(0, data[i + x - bpl], 0);\r\n\r\n      for (; x < bpl; x++) data[i + x] = data[di + x] + paeth(data[i + x - bpp], data[i + x - bpl], data[i + x - bpp - bpl]);\r\n    }\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nUPNG.decode._paeth = function (a, b, c) {\r\n  var p = a + b - c,\r\n      pa = p - a,\r\n      pb = p - b,\r\n      pc = p - c;\r\n  if (pa * pa <= pb * pb && pa * pa <= pc * pc) return a;else if (pb * pb <= pc * pc) return b;\r\n  return c;\r\n};\r\n\r\nUPNG.decode._IHDR = function (data, offset, out) {\r\n  var bin = UPNG._bin;\r\n  out.width = bin.readUint(data, offset);\r\n  offset += 4;\r\n  out.height = bin.readUint(data, offset);\r\n  offset += 4;\r\n  out.depth = data[offset];\r\n  offset++;\r\n  out.ctype = data[offset];\r\n  offset++;\r\n  out.compress = data[offset];\r\n  offset++;\r\n  out.filter = data[offset];\r\n  offset++;\r\n  out.interlace = data[offset];\r\n  offset++;\r\n};\r\n\r\nUPNG._bin = {\r\n  nextZero: function (data, p) {\r\n    while (data[p] != 0) p++;\r\n\r\n    return p;\r\n  },\r\n  readUshort: function (buff, p) {\r\n    return buff[p] << 8 | buff[p + 1];\r\n  },\r\n  writeUshort: function (buff, p, n) {\r\n    buff[p] = n >> 8 & 255;\r\n    buff[p + 1] = n & 255;\r\n  },\r\n  readUint: function (buff, p) {\r\n    return buff[p] * (256 * 256 * 256) + (buff[p + 1] << 16 | buff[p + 2] << 8 | buff[p + 3]);\r\n  },\r\n  writeUint: function (buff, p, n) {\r\n    buff[p] = n >> 24 & 255;\r\n    buff[p + 1] = n >> 16 & 255;\r\n    buff[p + 2] = n >> 8 & 255;\r\n    buff[p + 3] = n & 255;\r\n  },\r\n  readASCII: function (buff, p, l) {\r\n    var s = '';\r\n\r\n    for (var i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\r\n\r\n    return s;\r\n  },\r\n  writeASCII: function (data, p, s) {\r\n    for (var i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\r\n  },\r\n  readBytes: function (buff, p, l) {\r\n    var arr = [];\r\n\r\n    for (var i = 0; i < l; i++) arr.push(buff[p + i]);\r\n\r\n    return arr;\r\n  },\r\n  pad: function (n) {\r\n    return n.length < 2 ? '0' + n : n;\r\n  },\r\n  readUTF8: function (buff, p, l) {\r\n    var s = '',\r\n        ns;\r\n\r\n    for (var i = 0; i < l; i++) s += '%' + UPNG._bin.pad(buff[p + i].toString(16));\r\n\r\n    try {\r\n      ns = decodeURIComponent(s);\r\n    } catch (e) {\r\n      return UPNG._bin.readASCII(buff, p, l);\r\n    }\r\n\r\n    return ns;\r\n  }\r\n};\r\n\r\nUPNG._copyTile = function (sb, sw, sh, tb, tw, th, xoff, yoff, mode) {\r\n  var w = Math.min(sw, tw),\r\n      h = Math.min(sh, th);\r\n  var si = 0,\r\n      ti = 0;\r\n\r\n  for (var y = 0; y < h; y++) for (var x = 0; x < w; x++) {\r\n    if (xoff >= 0 && yoff >= 0) {\r\n      si = y * sw + x << 2;\r\n      ti = (yoff + y) * tw + xoff + x << 2;\r\n    } else {\r\n      si = (-yoff + y) * sw - xoff + x << 2;\r\n      ti = y * tw + x << 2;\r\n    }\r\n\r\n    if (mode == 0) {\r\n      tb[ti] = sb[si];\r\n      tb[ti + 1] = sb[si + 1];\r\n      tb[ti + 2] = sb[si + 2];\r\n      tb[ti + 3] = sb[si + 3];\r\n    } else if (mode == 1) {\r\n      var fa = sb[si + 3] * (1 / 255),\r\n          fr = sb[si] * fa,\r\n          fg = sb[si + 1] * fa,\r\n          fb = sb[si + 2] * fa;\r\n      var ba = tb[ti + 3] * (1 / 255),\r\n          br = tb[ti] * ba,\r\n          bg = tb[ti + 1] * ba,\r\n          bb = tb[ti + 2] * ba;\r\n      var ifa = 1 - fa,\r\n          oa = fa + ba * ifa,\r\n          ioa = oa == 0 ? 0 : 1 / oa;\r\n      tb[ti + 3] = 255 * oa;\r\n      tb[ti + 0] = (fr + br * ifa) * ioa;\r\n      tb[ti + 1] = (fg + bg * ifa) * ioa;\r\n      tb[ti + 2] = (fb + bb * ifa) * ioa;\r\n    } else if (mode == 2) {\r\n      // copy only differences, otherwise zero\r\n      var fa = sb[si + 3],\r\n          fr = sb[si],\r\n          fg = sb[si + 1],\r\n          fb = sb[si + 2];\r\n      var ba = tb[ti + 3],\r\n          br = tb[ti],\r\n          bg = tb[ti + 1],\r\n          bb = tb[ti + 2];\r\n\r\n      if (fa == ba && fr == br && fg == bg && fb == bb) {\r\n        tb[ti] = 0;\r\n        tb[ti + 1] = 0;\r\n        tb[ti + 2] = 0;\r\n        tb[ti + 3] = 0;\r\n      } else {\r\n        tb[ti] = fr;\r\n        tb[ti + 1] = fg;\r\n        tb[ti + 2] = fb;\r\n        tb[ti + 3] = fa;\r\n      }\r\n    } else if (mode == 3) {\r\n      // check if can be blended\r\n      var fa = sb[si + 3],\r\n          fr = sb[si],\r\n          fg = sb[si + 1],\r\n          fb = sb[si + 2];\r\n      var ba = tb[ti + 3],\r\n          br = tb[ti],\r\n          bg = tb[ti + 1],\r\n          bb = tb[ti + 2];\r\n      if (fa == ba && fr == br && fg == bg && fb == bb) continue; //if(fa!=255 && ba!=0) return false;\r\n\r\n      if (fa < 220 && ba > 20) return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport { RGBMLoader };\r\n"],"mappings":";;;;AAAA,SAASA,iBAAT,EAA4BC,aAA5B,EAA2CC,WAA3C,EAAwDC,UAAxD,EAAoEC,YAApE,EAAkFC,SAAlF,QAAmG,OAAnG;;IAEMC,U;;;;;EACJ,oBAAYC,OAAZ,EAAqB;IAAA;;IAAA;;IACnB,0BAAMA,OAAN;IACA,MAAKC,IAAL,GAAYP,aAAZ;IACA,MAAKQ,QAAL,GAAgB,CAAhB,CAHmB,CAGA;;IAHA;EAIpB;;;;WAED,qBAAYC,KAAZ,EAAmB;MACjB,KAAKF,IAAL,GAAYE,KAAZ;MACA,OAAO,IAAP;IACD;;;WAED,qBAAYA,KAAZ,EAAmB;MACjB,KAAKD,QAAL,GAAgBC,KAAhB;MACA,OAAO,IAAP;IACD;;;WAED,qBAAYC,IAAZ,EAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,OAAtC,EAA+C;MAC7C,IAAMC,OAAO,GAAG,IAAIb,WAAJ,EAAhB;MACA,IAAIc,MAAM,GAAG,CAAb;MACA,IAAMC,KAAK,GAAG,IAAd;;MAEA,SAASC,WAAT,CAAqBC,CAArB,EAAwB;QACtBF,KAAK,CAACG,IAAN,CAAWT,IAAI,CAACQ,CAAD,CAAf,EAAoB,UAAUE,KAAV,EAAiB;UACnCN,OAAO,CAACO,MAAR,CAAeH,CAAf,IAAoBE,KAApB;UACAL,MAAM;;UAEN,IAAIA,MAAM,KAAK,CAAf,EAAkB;YAChBD,OAAO,CAACQ,WAAR,GAAsB,IAAtB;YACA,IAAIX,MAAJ,EAAYA,MAAM,CAACG,OAAD,CAAN;UACb;QACF,CARD,EAQGS,SARH,EAQcV,OARd;MASD;;MAED,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACc,MAAzB,EAAiC,EAAEN,CAAnC,EAAsC;QACpCD,WAAW,CAACC,CAAD,CAAX;MACD;;MAEDJ,OAAO,CAACP,IAAR,GAAe,KAAKA,IAApB;MACAO,OAAO,CAACW,MAAR,GAAiBvB,UAAjB;MACAY,OAAO,CAACY,SAAR,GAAoBvB,YAApB;MACAW,OAAO,CAACa,eAAR,GAA0B,KAA1B;MACA,OAAOb,OAAP;IACD;;;WAED,eAAMc,MAAN,EAAc;MACZ,IAAMC,GAAG,GAAGC,IAAI,CAACC,MAAL,CAAYH,MAAZ,CAAZ;MACA,IAAMI,IAAI,GAAGF,IAAI,CAACG,OAAL,CAAaJ,GAAb,EAAkB,CAAlB,CAAb;MACA,IAAMK,IAAI,GAAG,IAAIC,UAAJ,CAAeH,IAAf,CAAb;MACA,IAAMI,IAAI,GAAGP,GAAG,CAACQ,KAAJ,GAAYR,GAAG,CAACS,MAAhB,GAAyB,CAAtC;MACA,IAAMC,MAAM,GAAG,KAAKhC,IAAL,KAAcP,aAAd,GAA8B,IAAIwC,WAAJ,CAAgBJ,IAAhB,CAA9B,GAAsD,IAAIK,YAAJ,CAAiBL,IAAjB,CAArE,CALY,CAKiF;;MAE7F,KAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,IAAI,CAACV,MAAzB,EAAiCN,CAAC,IAAI,CAAtC,EAAyC;QACvC,IAAMwB,CAAC,GAAGR,IAAI,CAAChB,CAAC,GAAG,CAAL,CAAJ,GAAc,GAAxB;QACA,IAAMyB,CAAC,GAAGT,IAAI,CAAChB,CAAC,GAAG,CAAL,CAAJ,GAAc,GAAxB;QACA,IAAM0B,CAAC,GAAGV,IAAI,CAAChB,CAAC,GAAG,CAAL,CAAJ,GAAc,GAAxB;QACA,IAAM2B,CAAC,GAAGX,IAAI,CAAChB,CAAC,GAAG,CAAL,CAAJ,GAAc,GAAxB;;QAEA,IAAI,KAAKX,IAAL,KAAcP,aAAlB,EAAiC;UAC/BuC,MAAM,CAACrB,CAAC,GAAG,CAAL,CAAN,GAAgBd,SAAS,CAAC0C,WAAV,CAAsBC,IAAI,CAACC,GAAL,CAASN,CAAC,GAAGG,CAAJ,GAAQ,KAAKrC,QAAtB,EAAgC,KAAhC,CAAtB,CAAhB;UACA+B,MAAM,CAACrB,CAAC,GAAG,CAAL,CAAN,GAAgBd,SAAS,CAAC0C,WAAV,CAAsBC,IAAI,CAACC,GAAL,CAASL,CAAC,GAAGE,CAAJ,GAAQ,KAAKrC,QAAtB,EAAgC,KAAhC,CAAtB,CAAhB;UACA+B,MAAM,CAACrB,CAAC,GAAG,CAAL,CAAN,GAAgBd,SAAS,CAAC0C,WAAV,CAAsBC,IAAI,CAACC,GAAL,CAASJ,CAAC,GAAGC,CAAJ,GAAQ,KAAKrC,QAAtB,EAAgC,KAAhC,CAAtB,CAAhB;UACA+B,MAAM,CAACrB,CAAC,GAAG,CAAL,CAAN,GAAgBd,SAAS,CAAC0C,WAAV,CAAsB,CAAtB,CAAhB;QACD,CALD,MAKO;UACLP,MAAM,CAACrB,CAAC,GAAG,CAAL,CAAN,GAAgBwB,CAAC,GAAGG,CAAJ,GAAQ,KAAKrC,QAA7B;UACA+B,MAAM,CAACrB,CAAC,GAAG,CAAL,CAAN,GAAgByB,CAAC,GAAGE,CAAJ,GAAQ,KAAKrC,QAA7B;UACA+B,MAAM,CAACrB,CAAC,GAAG,CAAL,CAAN,GAAgB0B,CAAC,GAAGC,CAAJ,GAAQ,KAAKrC,QAA7B;UACA+B,MAAM,CAACrB,CAAC,GAAG,CAAL,CAAN,GAAgB,CAAhB;QACD;MACF;;MAED,OAAO;QACLmB,KAAK,EAAER,GAAG,CAACQ,KADN;QAELC,MAAM,EAAET,GAAG,CAACS,MAFP;QAGLJ,IAAI,EAAEK,MAHD;QAILd,MAAM,EAAEvB,UAJH;QAKLK,IAAI,EAAE,KAAKA,IALN;QAML0C,KAAK,EAAE;MANF,CAAP;IAQD;;;;EA/EsBlD,iB,GAiFvB;;;AAGF,IAAI+B,IAAI,GAAG,EAAX;;AAEAA,IAAI,CAACG,OAAL,GAAe,UAAUiB,GAAV,EAAe;EAC5B,IAAIC,CAAC,GAAGD,GAAG,CAACb,KAAZ;EAAA,IACIe,CAAC,GAAGF,GAAG,CAACZ,MADZ;EAEA,IAAIY,GAAG,CAACG,IAAJ,CAASC,IAAT,IAAiB,IAArB,EAA2B,OAAO,CAACxB,IAAI,CAACG,OAAL,CAAasB,WAAb,CAAyBL,GAAG,CAAChB,IAA7B,EAAmCiB,CAAnC,EAAsCC,CAAtC,EAAyCF,GAAzC,EAA8CtB,MAA/C,CAAP;EAC3B,IAAI4B,IAAI,GAAG,EAAX;EACA,IAAIN,GAAG,CAACO,MAAJ,CAAW,CAAX,EAAcvB,IAAd,IAAsB,IAA1B,EAAgCgB,GAAG,CAACO,MAAJ,CAAW,CAAX,EAAcvB,IAAd,GAAqBgB,GAAG,CAAChB,IAAzB;EAChC,IAAIwB,GAAG,GAAGP,CAAC,GAAGC,CAAJ,GAAQ,CAAlB;EAAA,IACIvB,GAAG,GAAG,IAAIM,UAAJ,CAAeuB,GAAf,CADV;EAAA,IAEIC,KAAK,GAAG,IAAIxB,UAAJ,CAAeuB,GAAf,CAFZ;EAAA,IAGIE,IAAI,GAAG,IAAIzB,UAAJ,CAAeuB,GAAf,CAHX;;EAKA,KAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,GAAG,CAACO,MAAJ,CAAWjC,MAA/B,EAAuCN,CAAC,EAAxC,EAA4C;IAC1C,IAAI2C,GAAG,GAAGX,GAAG,CAACO,MAAJ,CAAWvC,CAAX,CAAV;IACA,IAAI4C,EAAE,GAAGD,GAAG,CAACE,IAAJ,CAASC,CAAlB;IAAA,IACIC,EAAE,GAAGJ,GAAG,CAACE,IAAJ,CAASG,CADlB;IAAA,IAEIC,EAAE,GAAGN,GAAG,CAACE,IAAJ,CAAS1B,KAFlB;IAAA,IAGI+B,EAAE,GAAGP,GAAG,CAACE,IAAJ,CAASzB,MAHlB;IAIA,IAAI+B,KAAK,GAAGvC,IAAI,CAACG,OAAL,CAAasB,WAAb,CAAyBM,GAAG,CAAC3B,IAA7B,EAAmCiC,EAAnC,EAAuCC,EAAvC,EAA2ClB,GAA3C,CAAZ;IACA,IAAIhC,CAAC,IAAI,CAAT,EAAY,KAAK,IAAIoD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,GAApB,EAAyBY,CAAC,EAA1B;MAA8BV,IAAI,CAACU,CAAD,CAAJ,GAAUzC,GAAG,CAACyC,CAAD,CAAb;IAA9B;IACZ,IAAIT,GAAG,CAACU,KAAJ,IAAa,CAAjB,EAAoBzC,IAAI,CAAC0C,SAAL,CAAeH,KAAf,EAAsBF,EAAtB,EAA0BC,EAA1B,EAA8BvC,GAA9B,EAAmCsB,CAAnC,EAAsCC,CAAtC,EAAyCU,EAAzC,EAA6CG,EAA7C,EAAiD,CAAjD,EAApB,KAA6E,IAAIJ,GAAG,CAACU,KAAJ,IAAa,CAAjB,EAAoBzC,IAAI,CAAC0C,SAAL,CAAeH,KAAf,EAAsBF,EAAtB,EAA0BC,EAA1B,EAA8BvC,GAA9B,EAAmCsB,CAAnC,EAAsCC,CAAtC,EAAyCU,EAAzC,EAA6CG,EAA7C,EAAiD,CAAjD;IACjGT,IAAI,CAACiB,IAAL,CAAU5C,GAAG,CAACD,MAAJ,CAAW8C,KAAX,CAAiB,CAAjB,CAAV;IACA,IAAIb,GAAG,CAACc,OAAJ,IAAe,CAAnB,EAAsB7C,IAAI,CAAC0C,SAAL,CAAeb,KAAf,EAAsBQ,EAAtB,EAA0BC,EAA1B,EAA8BvC,GAA9B,EAAmCsB,CAAnC,EAAsCC,CAAtC,EAAyCU,EAAzC,EAA6CG,EAA7C,EAAiD,CAAjD,EAAtB,KAA+E,IAAIJ,GAAG,CAACc,OAAJ,IAAe,CAAnB,EAAsB,KAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,GAApB,EAAyBY,CAAC,EAA1B;MAA8BzC,GAAG,CAACyC,CAAD,CAAH,GAASV,IAAI,CAACU,CAAD,CAAb;IAA9B;EACtG;;EAED,OAAOd,IAAP;AACD,CAzBD;;AA2BA1B,IAAI,CAACG,OAAL,CAAasB,WAAb,GAA2B,UAAUrB,IAAV,EAAgBiB,CAAhB,EAAmBC,CAAnB,EAAsBF,GAAtB,EAA2B;EACpD,IAAI0B,IAAI,GAAGzB,CAAC,GAAGC,CAAf;EAAA,IACIyB,GAAG,GAAG/C,IAAI,CAACC,MAAL,CAAY+C,OAAZ,CAAoB5B,GAApB,CADV;;EAGA,IAAI6B,GAAG,GAAGhC,IAAI,CAACiC,IAAL,CAAU7B,CAAC,GAAG0B,GAAJ,GAAU,CAApB,CAAV,CAJoD,CAIlB;;EAElC,IAAII,EAAE,GAAG,IAAI9C,UAAJ,CAAeyC,IAAI,GAAG,CAAtB,CAAT;EAAA,IACIM,IAAI,GAAG,IAAIC,WAAJ,CAAgBF,EAAE,CAACrD,MAAnB,CADX;EAEA,IAAIwD,KAAK,GAAGlC,GAAG,CAACkC,KAAhB;EAAA,IACIC,KAAK,GAAGnC,GAAG,CAACmC,KADhB;EAEA,IAAIC,EAAE,GAAGxD,IAAI,CAACyD,IAAL,CAAUC,UAAnB;;EAEA,IAAIJ,KAAK,IAAI,CAAb,EAAgB;IACd;IACA,IAAIK,KAAK,GAAGb,IAAI,IAAI,CAApB;IACA,IAAIS,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuE,KAApB,EAA2BvE,CAAC,IAAI,CAAhC,EAAmC;MACjD+D,EAAE,CAAC/D,CAAD,CAAF,GAAQgB,IAAI,CAAChB,CAAD,CAAZ;MACA+D,EAAE,CAAC/D,CAAC,GAAG,CAAL,CAAF,GAAYgB,IAAI,CAAChB,CAAC,GAAG,CAAL,CAAhB;MACA+D,EAAE,CAAC/D,CAAC,GAAG,CAAL,CAAF,GAAYgB,IAAI,CAAChB,CAAC,GAAG,CAAL,CAAhB;MACA+D,EAAE,CAAC/D,CAAC,GAAG,CAAL,CAAF,GAAYgB,IAAI,CAAChB,CAAC,GAAG,CAAL,CAAhB;IACD;IACD,IAAImE,KAAK,IAAI,EAAb,EAAiB,KAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuE,KAApB,EAA2BvE,CAAC,EAA5B,EAAgC;MAC/C+D,EAAE,CAAC/D,CAAD,CAAF,GAAQgB,IAAI,CAAChB,CAAC,IAAI,CAAN,CAAZ;IACD;EACF,CAZD,MAYO,IAAIkE,KAAK,IAAI,CAAb,EAAgB;IACrB;IACA,IAAIM,EAAE,GAAGxC,GAAG,CAACG,IAAJ,CAAS,MAAT,CAAT;;IAEA,IAAIqC,EAAE,IAAI,IAAV,EAAgB;MACd,IAAIL,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0D,IAApB,EAA0B1D,CAAC,EAA3B,EAA+B;QAC7C,IAAIyE,EAAE,GAAGzE,CAAC,GAAG,CAAb;QACAgE,IAAI,CAAChE,CAAD,CAAJ,GAAU,OAAO,EAAP,GAAYgB,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgB,EAA5B,GAAiCzD,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgB,CAAjD,GAAqDzD,IAAI,CAACyD,EAAD,CAAnE;MACD;MACD,IAAIN,KAAK,IAAI,EAAb,EAAiB,KAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0D,IAApB,EAA0B1D,CAAC,EAA3B,EAA+B;QAC9C,IAAIyE,EAAE,GAAGzE,CAAC,GAAG,CAAb;QACAgE,IAAI,CAAChE,CAAD,CAAJ,GAAU,OAAO,EAAP,GAAYgB,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgB,EAA5B,GAAiCzD,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgB,CAAjD,GAAqDzD,IAAI,CAACyD,EAAD,CAAnE;MACD;IACF,CATD,MASO;MACL,IAAIC,EAAE,GAAGF,EAAE,CAAC,CAAD,CAAX;MAAA,IACIG,EAAE,GAAGH,EAAE,CAAC,CAAD,CADX;MAAA,IAEII,EAAE,GAAGJ,EAAE,CAAC,CAAD,CAFX;MAGA,IAAIL,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0D,IAApB,EAA0B1D,CAAC,EAA3B,EAA+B;QAC7C,IAAI6E,EAAE,GAAG7E,CAAC,IAAI,CAAd;QAAA,IACIyE,EAAE,GAAGzE,CAAC,GAAG,CADb;QAEAgE,IAAI,CAAChE,CAAD,CAAJ,GAAU,OAAO,EAAP,GAAYgB,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgB,EAA5B,GAAiCzD,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgB,CAAjD,GAAqDzD,IAAI,CAACyD,EAAD,CAAnE;QACA,IAAIzD,IAAI,CAACyD,EAAD,CAAJ,IAAYC,EAAZ,IAAkB1D,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgBE,EAAlC,IAAwC3D,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgBG,EAA5D,EAAgEb,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAa,CAAb;MACjE;MACD,IAAIV,KAAK,IAAI,EAAb,EAAiB,KAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0D,IAApB,EAA0B1D,CAAC,EAA3B,EAA+B;QAC9C,IAAI6E,EAAE,GAAG7E,CAAC,IAAI,CAAd;QAAA,IACIyE,EAAE,GAAGzE,CAAC,GAAG,CADb;QAEAgE,IAAI,CAAChE,CAAD,CAAJ,GAAU,OAAO,EAAP,GAAYgB,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgB,EAA5B,GAAiCzD,IAAI,CAACyD,EAAE,GAAG,CAAN,CAAJ,IAAgB,CAAjD,GAAqDzD,IAAI,CAACyD,EAAD,CAAnE;QACA,IAAIL,EAAE,CAACpD,IAAD,EAAOyD,EAAP,CAAF,IAAgBC,EAAhB,IAAsBN,EAAE,CAACpD,IAAD,EAAOyD,EAAE,GAAG,CAAZ,CAAF,IAAoBE,EAA1C,IAAgDP,EAAE,CAACpD,IAAD,EAAOyD,EAAE,GAAG,CAAZ,CAAF,IAAoBG,EAAxE,EAA4Eb,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAa,CAAb;MAC7E;IACF;EACF,CA9BM,MA8BA,IAAIX,KAAK,IAAI,CAAb,EAAgB;IACrB;IACA,IAAIY,CAAC,GAAG9C,GAAG,CAACG,IAAJ,CAAS,MAAT,CAAR;IAAA,IACI4C,EAAE,GAAG/C,GAAG,CAACG,IAAJ,CAAS,MAAT,CADT;IAAA,IAEI6C,EAAE,GAAGD,EAAE,GAAGA,EAAE,CAACzE,MAAN,GAAe,CAF1B,CAFqB,CAIQ;;IAE7B,IAAI6D,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,CAApB,EAAuBc,CAAC,EAAxB,EAA4B;MAC1C,IAAIiC,EAAE,GAAGjC,CAAC,GAAGa,GAAb;MAAA,IACIqB,EAAE,GAAGlC,CAAC,GAAGf,CADb;;MAGA,KAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,CAApB,EAAuBjC,CAAC,EAAxB,EAA4B;QAC1B,IAAI6E,EAAE,GAAGK,EAAE,GAAGlF,CAAL,IAAU,CAAnB;QAAA,IACIoD,CAAC,GAAGpC,IAAI,CAACiE,EAAE,IAAIjF,CAAC,IAAI,CAAT,CAAH,CAAJ,IAAuB,KAAK,CAACA,CAAC,GAAG,CAAL,KAAW,CAAhB,CAAvB,GAA4C,CADpD;QAAA,IAEImF,EAAE,GAAG,IAAI/B,CAFb;QAGAW,EAAE,CAACc,EAAD,CAAF,GAASC,CAAC,CAACK,EAAD,CAAV;QACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaC,CAAC,CAACK,EAAE,GAAG,CAAN,CAAd;QACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaC,CAAC,CAACK,EAAE,GAAG,CAAN,CAAd;QACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAazB,CAAC,GAAG4B,EAAJ,GAASD,EAAE,CAAC3B,CAAD,CAAX,GAAiB,GAA9B;MACD;IACF;IACD,IAAIe,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,CAApB,EAAuBc,CAAC,EAAxB,EAA4B;MAC1C,IAAIiC,EAAE,GAAGjC,CAAC,GAAGa,GAAb;MAAA,IACIqB,EAAE,GAAGlC,CAAC,GAAGf,CADb;;MAGA,KAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,CAApB,EAAuBjC,CAAC,EAAxB,EAA4B;QAC1B,IAAI6E,EAAE,GAAGK,EAAE,GAAGlF,CAAL,IAAU,CAAnB;QAAA,IACIoD,CAAC,GAAGpC,IAAI,CAACiE,EAAE,IAAIjF,CAAC,IAAI,CAAT,CAAH,CAAJ,IAAuB,KAAK,CAACA,CAAC,GAAG,CAAL,KAAW,CAAhB,CAAvB,GAA4C,CADpD;QAAA,IAEImF,EAAE,GAAG,IAAI/B,CAFb;QAGAW,EAAE,CAACc,EAAD,CAAF,GAASC,CAAC,CAACK,EAAD,CAAV;QACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaC,CAAC,CAACK,EAAE,GAAG,CAAN,CAAd;QACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaC,CAAC,CAACK,EAAE,GAAG,CAAN,CAAd;QACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAazB,CAAC,GAAG4B,EAAJ,GAASD,EAAE,CAAC3B,CAAD,CAAX,GAAiB,GAA9B;MACD;IACF;IACD,IAAIe,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,CAApB,EAAuBc,CAAC,EAAxB,EAA4B;MAC1C,IAAIiC,EAAE,GAAGjC,CAAC,GAAGa,GAAb;MAAA,IACIqB,EAAE,GAAGlC,CAAC,GAAGf,CADb;;MAGA,KAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,CAApB,EAAuBjC,CAAC,EAAxB,EAA4B;QAC1B,IAAI6E,EAAE,GAAGK,EAAE,GAAGlF,CAAL,IAAU,CAAnB;QAAA,IACIoD,CAAC,GAAGpC,IAAI,CAACiE,EAAE,IAAIjF,CAAC,IAAI,CAAT,CAAH,CAAJ,IAAuB,KAAK,CAACA,CAAC,GAAG,CAAL,KAAW,CAAhB,CAAvB,GAA4C,EADpD;QAAA,IAEImF,EAAE,GAAG,IAAI/B,CAFb;QAGAW,EAAE,CAACc,EAAD,CAAF,GAASC,CAAC,CAACK,EAAD,CAAV;QACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaC,CAAC,CAACK,EAAE,GAAG,CAAN,CAAd;QACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaC,CAAC,CAACK,EAAE,GAAG,CAAN,CAAd;QACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAazB,CAAC,GAAG4B,EAAJ,GAASD,EAAE,CAAC3B,CAAD,CAAX,GAAiB,GAA9B;MACD;IACF;IACD,IAAIe,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0D,IAApB,EAA0B1D,CAAC,EAA3B,EAA+B;MAC7C,IAAI6E,EAAE,GAAG7E,CAAC,IAAI,CAAd;MAAA,IACIoD,CAAC,GAAGpC,IAAI,CAAChB,CAAD,CADZ;MAAA,IAEImF,EAAE,GAAG,IAAI/B,CAFb;MAGAW,EAAE,CAACc,EAAD,CAAF,GAASC,CAAC,CAACK,EAAD,CAAV;MACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaC,CAAC,CAACK,EAAE,GAAG,CAAN,CAAd;MACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaC,CAAC,CAACK,EAAE,GAAG,CAAN,CAAd;MACApB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAazB,CAAC,GAAG4B,EAAJ,GAASD,EAAE,CAAC3B,CAAD,CAAX,GAAiB,GAA9B;IACD;EACF,CAzDM,MAyDA,IAAIc,KAAK,IAAI,CAAb,EAAgB;IACrB;IACA,IAAIC,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0D,IAApB,EAA0B1D,CAAC,EAA3B,EAA+B;MAC7C,IAAI6E,EAAE,GAAG7E,CAAC,IAAI,CAAd;MAAA,IACIoF,EAAE,GAAGpF,CAAC,IAAI,CADd;MAAA,IAEIqF,EAAE,GAAGrE,IAAI,CAACoE,EAAD,CAFb;MAGArB,EAAE,CAACc,EAAD,CAAF,GAASQ,EAAT;MACAtB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaQ,EAAb;MACAtB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaQ,EAAb;MACAtB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAa7D,IAAI,CAACoE,EAAE,GAAG,CAAN,CAAjB;IACD;IACD,IAAIjB,KAAK,IAAI,EAAb,EAAiB,KAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0D,IAApB,EAA0B1D,CAAC,EAA3B,EAA+B;MAC9C,IAAI6E,EAAE,GAAG7E,CAAC,IAAI,CAAd;MAAA,IACIoF,EAAE,GAAGpF,CAAC,IAAI,CADd;MAAA,IAEIqF,EAAE,GAAGrE,IAAI,CAACoE,EAAD,CAFb;MAGArB,EAAE,CAACc,EAAD,CAAF,GAASQ,EAAT;MACAtB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaQ,EAAb;MACAtB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAaQ,EAAb;MACAtB,EAAE,CAACc,EAAE,GAAG,CAAN,CAAF,GAAa7D,IAAI,CAACoE,EAAE,GAAG,CAAN,CAAjB;IACD;EACF,CApBM,MAoBA,IAAIlB,KAAK,IAAI,CAAb,EAAgB;IACrB;IACA,IAAIQ,EAAE,GAAG1C,GAAG,CAACG,IAAJ,CAAS,MAAT,IAAmBH,GAAG,CAACG,IAAJ,CAAS,MAAT,CAAnB,GAAsC,CAAC,CAAhD;;IAEA,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,CAApB,EAAuBc,CAAC,EAAxB,EAA4B;MAC1B,IAAIsC,GAAG,GAAGtC,CAAC,GAAGa,GAAd;MAAA,IACI0B,EAAE,GAAGvC,CAAC,GAAGf,CADb;MAEA,IAAIkC,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAApB,EAAuBa,CAAC,EAAxB,EAA4B;QAC1C,IAAIuC,EAAE,GAAG,OAAOrE,IAAI,CAACsE,GAAG,IAAIxC,CAAC,KAAK,CAAV,CAAJ,CAAJ,KAA0B,KAAKA,CAAC,GAAG,CAAT,CAA1B,GAAwC,CAA/C,CAAT;QAAA,IACI0C,EAAE,GAAGH,EAAE,IAAIX,EAAE,GAAG,GAAX,GAAiB,CAAjB,GAAqB,GAD9B;QAEAV,IAAI,CAACuB,EAAE,GAAGzC,CAAN,CAAJ,GAAe0C,EAAE,IAAI,EAAN,GAAWH,EAAE,IAAI,EAAjB,GAAsBA,EAAE,IAAI,CAA5B,GAAgCA,EAA/C;MACD,CAJD,MAIO,IAAIlB,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAApB,EAAuBa,CAAC,EAAxB,EAA4B;QACjD,IAAIuC,EAAE,GAAG,MAAMrE,IAAI,CAACsE,GAAG,IAAIxC,CAAC,KAAK,CAAV,CAAJ,CAAJ,KAA0B,KAAK,CAACA,CAAC,GAAG,CAAL,KAAW,CAAhB,CAA1B,GAA+C,CAArD,CAAT;QAAA,IACI0C,EAAE,GAAGH,EAAE,IAAIX,EAAE,GAAG,EAAX,GAAgB,CAAhB,GAAoB,GAD7B;QAEAV,IAAI,CAACuB,EAAE,GAAGzC,CAAN,CAAJ,GAAe0C,EAAE,IAAI,EAAN,GAAWH,EAAE,IAAI,EAAjB,GAAsBA,EAAE,IAAI,CAA5B,GAAgCA,EAA/C;MACD,CAJM,MAIA,IAAIlB,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAApB,EAAuBa,CAAC,EAAxB,EAA4B;QACjD,IAAIuC,EAAE,GAAG,MAAMrE,IAAI,CAACsE,GAAG,IAAIxC,CAAC,KAAK,CAAV,CAAJ,CAAJ,KAA0B,KAAK,CAACA,CAAC,GAAG,CAAL,KAAW,CAAhB,CAA1B,GAA+C,EAArD,CAAT;QAAA,IACI0C,EAAE,GAAGH,EAAE,IAAIX,EAAE,GAAG,EAAX,GAAgB,CAAhB,GAAoB,GAD7B;QAEAV,IAAI,CAACuB,EAAE,GAAGzC,CAAN,CAAJ,GAAe0C,EAAE,IAAI,EAAN,GAAWH,EAAE,IAAI,EAAjB,GAAsBA,EAAE,IAAI,CAA5B,GAAgCA,EAA/C;MACD,CAJM,MAIA,IAAIlB,KAAK,IAAI,CAAb,EAAgB,KAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAApB,EAAuBa,CAAC,EAAxB,EAA4B;QACjD,IAAIuC,EAAE,GAAGrE,IAAI,CAACsE,GAAG,GAAGxC,CAAP,CAAb;QAAA,IACI0C,EAAE,GAAGH,EAAE,IAAIX,EAAN,GAAW,CAAX,GAAe,GADxB;QAEAV,IAAI,CAACuB,EAAE,GAAGzC,CAAN,CAAJ,GAAe0C,EAAE,IAAI,EAAN,GAAWH,EAAE,IAAI,EAAjB,GAAsBA,EAAE,IAAI,CAA5B,GAAgCA,EAA/C;MACD,CAJM,MAIA,IAAIlB,KAAK,IAAI,EAAb,EAAiB,KAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAApB,EAAuBa,CAAC,EAAxB,EAA4B;QAClD,IAAIuC,EAAE,GAAGrE,IAAI,CAACsE,GAAG,IAAIxC,CAAC,IAAI,CAAT,CAAJ,CAAb;QAAA,IACI0C,EAAE,GAAGpB,EAAE,CAACpD,IAAD,EAAOsE,GAAG,IAAIxC,CAAC,IAAI,CAAT,CAAV,CAAF,IAA4B4B,EAA5B,GAAiC,CAAjC,GAAqC,GAD9C;QAEAV,IAAI,CAACuB,EAAE,GAAGzC,CAAN,CAAJ,GAAe0C,EAAE,IAAI,EAAN,GAAWH,EAAE,IAAI,EAAjB,GAAsBA,EAAE,IAAI,CAA5B,GAAgCA,EAA/C;MACD;IACF;EACF,CAhKmD,CAgKlD;;;EAGF,OAAOtB,EAAP;AACD,CApKD;;AAsKAnD,IAAI,CAACC,MAAL,GAAc,UAAU4E,IAAV,EAAgB;EAC5B,IAAIzE,IAAI,GAAG,IAAIC,UAAJ,CAAewE,IAAf,CAAX;EAAA,IACIC,MAAM,GAAG,CADb;EAAA,IAEIC,GAAG,GAAG/E,IAAI,CAACyD,IAFf;EAAA,IAGIuB,GAAG,GAAGD,GAAG,CAACrB,UAHd;EAAA,IAIIuB,GAAG,GAAGF,GAAG,CAACG,QAJd;EAKA,IAAI9D,GAAG,GAAG;IACRG,IAAI,EAAE,EADE;IAERI,MAAM,EAAE;EAFA,CAAV;EAIA,IAAIwD,EAAE,GAAG,IAAI9E,UAAJ,CAAeD,IAAI,CAACV,MAApB,CAAT;EAAA,IACI0F,IAAI,GAAG,CADX,CAV4B,CAWd;;EAEd,IAAIC,EAAJ;EAAA,IACIC,IAAI,GAAG,CADX,CAb4B,CAcd;;EAEd,IAAIC,IAAJ,EAAUC,IAAV,EAAgBC,GAAhB;EACA,IAAIC,IAAI,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAX;;EAEA,KAAK,IAAItG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB;IAA4B,IAAIgB,IAAI,CAAChB,CAAD,CAAJ,IAAWsG,IAAI,CAACtG,CAAD,CAAnB,EAAwB,MAAM,IAAIuG,KAAJ,CAAU,8BAAV,CAAN;EAApD;;EAEA,OAAOb,MAAM,GAAG1E,IAAI,CAACV,MAArB,EAA6B;IAC3B,IAAIkC,GAAG,GAAGmD,GAAG,CAACG,QAAJ,CAAa9E,IAAb,EAAmB0E,MAAnB,CAAV;IACAA,MAAM,IAAI,CAAV;IACA,IAAIrG,IAAI,GAAGsG,GAAG,CAACa,SAAJ,CAAcxF,IAAd,EAAoB0E,MAApB,EAA4B,CAA5B,CAAX;IACAA,MAAM,IAAI,CAAV,CAJ2B,CAId;;IAEb,IAAIrG,IAAI,IAAI,MAAZ,EAAoB;MAClBuB,IAAI,CAACC,MAAL,CAAY4F,KAAZ,CAAkBzF,IAAlB,EAAwB0E,MAAxB,EAAgC1D,GAAhC;IACD,CAFD,MAEO,IAAI3C,IAAI,IAAI,MAAZ,EAAoB;MACzB2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB2B,IAAI,CAACwC,KAAL,CAAWkC,MAAX,EAAmBA,MAAM,GAAG,CAA5B,CAAjB;IACD,CAFM,MAEA,IAAIrG,IAAI,IAAI,MAAZ,EAAoB;MACzB,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwC,GAApB,EAAyBxC,CAAC,EAA1B;QAA8B+F,EAAE,CAACC,IAAI,GAAGhG,CAAR,CAAF,GAAegB,IAAI,CAAC0E,MAAM,GAAG1F,CAAV,CAAnB;MAA9B;;MAEAgG,IAAI,IAAIxD,GAAR;IACD,CAJM,MAIA,IAAInD,IAAI,IAAI,MAAZ,EAAoB;MACzB2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB;QACfqH,UAAU,EAAEb,GAAG,CAAC7E,IAAD,EAAO0E,MAAP,CADA;QAEfiB,SAAS,EAAEd,GAAG,CAAC7E,IAAD,EAAO0E,MAAM,GAAG,CAAhB;MAFC,CAAjB;MAIAO,EAAE,GAAG,IAAIhF,UAAJ,CAAeD,IAAI,CAACV,MAApB,CAAL;IACD,CANM,MAMA,IAAIjB,IAAI,IAAI,MAAZ,EAAoB;MACzB,IAAI6G,IAAI,IAAI,CAAZ,EAAe;QACb,IAAIU,EAAE,GAAG5E,GAAG,CAACO,MAAJ,CAAWP,GAAG,CAACO,MAAJ,CAAWjC,MAAX,GAAoB,CAA/B,CAAT;QACAsG,EAAE,CAAC5F,IAAH,GAAUJ,IAAI,CAACC,MAAL,CAAYgG,WAAZ,CAAwB7E,GAAxB,EAA6BiE,EAAE,CAACzC,KAAH,CAAS,CAAT,EAAY0C,IAAZ,CAA7B,EAAgDU,EAAE,CAAC/D,IAAH,CAAQ1B,KAAxD,EAA+DyF,EAAE,CAAC/D,IAAH,CAAQzB,MAAvE,CAAV;QACA8E,IAAI,GAAG,CAAP;MACD;;MAED,IAAIY,GAAG,GAAG;QACRhE,CAAC,EAAE+C,GAAG,CAAC7E,IAAD,EAAO0E,MAAM,GAAG,EAAhB,CADE;QAER1C,CAAC,EAAE6C,GAAG,CAAC7E,IAAD,EAAO0E,MAAM,GAAG,EAAhB,CAFE;QAGRvE,KAAK,EAAE0E,GAAG,CAAC7E,IAAD,EAAO0E,MAAM,GAAG,CAAhB,CAHF;QAIRtE,MAAM,EAAEyE,GAAG,CAAC7E,IAAD,EAAO0E,MAAM,GAAG,CAAhB;MAJH,CAAV;MAMA,IAAIqB,GAAG,GAAGnB,GAAG,CAAC5E,IAAD,EAAO0E,MAAM,GAAG,EAAhB,CAAb;MACAqB,GAAG,GAAGnB,GAAG,CAAC5E,IAAD,EAAO0E,MAAM,GAAG,EAAhB,CAAH,IAA0BqB,GAAG,IAAI,CAAP,GAAW,GAAX,GAAiBA,GAA3C,CAAN;MACA,IAAIpE,GAAG,GAAG;QACRE,IAAI,EAAEiE,GADE;QAERE,KAAK,EAAEnF,IAAI,CAACoF,KAAL,CAAWF,GAAG,GAAG,IAAjB,CAFC;QAGRtD,OAAO,EAAEzC,IAAI,CAAC0E,MAAM,GAAG,EAAV,CAHL;QAIRrC,KAAK,EAAErC,IAAI,CAAC0E,MAAM,GAAG,EAAV;MAJH,CAAV,CAfyB,CAoBtB;;MAEH1D,GAAG,CAACO,MAAJ,CAAWgB,IAAX,CAAgBZ,GAAhB;IACD,CAvBM,MAuBA,IAAItD,IAAI,IAAI,MAAZ,EAAoB;MACzB,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwC,GAAG,GAAG,CAA1B,EAA6BxC,CAAC,EAA9B;QAAkCiG,EAAE,CAACC,IAAI,GAAGlG,CAAR,CAAF,GAAegB,IAAI,CAAC0E,MAAM,GAAG1F,CAAT,GAAa,CAAd,CAAnB;MAAlC;;MAEAkG,IAAI,IAAI1D,GAAG,GAAG,CAAd;IACD,CAJM,MAIA,IAAInD,IAAI,IAAI,MAAZ,EAAoB;MACzB2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB,CAACsG,GAAG,CAACG,QAAJ,CAAa9E,IAAb,EAAmB0E,MAAnB,CAAD,EAA6BC,GAAG,CAACG,QAAJ,CAAa9E,IAAb,EAAmB0E,MAAM,GAAG,CAA5B,CAA7B,EAA6D1E,IAAI,CAAC0E,MAAM,GAAG,CAAV,CAAjE,CAAjB;IACD,CAFM,MAEA,IAAIrG,IAAI,IAAI,MAAZ,EAAoB;MACzB2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB,EAAjB;;MAEA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB;QAA4BgC,GAAG,CAACG,IAAJ,CAAS9C,IAAT,EAAekE,IAAf,CAAoBoC,GAAG,CAACG,QAAJ,CAAa9E,IAAb,EAAmB0E,MAAM,GAAG1F,CAAC,GAAG,CAAhC,CAApB;MAA5B;IACD,CAJM,MAIA,IAAIX,IAAI,IAAI,MAAR,IAAkBA,IAAI,IAAI,MAA9B,EAAsC;MAC3C,IAAI2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,KAAkB,IAAtB,EAA4B2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB,EAAjB;MAC5B,IAAI6H,EAAE,GAAGvB,GAAG,CAACwB,QAAJ,CAAanG,IAAb,EAAmB0E,MAAnB,CAAT;MACAU,IAAI,GAAGT,GAAG,CAACa,SAAJ,CAAcxF,IAAd,EAAoB0E,MAApB,EAA4BwB,EAAE,GAAGxB,MAAjC,CAAP;MACA,IAAIV,EAAE,GAAGU,MAAM,GAAGlD,GAAT,GAAe0E,EAAf,GAAoB,CAA7B;MACA,IAAI7H,IAAI,IAAI,MAAZ,EAAoB8G,IAAI,GAAGR,GAAG,CAACa,SAAJ,CAAcxF,IAAd,EAAoBkG,EAAE,GAAG,CAAzB,EAA4BlC,EAA5B,CAAP,CAApB,KAAgE;QAC9DqB,GAAG,GAAGzF,IAAI,CAACC,MAAL,CAAYuG,QAAZ,CAAqBpG,IAAI,CAACwC,KAAL,CAAW0D,EAAE,GAAG,CAAhB,EAAmBA,EAAE,GAAG,CAAL,GAASlC,EAA5B,CAArB,CAAN;QACAmB,IAAI,GAAGR,GAAG,CAAC0B,QAAJ,CAAahB,GAAb,EAAkB,CAAlB,EAAqBA,GAAG,CAAC/F,MAAzB,CAAP;MACD;MACD0B,GAAG,CAACG,IAAJ,CAAS9C,IAAT,EAAe+G,IAAf,IAAuBD,IAAvB;IACD,CAVM,MAUA,IAAI9G,IAAI,IAAI,MAAZ,EAAoB;MACzB,IAAI2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,KAAkB,IAAtB,EAA4B2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB,EAAjB;MAC5B,IAAI6H,EAAE,GAAG,CAAT;MAAA,IACI5B,GAAG,GAAGI,MADV;MAEAwB,EAAE,GAAGvB,GAAG,CAACwB,QAAJ,CAAanG,IAAb,EAAmBsE,GAAnB,CAAL;MACAc,IAAI,GAAGT,GAAG,CAACa,SAAJ,CAAcxF,IAAd,EAAoBsE,GAApB,EAAyB4B,EAAE,GAAG5B,GAA9B,CAAP;MACAA,GAAG,GAAG4B,EAAE,GAAG,CAAX;MACA,IAAII,KAAK,GAAGtG,IAAI,CAACsE,GAAD,CAAhB;MACAA,GAAG,IAAI,CAAP;MACA4B,EAAE,GAAGvB,GAAG,CAACwB,QAAJ,CAAanG,IAAb,EAAmBsE,GAAnB,CAAL;MACAK,GAAG,CAACa,SAAJ,CAAcxF,IAAd,EAAoBsE,GAApB,EAAyB4B,EAAE,GAAG5B,GAA9B;MACAA,GAAG,GAAG4B,EAAE,GAAG,CAAX;MACAA,EAAE,GAAGvB,GAAG,CAACwB,QAAJ,CAAanG,IAAb,EAAmBsE,GAAnB,CAAL;MACAK,GAAG,CAAC0B,QAAJ,CAAarG,IAAb,EAAmBsE,GAAnB,EAAwB4B,EAAE,GAAG5B,GAA7B;MACAA,GAAG,GAAG4B,EAAE,GAAG,CAAX;MACA,IAAIlC,EAAE,GAAGxC,GAAG,IAAI8C,GAAG,GAAGI,MAAV,CAAZ;MACA,IAAI4B,KAAK,IAAI,CAAb,EAAgBnB,IAAI,GAAGR,GAAG,CAAC0B,QAAJ,CAAarG,IAAb,EAAmBsE,GAAnB,EAAwBN,EAAxB,CAAP,CAAhB,KAAwD;QACtDqB,GAAG,GAAGzF,IAAI,CAACC,MAAL,CAAYuG,QAAZ,CAAqBpG,IAAI,CAACwC,KAAL,CAAW8B,GAAX,EAAgBA,GAAG,GAAGN,EAAtB,CAArB,CAAN;QACAmB,IAAI,GAAGR,GAAG,CAAC0B,QAAJ,CAAahB,GAAb,EAAkB,CAAlB,EAAqBA,GAAG,CAAC/F,MAAzB,CAAP;MACD;MACD0B,GAAG,CAACG,IAAJ,CAAS9C,IAAT,EAAe+G,IAAf,IAAuBD,IAAvB;IACD,CArBM,MAqBA,IAAI9G,IAAI,IAAI,MAAZ,EAAoB;MACzB2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiBsG,GAAG,CAAC4B,SAAJ,CAAcvG,IAAd,EAAoB0E,MAApB,EAA4BlD,GAA5B,CAAjB;IACD,CAFM,MAEA,IAAInD,IAAI,IAAI,MAAZ,EAAoB;MACzB,IAAImI,EAAE,GAAGxF,GAAG,CAACG,IAAJ,CAAS,MAAT,EAAiB7B,MAAjB,GAA0B,CAAnC;MACA0B,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB,EAAjB;;MAEA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwH,EAApB,EAAwBxH,CAAC,EAAzB;QAA6BgC,GAAG,CAACG,IAAJ,CAAS9C,IAAT,EAAekE,IAAf,CAAoBqC,GAAG,CAAC5E,IAAD,EAAO0E,MAAM,GAAG1F,CAAC,GAAG,CAApB,CAAvB;MAA7B;IACD,CALM,MAKA,IAAIX,IAAI,IAAI,MAAZ,EAAoB;MACzB,IAAI2C,GAAG,CAACkC,KAAJ,IAAa,CAAjB,EAAoBlC,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiBsG,GAAG,CAAC4B,SAAJ,CAAcvG,IAAd,EAAoB0E,MAApB,EAA4BlD,GAA5B,CAAjB,CAApB,KAA2E,IAAIR,GAAG,CAACkC,KAAJ,IAAa,CAAjB,EAAoBlC,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiBuG,GAAG,CAAC5E,IAAD,EAAO0E,MAAP,CAApB,CAApB,KAA4D,IAAI1D,GAAG,CAACkC,KAAJ,IAAa,CAAjB,EAAoBlC,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB,CAACuG,GAAG,CAAC5E,IAAD,EAAO0E,MAAP,CAAJ,EAAoBE,GAAG,CAAC5E,IAAD,EAAO0E,MAAM,GAAG,CAAhB,CAAvB,EAA2CE,GAAG,CAAC5E,IAAD,EAAO0E,MAAM,GAAG,CAAhB,CAA9C,CAAjB,CADlI,CACsN;IAChP,CAFM,MAEA,IAAIrG,IAAI,IAAI,MAAZ,EAAoB2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiBsG,GAAG,CAACG,QAAJ,CAAa9E,IAAb,EAAmB0E,MAAnB,IAA6B,MAA9C,CAApB,KAA8E,IAAIrG,IAAI,IAAI,MAAZ,EAAoB2C,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB2B,IAAI,CAAC0E,MAAD,CAArB,CAApB,KAAuD,IAAIrG,IAAI,IAAI,MAAZ,EAAoB;MAC9J,IAAI2C,GAAG,CAACkC,KAAJ,IAAa,CAAb,IAAkBlC,GAAG,CAACkC,KAAJ,IAAa,CAAnC,EAAsClC,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB,CAACuG,GAAG,CAAC5E,IAAD,EAAO0E,MAAP,CAAJ,CAAjB,CAAtC,KAAgF,IAAI1D,GAAG,CAACkC,KAAJ,IAAa,CAAb,IAAkBlC,GAAG,CAACkC,KAAJ,IAAa,CAAnC,EAAsClC,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB,CAACuG,GAAG,CAAC5E,IAAD,EAAO0E,MAAP,CAAJ,EAAoBE,GAAG,CAAC5E,IAAD,EAAO0E,MAAM,GAAG,CAAhB,CAAvB,EAA2CE,GAAG,CAAC5E,IAAD,EAAO0E,MAAM,GAAG,CAAhB,CAA9C,CAAjB,CAAtC,KAA8H,IAAI1D,GAAG,CAACkC,KAAJ,IAAa,CAAjB,EAAoBlC,GAAG,CAACG,IAAJ,CAAS9C,IAAT,IAAiB2B,IAAI,CAAC0E,MAAD,CAArB;IACnO,CAF2I,MAErI,IAAIrG,IAAI,IAAI,MAAZ,EAAoB;MACzB;IACD,CAjG0B,CAiGzB;;;IAGFqG,MAAM,IAAIlD,GAAV;IACAmD,GAAG,CAACG,QAAJ,CAAa9E,IAAb,EAAmB0E,MAAnB;IACAA,MAAM,IAAI,CAAV;EACD;;EAED,IAAIQ,IAAI,IAAI,CAAZ,EAAe;IACb,IAAIU,EAAE,GAAG5E,GAAG,CAACO,MAAJ,CAAWP,GAAG,CAACO,MAAJ,CAAWjC,MAAX,GAAoB,CAA/B,CAAT;IACAsG,EAAE,CAAC5F,IAAH,GAAUJ,IAAI,CAACC,MAAL,CAAYgG,WAAZ,CAAwB7E,GAAxB,EAA6BiE,EAAE,CAACzC,KAAH,CAAS,CAAT,EAAY0C,IAAZ,CAA7B,EAAgDU,EAAE,CAAC/D,IAAH,CAAQ1B,KAAxD,EAA+DyF,EAAE,CAAC/D,IAAH,CAAQzB,MAAvE,CAAV;EACD;;EAEDY,GAAG,CAAChB,IAAJ,GAAWJ,IAAI,CAACC,MAAL,CAAYgG,WAAZ,CAAwB7E,GAAxB,EAA6B+D,EAA7B,EAAiC/D,GAAG,CAACb,KAArC,EAA4Ca,GAAG,CAACZ,MAAhD,CAAX;EACA,OAAOY,GAAG,CAACyF,QAAX;EACA,OAAOzF,GAAG,CAAC0F,SAAX;EACA,OAAO1F,GAAG,CAAC2F,MAAX;EACA,OAAO3F,GAAP;AACD,CAxID;;AA0IApB,IAAI,CAACC,MAAL,CAAYgG,WAAZ,GAA0B,UAAU7E,GAAV,EAAe+D,EAAf,EAAmB9D,CAAnB,EAAsBC,CAAtB,EAAyB;EACjD,IAAIyB,GAAG,GAAG/C,IAAI,CAACC,MAAL,CAAY+C,OAAZ,CAAoB5B,GAApB,CAAV;EAAA,IACI6B,GAAG,GAAGhC,IAAI,CAACiC,IAAL,CAAU7B,CAAC,GAAG0B,GAAJ,GAAU,CAApB,CADV;EAAA,IAEI8B,IAAI,GAAG,IAAIxE,UAAJ,CAAe,CAAC4C,GAAG,GAAG,CAAN,GAAU7B,GAAG,CAAC0F,SAAf,IAA4BxF,CAA3C,CAFX;;EAIA,IAAIF,GAAG,CAACG,IAAJ,CAAS,MAAT,CAAJ,EAAsB4D,EAAE,GAAGnF,IAAI,CAACgH,UAAL,CAAgB7B,EAAhB,EAAoBN,IAApB,CAAL,CAAtB,KAA0DM,EAAE,GAAGnF,IAAI,CAACC,MAAL,CAAYuG,QAAZ,CAAqBrB,EAArB,EAAyBN,IAAzB,CAAL;EAC1D,IAAIzD,GAAG,CAAC0F,SAAJ,IAAiB,CAArB,EAAwB3B,EAAE,GAAGnF,IAAI,CAACC,MAAL,CAAYgH,WAAZ,CAAwB9B,EAAxB,EAA4B/D,GAA5B,EAAiC,CAAjC,EAAoCC,CAApC,EAAuCC,CAAvC,CAAL,CAAxB,KAA4E,IAAIF,GAAG,CAAC0F,SAAJ,IAAiB,CAArB,EAAwB3B,EAAE,GAAGnF,IAAI,CAACC,MAAL,CAAYiH,cAAZ,CAA2B/B,EAA3B,EAA+B/D,GAA/B,CAAL;EACpG,OAAO+D,EAAP;AACD,CARD;;AAUAnF,IAAI,CAACC,MAAL,CAAYuG,QAAZ,GAAuB,UAAUpG,IAAV,EAAgByE,IAAhB,EAAsB;EAC3C,IAAIzD,GAAG,GAAGpB,IAAI,CAAC,YAAD,CAAJ,CAAmB,IAAIK,UAAJ,CAAeD,IAAI,CAACN,MAApB,EAA4B,CAA5B,EAA+BM,IAAI,CAACV,MAAL,GAAc,CAA7C,CAAnB,EAAoEmF,IAApE,CAAV;EACA,OAAOzD,GAAP;AACD,CAHD;;AAKApB,IAAI,CAACgH,UAAL,GAAkB,YAAY;EAC5B,IAAIG,CAAC,GAAG,EAAR;EACAA,CAAC,CAACA,CAAF,GAAM,EAAN;;EAEAA,CAAC,CAACA,CAAF,CAAIC,CAAJ,GAAQ,UAAUA,CAAV,EAAaC,CAAb,EAAgB;IACtB,IAAIC,CAAC,GAAGjH,UAAR;IAAA,IACIjB,CAAC,GAAG,CADR;IAAA,IAEImI,CAAC,GAAG,CAFR;IAAA,IAGIC,CAAC,GAAG,CAHR;IAAA,IAIIlG,CAAC,GAAG,CAJR;IAAA,IAKImG,CAAC,GAAG,CALR;IAAA,IAMIC,CAAC,GAAG,CANR;IAAA,IAOIC,CAAC,GAAG,CAPR;IAAA,IAQItG,CAAC,GAAG,CARR;IAAA,IASIuG,CAAC,GAAG,CATR;IAAA,IAUIC,CAVJ;IAAA,IAWIC,CAXJ;IAYA,IAAIV,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAR,IAAaA,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAzB,EAA4B,OAAOC,CAAC,GAAGA,CAAH,GAAO,IAAIC,CAAJ,CAAM,CAAN,CAAf;IAC5B,IAAIS,CAAC,GAAGZ,CAAC,CAACA,CAAV;IAAA,IACIa,CAAC,GAAGD,CAAC,CAACjH,CADV;IAAA,IAEImH,CAAC,GAAGF,CAAC,CAACG,CAFV;IAAA,IAGIC,CAAC,GAAGJ,CAAC,CAACT,CAHV;IAAA,IAIIc,CAAC,GAAGL,CAAC,CAACC,CAJV;IAAA,IAKIK,CAAC,GAAGN,CAAC,CAACE,CALV;IAAA,IAMIC,CAAC,GAAGH,CAAC,CAACO,CANV;IAAA,IAOIxH,CAAC,GAAGiH,CAAC,CAACR,CAPV;IAAA,IAQIe,CAAC,GAAGjB,CAAC,IAAI,IARb;IASA,IAAIiB,CAAJ,EAAOjB,CAAC,GAAG,IAAIC,CAAJ,CAAMF,CAAC,CAAC1H,MAAF,KAAa,CAAb,IAAkB,CAAxB,CAAJ;;IAEP,OAAON,CAAC,IAAI,CAAZ,EAAe;MACbA,CAAC,GAAG4I,CAAC,CAACZ,CAAD,EAAIQ,CAAJ,EAAO,CAAP,CAAL;MACAL,CAAC,GAAGS,CAAC,CAACZ,CAAD,EAAIQ,CAAC,GAAG,CAAR,EAAW,CAAX,CAAL;MACAA,CAAC,IAAI,CAAL;;MAEA,IAAIL,CAAC,IAAI,CAAT,EAAY;QACV,IAAI,CAACK,CAAC,GAAG,CAAL,KAAW,CAAf,EAAkBA,CAAC,IAAI,KAAKA,CAAC,GAAG,CAAT,CAAL;QAClB,IAAIW,CAAC,GAAG,CAACX,CAAC,KAAK,CAAP,IAAY,CAApB;QAAA,IACIY,CAAC,GAAGpB,CAAC,CAACmB,CAAC,GAAG,CAAL,CAAD,GAAWnB,CAAC,CAACmB,CAAC,GAAG,CAAL,CAAD,IAAY,CAD/B;QAEA,IAAID,CAAJ,EAAOjB,CAAC,GAAGF,CAAC,CAACA,CAAF,CAAIE,CAAJ,CAAMA,CAAN,EAAShG,CAAC,GAAGmH,CAAb,CAAJ;QACPnB,CAAC,CAACoB,GAAF,CAAM,IAAInB,CAAJ,CAAMF,CAAC,CAACtH,MAAR,EAAgBsH,CAAC,CAACsB,UAAF,GAAeH,CAA/B,EAAkCC,CAAlC,CAAN,EAA4CnH,CAA5C;QACAuG,CAAC,GAAGW,CAAC,GAAGC,CAAJ,IAAS,CAAb;QACAnH,CAAC,IAAImH,CAAL;QACA;MACD;;MAED,IAAIF,CAAJ,EAAOjB,CAAC,GAAGF,CAAC,CAACA,CAAF,CAAIE,CAAJ,CAAMA,CAAN,EAAShG,CAAC,IAAI,KAAK,EAAT,CAAV,CAAJ;;MAEP,IAAIkG,CAAC,IAAI,CAAT,EAAY;QACVM,CAAC,GAAG/G,CAAC,CAAC0G,CAAN;QACAM,CAAC,GAAGhH,CAAC,CAACQ,CAAN;QACAoG,CAAC,GAAG,CAAC,KAAK,CAAN,IAAW,CAAf;QACAC,CAAC,GAAG,CAAC,KAAK,CAAN,IAAW,CAAf;MACD;;MAED,IAAIJ,CAAC,IAAI,CAAT,EAAY;QACVC,CAAC,GAAGS,CAAC,CAACb,CAAD,EAAIQ,CAAJ,EAAO,CAAP,CAAD,GAAa,GAAjB;QACAtG,CAAC,GAAG2G,CAAC,CAACb,CAAD,EAAIQ,CAAC,GAAG,CAAR,EAAW,CAAX,CAAD,GAAiB,CAArB;QACAH,CAAC,GAAGQ,CAAC,CAACb,CAAD,EAAIQ,CAAC,GAAG,EAAR,EAAY,CAAZ,CAAD,GAAkB,CAAtB;QACAA,CAAC,IAAI,EAAL;QACA,IAAIpF,CAAC,GAAG,CAAR;;QAEA,KAAK,IAAImG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgC;UAC9B7H,CAAC,CAAC2G,CAAF,CAAIkB,CAAJ,IAAS,CAAT;UACA7H,CAAC,CAAC2G,CAAF,CAAIkB,CAAC,GAAG,CAAR,IAAa,CAAb;QACD;;QAED,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,CAApB,EAAuBkB,CAAC,EAAxB,EAA4B;UAC1B,IAAIC,CAAC,GAAGX,CAAC,CAACb,CAAD,EAAIQ,CAAC,GAAGe,CAAC,GAAG,CAAZ,EAAe,CAAf,CAAT;UACA7H,CAAC,CAAC2G,CAAF,CAAI,CAAC3G,CAAC,CAAC4G,CAAF,CAAIiB,CAAJ,KAAU,CAAX,IAAgB,CAApB,IAAyBC,CAAzB;UACA,IAAIA,CAAC,GAAGpG,CAAR,EAAWA,CAAC,GAAGoG,CAAJ;QACZ;;QAEDhB,CAAC,IAAI,IAAIH,CAAT;QACAW,CAAC,CAACtH,CAAC,CAAC2G,CAAH,EAAMjF,CAAN,CAAD;QACA6F,CAAC,CAACvH,CAAC,CAAC2G,CAAH,EAAMjF,CAAN,EAAS1B,CAAC,CAAC6G,CAAX,CAAD;QACAE,CAAC,GAAG/G,CAAC,CAACO,CAAN;QACAyG,CAAC,GAAGhH,CAAC,CAAC8G,CAAN;QACAA,CAAC,GAAGO,CAAC,CAACrH,CAAC,CAAC6G,CAAH,EAAM,CAAC,KAAKnF,CAAN,IAAW,CAAjB,EAAoBgF,CAAC,GAAGlG,CAAxB,EAA2B8F,CAA3B,EAA8BQ,CAA9B,EAAiC9G,CAAC,CAAC+G,CAAnC,CAAL;QACA,IAAIjH,CAAC,GAAGmH,CAAC,CAACA,CAAF,CAAIjH,CAAC,CAAC+G,CAAN,EAAS,CAAT,EAAYL,CAAZ,EAAe1G,CAAC,CAACgH,CAAjB,CAAR;QACAJ,CAAC,GAAG,CAAC,KAAK9G,CAAN,IAAW,CAAf;QACA,IAAIiI,CAAC,GAAGd,CAAC,CAACA,CAAF,CAAIjH,CAAC,CAAC+G,CAAN,EAASL,CAAT,EAAYlG,CAAZ,EAAeR,CAAC,CAACyH,CAAjB,CAAR;QACAZ,CAAC,GAAG,CAAC,KAAKkB,CAAN,IAAW,CAAf;QACAT,CAAC,CAACtH,CAAC,CAACgH,CAAH,EAAMlH,CAAN,CAAD;QACAyH,CAAC,CAACvH,CAAC,CAACgH,CAAH,EAAMlH,CAAN,EAASiH,CAAT,CAAD;QACAO,CAAC,CAACtH,CAAC,CAACyH,CAAH,EAAMM,CAAN,CAAD;QACAR,CAAC,CAACvH,CAAC,CAACyH,CAAH,EAAMM,CAAN,EAASf,CAAT,CAAD;MACD;;MAED,OAAO,CAAC,CAAR,EAAW;QACT,IAAIgB,CAAC,GAAGjB,CAAC,CAACK,CAAC,CAACd,CAAD,EAAIQ,CAAJ,CAAD,GAAUF,CAAX,CAAT;QACAE,CAAC,IAAIkB,CAAC,GAAG,EAAT;QACA,IAAI5E,CAAC,GAAG4E,CAAC,KAAK,CAAd;;QAEA,IAAI5E,CAAC,KAAK,CAAN,IAAW,CAAf,EAAkB;UAChBmD,CAAC,CAAChG,CAAC,EAAF,CAAD,GAAS6C,CAAT;QACD,CAFD,MAEO,IAAIA,CAAC,IAAI,GAAT,EAAc;UACnB;QACD,CAFM,MAEA;UACL,IAAI6E,CAAC,GAAG1H,CAAC,GAAG6C,CAAJ,GAAQ,GAAhB;;UAEA,IAAIA,CAAC,GAAG,GAAR,EAAa;YACX,IAAI8E,CAAC,GAAGlI,CAAC,CAAC0H,CAAF,CAAItE,CAAC,GAAG,GAAR,CAAR;YACA6E,CAAC,GAAG1H,CAAC,IAAI2H,CAAC,KAAK,CAAV,CAAD,GAAgBf,CAAC,CAACb,CAAD,EAAIQ,CAAJ,EAAOoB,CAAC,GAAG,CAAX,CAArB;YACApB,CAAC,IAAIoB,CAAC,GAAG,CAAT;UACD;;UAED,IAAIC,CAAC,GAAGnB,CAAC,CAACI,CAAC,CAACd,CAAD,EAAIQ,CAAJ,CAAD,GAAUD,CAAX,CAAT;UACAC,CAAC,IAAIqB,CAAC,GAAG,EAAT;UACA,IAAIC,CAAC,GAAGD,CAAC,KAAK,CAAd;UAAA,IACIE,CAAC,GAAGrI,CAAC,CAAC6H,CAAF,CAAIO,CAAJ,CADR;UAAA,IAEInI,CAAC,GAAG,CAACoI,CAAC,KAAK,CAAP,IAAYnB,CAAC,CAACZ,CAAD,EAAIQ,CAAJ,EAAOuB,CAAC,GAAG,EAAX,CAFrB;UAGAvB,CAAC,IAAIuB,CAAC,GAAG,EAAT;;UAEA,OAAO9H,CAAC,GAAG0H,CAAX,EAAc;YACZ1B,CAAC,CAAChG,CAAD,CAAD,GAAOgG,CAAC,CAAChG,CAAC,KAAKN,CAAP,CAAR;YACAsG,CAAC,CAAChG,CAAD,CAAD,GAAOgG,CAAC,CAAChG,CAAC,KAAKN,CAAP,CAAR;YACAsG,CAAC,CAAChG,CAAD,CAAD,GAAOgG,CAAC,CAAChG,CAAC,KAAKN,CAAP,CAAR;YACAsG,CAAC,CAAChG,CAAD,CAAD,GAAOgG,CAAC,CAAChG,CAAC,KAAKN,CAAP,CAAR;UACD;;UAEDM,CAAC,GAAG0H,CAAJ;QACD;MACF;IACF;;IAED,OAAO1B,CAAC,CAAC3H,MAAF,IAAY2B,CAAZ,GAAgBgG,CAAhB,GAAoBA,CAAC,CAACzE,KAAF,CAAQ,CAAR,EAAWvB,CAAX,CAA3B;EACD,CA1HD;;EA4HA8F,CAAC,CAACA,CAAF,CAAIE,CAAJ,GAAQ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;IACtB,IAAIC,CAAC,GAAGF,CAAC,CAAC1H,MAAV;IACA,IAAI2H,CAAC,IAAIC,CAAT,EAAY,OAAOF,CAAP;IACZ,IAAIW,CAAC,GAAG,IAAI1H,UAAJ,CAAeiH,CAAC,IAAI,CAApB,CAAR;IACAS,CAAC,CAACU,GAAF,CAAMrB,CAAN,EAAS,CAAT;IACA,OAAOW,CAAP;EACD,CAND;;EAQAZ,CAAC,CAACA,CAAF,CAAIG,CAAJ,GAAQ,UAAUF,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBS,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;IAClC,IAAIE,CAAC,GAAGhB,CAAC,CAACA,CAAF,CAAIe,CAAZ;IAAA,IACIE,CAAC,GAAGjB,CAAC,CAACA,CAAF,CAAImB,CADZ;IAAA,IAEID,CAAC,GAAG,CAFR;;IAIA,OAAOA,CAAC,GAAGf,CAAX,EAAc;MACZ,IAAIY,CAAC,GAAGd,CAAC,CAACgB,CAAC,CAACL,CAAD,EAAIC,CAAJ,CAAD,GAAUX,CAAX,CAAT;MACAW,CAAC,IAAIE,CAAC,GAAG,EAAT;MACA,IAAIpH,CAAC,GAAGoH,CAAC,KAAK,CAAd;;MAEA,IAAIpH,CAAC,IAAI,EAAT,EAAa;QACXmH,CAAC,CAACI,CAAD,CAAD,GAAOvH,CAAP;QACAuH,CAAC;MACF,CAHD,MAGO;QACL,IAAIC,CAAC,GAAG,CAAR;QAAA,IACIf,CAAC,GAAG,CADR;;QAGA,IAAIzG,CAAC,IAAI,EAAT,EAAa;UACXyG,CAAC,GAAG,IAAIY,CAAC,CAACJ,CAAD,EAAIC,CAAJ,EAAO,CAAP,CAAT;UACAA,CAAC,IAAI,CAAL;UACAM,CAAC,GAAGL,CAAC,CAACI,CAAC,GAAG,CAAL,CAAL;QACD,CAJD,MAIO,IAAIvH,CAAC,IAAI,EAAT,EAAa;UAClByG,CAAC,GAAG,IAAIY,CAAC,CAACJ,CAAD,EAAIC,CAAJ,EAAO,CAAP,CAAT;UACAA,CAAC,IAAI,CAAL;QACD,CAHM,MAGA,IAAIlH,CAAC,IAAI,EAAT,EAAa;UAClByG,CAAC,GAAG,KAAKY,CAAC,CAACJ,CAAD,EAAIC,CAAJ,EAAO,CAAP,CAAV;UACAA,CAAC,IAAI,CAAL;QACD;;QAED,IAAIR,CAAC,GAAGa,CAAC,GAAGd,CAAZ;;QAEA,OAAOc,CAAC,GAAGb,CAAX,EAAc;UACZS,CAAC,CAACI,CAAD,CAAD,GAAOC,CAAP;UACAD,CAAC;QACF;MACF;IACF;;IAED,OAAOL,CAAP;EACD,CAvCD;;EAyCAb,CAAC,CAACA,CAAF,CAAIY,CAAJ,GAAQ,UAAUX,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBS,CAAnB,EAAsB;IAC5B,IAAIC,CAAC,GAAG,CAAR;IAAA,IACIC,CAAC,GAAG,CADR;IAAA,IAEIE,CAAC,GAAGJ,CAAC,CAACrI,MAAF,KAAa,CAFrB;;IAIA,OAAOuI,CAAC,GAAGX,CAAX,EAAc;MACZ,IAAIc,CAAC,GAAGhB,CAAC,CAACa,CAAC,GAAGZ,CAAL,CAAT;MACAU,CAAC,CAACE,CAAC,IAAI,CAAN,CAAD,GAAY,CAAZ;MACAF,CAAC,CAAC,CAACE,CAAC,IAAI,CAAN,IAAW,CAAZ,CAAD,GAAkBG,CAAlB;MACA,IAAIA,CAAC,GAAGJ,CAAR,EAAWA,CAAC,GAAGI,CAAJ;MACXH,CAAC;IACF;;IAED,OAAOA,CAAC,GAAGE,CAAX,EAAc;MACZJ,CAAC,CAACE,CAAC,IAAI,CAAN,CAAD,GAAY,CAAZ;MACAF,CAAC,CAAC,CAACE,CAAC,IAAI,CAAN,IAAW,CAAZ,CAAD,GAAkB,CAAlB;MACAA,CAAC;IACF;;IAED,OAAOD,CAAP;EACD,CApBD;;EAsBAb,CAAC,CAACA,CAAF,CAAIa,CAAJ,GAAQ,UAAUZ,CAAV,EAAaC,CAAb,EAAgB;IACtB,IAAIC,CAAC,GAAGH,CAAC,CAACA,CAAF,CAAII,CAAZ;IAAA,IACIQ,CAAC,GAAGX,CAAC,CAAC1H,MADV;IAAA,IAEIsI,CAFJ;IAAA,IAGIC,CAHJ;IAAA,IAIIE,CAJJ;IAAA,IAKIC,CALJ;IAAA,IAMIC,CANJ;IAAA,IAOIH,CAAC,GAAGZ,CAAC,CAAC9E,CAPV;;IASA,KAAK,IAAI4F,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIf,CAArB,EAAwBe,CAAC,EAAzB;MAA6BF,CAAC,CAACE,CAAD,CAAD,GAAO,CAAP;IAA7B;;IAEA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,CAAhB,EAAmBK,CAAC,IAAI,CAAxB;MAA2BF,CAAC,CAACd,CAAC,CAACgB,CAAD,CAAF,CAAD;IAA3B;;IAEA,IAAItH,CAAC,GAAGwG,CAAC,CAACsB,CAAV;IACAZ,CAAC,GAAG,CAAJ;IACAE,CAAC,CAAC,CAAD,CAAD,GAAO,CAAP;;IAEA,KAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIZ,CAAjB,EAAoBY,CAAC,EAArB,EAAyB;MACvBD,CAAC,GAAGA,CAAC,GAAGE,CAAC,CAACD,CAAC,GAAG,CAAL,CAAL,IAAgB,CAApB;MACAnH,CAAC,CAACmH,CAAD,CAAD,GAAOD,CAAP;IACD;;IAED,KAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,CAAhB,EAAmBI,CAAC,IAAI,CAAxB,EAA2B;MACzBE,CAAC,GAAGjB,CAAC,CAACe,CAAC,GAAG,CAAL,CAAL;;MAEA,IAAIE,CAAC,IAAI,CAAT,EAAY;QACVjB,CAAC,CAACe,CAAD,CAAD,GAAOrH,CAAC,CAACuH,CAAD,CAAR;QACAvH,CAAC,CAACuH,CAAD,CAAD;MACD;IACF;EACF,CA/BD;;EAiCAlB,CAAC,CAACA,CAAF,CAAIc,CAAJ,GAAQ,UAAUb,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;IACzB,IAAIS,CAAC,GAAGX,CAAC,CAAC1H,MAAV;IAAA,IACIsI,CAAC,GAAGb,CAAC,CAACA,CAAF,CAAII,CADZ;IAAA,IAEIU,CAAC,GAAGD,CAAC,CAACpH,CAFV;;IAIA,KAAK,IAAIuH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAApB,EAAuBI,CAAC,IAAI,CAA5B;MAA+B,IAAIf,CAAC,CAACe,CAAC,GAAG,CAAL,CAAD,IAAY,CAAhB,EAAmB;QAChD,IAAIC,CAAC,GAAGD,CAAC,IAAI,CAAb;QAAA,IACIE,CAAC,GAAGjB,CAAC,CAACe,CAAC,GAAG,CAAL,CADT;QAAA,IAEID,CAAC,GAAGE,CAAC,IAAI,CAAL,GAASC,CAFjB;QAAA,IAGIvH,CAAC,GAAGuG,CAAC,GAAGgB,CAHZ;QAAA,IAIIC,CAAC,GAAGlB,CAAC,CAACe,CAAD,CAAD,IAAQrH,CAJhB;QAAA,IAKIyG,CAAC,GAAGe,CAAC,IAAI,KAAKxH,CAAT,CALT;;QAOA,OAAOwH,CAAC,IAAIf,CAAZ,EAAe;UACb,IAAIC,CAAC,GAAGS,CAAC,CAACK,CAAD,CAAD,KAAS,KAAKjB,CAAtB;UACAC,CAAC,CAACE,CAAD,CAAD,GAAOU,CAAP;UACAI,CAAC;QACF;MACF;IAbD;EAcD,CAnBD;;EAqBAnB,CAAC,CAACA,CAAF,CAAIgB,CAAJ,GAAQ,UAAUf,CAAV,EAAaC,CAAb,EAAgB;IACtB,IAAIC,CAAC,GAAGH,CAAC,CAACA,CAAF,CAAII,CAAJ,CAAM3G,CAAd;IAAA,IACImH,CAAC,GAAG,KAAKV,CADb;;IAGA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,CAAC,CAAC1H,MAAtB,EAA8BsI,CAAC,IAAI,CAAnC,EAAsC;MACpC,IAAIC,CAAC,GAAGb,CAAC,CAACY,CAAD,CAAD,IAAQX,CAAC,GAAGD,CAAC,CAACY,CAAC,GAAG,CAAL,CAArB;MACAZ,CAAC,CAACY,CAAD,CAAD,GAAOV,CAAC,CAACW,CAAD,CAAD,KAASF,CAAhB;IACD;EACF,CARD;;EAUAZ,CAAC,CAACA,CAAF,CAAIiB,CAAJ,GAAQ,UAAUhB,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;IACzBA,CAAC,GAAGA,CAAC,KAAKD,CAAC,GAAG,CAAT,CAAL;IACA,IAAIU,CAAC,GAAGV,CAAC,KAAK,CAAd;IACAD,CAAC,CAACW,CAAD,CAAD,IAAQT,CAAR;IACAF,CAAC,CAACW,CAAC,GAAG,CAAL,CAAD,IAAYT,CAAC,KAAK,CAAlB;EACD,CALD;;EAOAH,CAAC,CAACA,CAAF,CAAIkB,CAAJ,GAAQ,UAAUjB,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;IACzBA,CAAC,GAAGA,CAAC,KAAKD,CAAC,GAAG,CAAT,CAAL;IACA,IAAIU,CAAC,GAAGV,CAAC,KAAK,CAAd;IACAD,CAAC,CAACW,CAAD,CAAD,IAAQT,CAAR;IACAF,CAAC,CAACW,CAAC,GAAG,CAAL,CAAD,IAAYT,CAAC,KAAK,CAAlB;IACAF,CAAC,CAACW,CAAC,GAAG,CAAL,CAAD,IAAYT,CAAC,KAAK,EAAlB;EACD,CAND;;EAQAH,CAAC,CAACA,CAAF,CAAIe,CAAJ,GAAQ,UAAUd,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;IACzB,OAAO,CAACF,CAAC,CAACC,CAAC,KAAK,CAAP,CAAD,GAAaD,CAAC,CAAC,CAACC,CAAC,KAAK,CAAP,IAAY,CAAb,CAAD,IAAoB,CAAlC,OAA0CA,CAAC,GAAG,CAA9C,IAAmD,CAAC,KAAKC,CAAN,IAAW,CAArE;EACD,CAFD;;EAIAH,CAAC,CAACA,CAAF,CAAIrG,CAAJ,GAAQ,UAAUsG,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;IACzB,OAAO,CAACF,CAAC,CAACC,CAAC,KAAK,CAAP,CAAD,GAAaD,CAAC,CAAC,CAACC,CAAC,KAAK,CAAP,IAAY,CAAb,CAAD,IAAoB,CAAjC,GAAqCD,CAAC,CAAC,CAACC,CAAC,KAAK,CAAP,IAAY,CAAb,CAAD,IAAoB,EAA1D,OAAmEA,CAAC,GAAG,CAAvE,IAA4E,CAAC,KAAKC,CAAN,IAAW,CAA9F;EACD,CAFD;;EAIAH,CAAC,CAACA,CAAF,CAAImB,CAAJ,GAAQ,UAAUlB,CAAV,EAAaC,CAAb,EAAgB;IACtB,OAAO,CAACD,CAAC,CAACC,CAAC,KAAK,CAAP,CAAD,GAAaD,CAAC,CAAC,CAACC,CAAC,KAAK,CAAP,IAAY,CAAb,CAAD,IAAoB,CAAjC,GAAqCD,CAAC,CAAC,CAACC,CAAC,KAAK,CAAP,IAAY,CAAb,CAAD,IAAoB,EAA1D,OAAmEA,CAAC,GAAG,CAAvE,CAAP;EACD,CAFD;;EAIAF,CAAC,CAACA,CAAF,CAAI/H,CAAJ,GAAQ,UAAUgI,CAAV,EAAaC,CAAb,EAAgB;IACtB,OAAO,CAACD,CAAC,CAACC,CAAC,KAAK,CAAP,CAAD,GAAaD,CAAC,CAAC,CAACC,CAAC,KAAK,CAAP,IAAY,CAAb,CAAD,IAAoB,CAAjC,GAAqCD,CAAC,CAAC,CAACC,CAAC,KAAK,CAAP,IAAY,CAAb,CAAD,IAAoB,EAAzD,GAA8DD,CAAC,CAAC,CAACC,CAAC,KAAK,CAAP,IAAY,CAAb,CAAD,IAAoB,EAAnF,OAA4FA,CAAC,GAAG,CAAhG,CAAP;EACD,CAFD;;EAIAF,CAAC,CAACA,CAAF,CAAII,CAAJ,GAAQ,YAAY;IAClB,IAAIH,CAAC,GAAG1G,WAAR;IAAA,IACI2G,CAAC,GAAGhE,WADR;IAEA,OAAO;MACLuF,CAAC,EAAE,IAAIxB,CAAJ,CAAM,EAAN,CADE;MAEL5E,CAAC,EAAE,IAAI4E,CAAJ,CAAM,EAAN,CAFE;MAGLM,CAAC,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,EAA1C,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,CAArD,EAAwD,EAAxD,EAA4D,CAA5D,EAA+D,EAA/D,CAHE;MAILmB,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,EAAtD,EAA0D,EAA1D,EAA8D,EAA9D,EAAkE,EAAlE,EAAsE,EAAtE,EAA0E,EAA1E,EAA8E,EAA9E,EAAkF,EAAlF,EAAsF,GAAtF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,GAA1G,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,EAA8H,GAA9H,CAJE;MAKLC,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,CAAlF,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,CAA3F,EAA8F,CAA9F,CALE;MAMLN,CAAC,EAAE,IAAIpB,CAAJ,CAAM,EAAN,CANE;MAOLlD,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,EAA9C,EAAkD,GAAlD,EAAuD,GAAvD,EAA4D,GAA5D,EAAiE,GAAjE,EAAsE,GAAtE,EAA2E,GAA3E,EAAgF,IAAhF,EAAsF,IAAtF,EAA4F,IAA5F,EAAkG,IAAlG,EAAwG,IAAxG,EAA8G,IAA9G,EAAoH,IAApH,EAA0H,KAA1H,EAAiI,KAAjI,EAAwI,KAAxI,EAA+I,KAA/I,EAAsJ,KAAtJ,CAPE;MAQL6E,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,CAAhE,EAAmE,EAAnE,EAAuE,EAAvE,EAA2E,EAA3E,EAA+E,EAA/E,EAAmF,EAAnF,EAAuF,EAAvF,EAA2F,EAA3F,EAA+F,EAA/F,EAAmG,CAAnG,EAAsG,CAAtG,CARE;MASLJ,CAAC,EAAE,IAAItB,CAAJ,CAAM,EAAN,CATE;MAULG,CAAC,EAAE,IAAIJ,CAAJ,CAAM,GAAN,CAVE;MAWL4B,CAAC,EAAE,EAXE;MAYL1H,CAAC,EAAE,IAAI8F,CAAJ,CAAM,EAAN,CAZE;MAaL6B,CAAC,EAAE,EAbE;MAcL5H,CAAC,EAAE,IAAI+F,CAAJ,CAAM,KAAN,CAdE;MAeLU,CAAC,EAAE,EAfE;MAgBLD,CAAC,EAAE,EAhBE;MAiBLD,CAAC,EAAE,IAAIR,CAAJ,CAAM,KAAN,CAjBE;MAkBLmB,CAAC,EAAE,EAlBE;MAmBLZ,CAAC,EAAE,IAAIP,CAAJ,CAAM,GAAN,CAnBE;MAoBLK,CAAC,EAAE,EApBE;MAqBL7G,CAAC,EAAE,IAAIwG,CAAJ,CAAM,KAAK,EAAX,CArBE;MAsBL8B,CAAC,EAAE,IAAI7B,CAAJ,CAAM,GAAN,CAtBE;MAuBL8B,CAAC,EAAE,IAAI9B,CAAJ,CAAM,EAAN,CAvBE;MAwBLtG,CAAC,EAAE,IAAIsG,CAAJ,CAAM,EAAN,CAxBE;MAyBL+B,CAAC,EAAE,IAAI/B,CAAJ,CAAM,IAAN,CAzBE;MA0BLgC,CAAC,EAAE,IAAIjC,CAAJ,CAAM,KAAK,EAAX,CA1BE;MA2BLvG,CAAC,EAAE,IAAIuG,CAAJ,CAAM,KAAK,EAAX;IA3BE,CAAP;EA6BD,CAhCO,EAAR;;EAkCA,CAAC,YAAY;IACX,IAAIA,CAAC,GAAGD,CAAC,CAACA,CAAF,CAAII,CAAZ;IAAA,IACIF,CAAC,GAAG,KAAK,EADb;;IAGA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA4B;MAC1B,IAAIS,CAAC,GAAGT,CAAR;MACAS,CAAC,GAAG,CAACA,CAAC,GAAG,UAAL,MAAqB,CAArB,GAAyB,CAACA,CAAC,GAAG,UAAL,KAAoB,CAAjD;MACAA,CAAC,GAAG,CAACA,CAAC,GAAG,UAAL,MAAqB,CAArB,GAAyB,CAACA,CAAC,GAAG,SAAL,KAAmB,CAAhD;MACAA,CAAC,GAAG,CAACA,CAAC,GAAG,UAAL,MAAqB,CAArB,GAAyB,CAACA,CAAC,GAAG,SAAL,KAAmB,CAAhD;MACAA,CAAC,GAAG,CAACA,CAAC,GAAG,UAAL,MAAqB,CAArB,GAAyB,CAACA,CAAC,GAAG,QAAL,KAAkB,CAA/C;MACAX,CAAC,CAACxG,CAAF,CAAI0G,CAAJ,IAAS,CAACS,CAAC,KAAK,EAAN,GAAWA,CAAC,IAAI,EAAjB,MAAyB,EAAlC;IACD;;IAED,SAASC,CAAT,CAAWC,CAAX,EAAcE,CAAd,EAAiBC,CAAjB,EAAoB;MAClB,OAAOD,CAAC,MAAM,CAAd;QAAiBF,CAAC,CAACtF,IAAF,CAAO,CAAP,EAAUyF,CAAV;MAAjB;IACD;;IAED,KAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC3BF,CAAC,CAACoB,CAAF,CAAIlB,CAAJ,IAASF,CAAC,CAACyB,CAAF,CAAIvB,CAAJ,KAAU,CAAV,GAAcF,CAAC,CAAC0B,CAAF,CAAIxB,CAAJ,CAAvB;MACAF,CAAC,CAACuB,CAAF,CAAIrB,CAAJ,IAASF,CAAC,CAAClD,CAAF,CAAIoD,CAAJ,KAAU,CAAV,GAAcF,CAAC,CAAC2B,CAAF,CAAIzB,CAAJ,CAAvB;IACD;;IAEDU,CAAC,CAACZ,CAAC,CAAC4B,CAAH,EAAM,GAAN,EAAW,CAAX,CAAD;IACAhB,CAAC,CAACZ,CAAC,CAAC4B,CAAH,EAAM,MAAM,GAAZ,EAAiB,CAAjB,CAAD;IACAhB,CAAC,CAACZ,CAAC,CAAC4B,CAAH,EAAM,MAAM,GAAZ,EAAiB,CAAjB,CAAD;IACAhB,CAAC,CAACZ,CAAC,CAAC4B,CAAH,EAAM,MAAM,GAAZ,EAAiB,CAAjB,CAAD;IACA7B,CAAC,CAACA,CAAF,CAAIa,CAAJ,CAAMZ,CAAC,CAAC4B,CAAR,EAAW,CAAX;IACA7B,CAAC,CAACA,CAAF,CAAIc,CAAJ,CAAMb,CAAC,CAAC4B,CAAR,EAAW,CAAX,EAAc5B,CAAC,CAACI,CAAhB;IACAL,CAAC,CAACA,CAAF,CAAIgB,CAAJ,CAAMf,CAAC,CAAC4B,CAAR,EAAW,CAAX;IACAhB,CAAC,CAACZ,CAAC,CAAC6B,CAAH,EAAM,EAAN,EAAU,CAAV,CAAD;IACA9B,CAAC,CAACA,CAAF,CAAIa,CAAJ,CAAMZ,CAAC,CAAC6B,CAAR,EAAW,CAAX;IACA9B,CAAC,CAACA,CAAF,CAAIc,CAAJ,CAAMb,CAAC,CAAC6B,CAAR,EAAW,CAAX,EAAc7B,CAAC,CAAC9F,CAAhB;IACA6F,CAAC,CAACA,CAAF,CAAIgB,CAAJ,CAAMf,CAAC,CAAC6B,CAAR,EAAW,CAAX;IACAjB,CAAC,CAACZ,CAAC,CAACK,CAAH,EAAM,EAAN,EAAU,CAAV,CAAD;IACAO,CAAC,CAACZ,CAAC,CAACU,CAAH,EAAM,GAAN,EAAW,CAAX,CAAD;IACAE,CAAC,CAACZ,CAAC,CAACmB,CAAH,EAAM,EAAN,EAAU,CAAV,CAAD;IACAP,CAAC,CAACZ,CAAC,CAACS,CAAH,EAAM,GAAN,EAAW,CAAX,CAAD;EACD,CArCD;;EAuCA,OAAOV,CAAC,CAACA,CAAF,CAAIC,CAAX;AACD,CAhXiB,EAAlB;;AAkXApH,IAAI,CAACC,MAAL,CAAYiH,cAAZ,GAA6B,UAAU9G,IAAV,EAAgBgB,GAAhB,EAAqB;EAChD,IAAIC,CAAC,GAAGD,GAAG,CAACb,KAAZ;EAAA,IACIe,CAAC,GAAGF,GAAG,CAACZ,MADZ;;EAGA,IAAIuC,GAAG,GAAG/C,IAAI,CAACC,MAAL,CAAY+C,OAAZ,CAAoB5B,GAApB,CAAV;EAAA,IACIkI,IAAI,GAAGvG,GAAG,IAAI,CADlB;EAAA,IAEIE,GAAG,GAAGhC,IAAI,CAACiC,IAAL,CAAU7B,CAAC,GAAG0B,GAAJ,GAAU,CAApB,CAFV;;EAIA,IAAIhD,GAAG,GAAG,IAAIM,UAAJ,CAAeiB,CAAC,GAAG2B,GAAnB,CAAV;EACA,IAAIuB,EAAE,GAAG,CAAT;EACA,IAAI+E,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAnB;EACA,IAAIC,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAnB;EACA,IAAIC,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAApB;EACA,IAAIC,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAApB;EACA,IAAIC,IAAI,GAAG,CAAX;;EAEA,OAAOA,IAAI,GAAG,CAAd,EAAiB;IACf,IAAIC,EAAE,GAAGH,aAAa,CAACE,IAAD,CAAtB;IAAA,IACIE,EAAE,GAAGH,aAAa,CAACC,IAAD,CADtB;IAEA,IAAIG,EAAE,GAAG,CAAT;IAAA,IACIC,EAAE,GAAG,CADT;IAEA,IAAIC,EAAE,GAAGT,YAAY,CAACI,IAAD,CAArB;;IAEA,OAAOK,EAAE,GAAG1I,CAAZ,EAAe;MACb0I,EAAE,IAAIJ,EAAN;MACAG,EAAE;IACH;;IAED,IAAIE,EAAE,GAAGT,YAAY,CAACG,IAAD,CAArB;;IAEA,OAAOM,EAAE,GAAG5I,CAAZ,EAAe;MACb4I,EAAE,IAAIJ,EAAN;MACAC,EAAE;IACH;;IAED,IAAII,IAAI,GAAGjJ,IAAI,CAACiC,IAAL,CAAU4G,EAAE,GAAG/G,GAAL,GAAW,CAArB,CAAX;;IAEA/C,IAAI,CAACC,MAAL,CAAYgH,WAAZ,CAAwB7G,IAAxB,EAA8BgB,GAA9B,EAAmCoD,EAAnC,EAAuCsF,EAAvC,EAA2CC,EAA3C;;IAEA,IAAI3H,CAAC,GAAG,CAAR;IAAA,IACI+H,GAAG,GAAGZ,YAAY,CAACI,IAAD,CADtB;IAEA,IAAIS,GAAJ;;IAEA,OAAOD,GAAG,GAAG7I,CAAb,EAAgB;MACd,IAAI+I,GAAG,GAAGb,YAAY,CAACG,IAAD,CAAtB;MACA,IAAIW,GAAG,GAAG9F,EAAE,GAAGpC,CAAC,GAAG8H,IAAT,IAAiB,CAA3B;;MAEA,OAAOG,GAAG,GAAGhJ,CAAb,EAAgB;QACd,IAAI0B,GAAG,IAAI,CAAX,EAAc;UACZqH,GAAG,GAAGhK,IAAI,CAACkK,GAAG,IAAI,CAAR,CAAV;UACAF,GAAG,GAAGA,GAAG,IAAI,KAAKE,GAAG,GAAG,CAAX,CAAP,GAAuB,CAA7B;UACAvK,GAAG,CAACoK,GAAG,GAAGlH,GAAN,IAAaoH,GAAG,IAAI,CAApB,CAAD,CAAH,IAA+BD,GAAG,IAAI,KAAK,CAACC,GAAG,GAAG,CAAP,KAAa,CAAlB,CAAtC;QACD;;QAED,IAAItH,GAAG,IAAI,CAAX,EAAc;UACZqH,GAAG,GAAGhK,IAAI,CAACkK,GAAG,IAAI,CAAR,CAAV;UACAF,GAAG,GAAGA,GAAG,IAAI,KAAKE,GAAG,GAAG,CAAX,CAAP,GAAuB,CAA7B;UACAvK,GAAG,CAACoK,GAAG,GAAGlH,GAAN,IAAaoH,GAAG,IAAI,CAApB,CAAD,CAAH,IAA+BD,GAAG,IAAI,KAAK,CAACC,GAAG,GAAG,CAAP,KAAa,CAAlB,CAAtC;QACD;;QAED,IAAItH,GAAG,IAAI,CAAX,EAAc;UACZqH,GAAG,GAAGhK,IAAI,CAACkK,GAAG,IAAI,CAAR,CAAV;UACAF,GAAG,GAAGA,GAAG,IAAI,KAAKE,GAAG,GAAG,CAAX,CAAP,GAAuB,EAA7B;UACAvK,GAAG,CAACoK,GAAG,GAAGlH,GAAN,IAAaoH,GAAG,IAAI,CAApB,CAAD,CAAH,IAA+BD,GAAG,IAAI,KAAK,CAACC,GAAG,GAAG,CAAP,KAAa,CAAlB,CAAtC;QACD;;QAED,IAAItH,GAAG,IAAI,CAAX,EAAc;UACZ,IAAIwH,EAAE,GAAGJ,GAAG,GAAGlH,GAAN,GAAYoH,GAAG,GAAGf,IAA3B;;UAEA,KAAK,IAAI9G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8G,IAApB,EAA0B9G,CAAC,EAA3B;YAA+BzC,GAAG,CAACwK,EAAE,GAAG/H,CAAN,CAAH,GAAcpC,IAAI,CAAC,CAACkK,GAAG,IAAI,CAAR,IAAa9H,CAAd,CAAlB;UAA/B;QACD;;QAED8H,GAAG,IAAIvH,GAAP;QACAsH,GAAG,IAAIR,EAAP;MACD;;MAEDzH,CAAC;MACD+H,GAAG,IAAIP,EAAP;IACD;;IAED,IAAIE,EAAE,GAAGC,EAAL,IAAW,CAAf,EAAkBvF,EAAE,IAAIuF,EAAE,IAAI,IAAIG,IAAR,CAAR;IAClBP,IAAI,GAAGA,IAAI,GAAG,CAAd;EACD;;EAED,OAAO5J,GAAP;AACD,CArFD;;AAuFAC,IAAI,CAACC,MAAL,CAAY+C,OAAZ,GAAsB,UAAU5B,GAAV,EAAe;EACnC,IAAIoJ,GAAG,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,IAAnB,EAAyB,CAAzB,EAA4BpJ,GAAG,CAACkC,KAAhC,CAAV;EACA,OAAOkH,GAAG,GAAGpJ,GAAG,CAACmC,KAAjB;AACD,CAHD;;AAKAvD,IAAI,CAACC,MAAL,CAAYgH,WAAZ,GAA0B,UAAU7G,IAAV,EAAgBgB,GAAhB,EAAqBsD,GAArB,EAA0BrD,CAA1B,EAA6BC,CAA7B,EAAgC;EACxD,IAAIyB,GAAG,GAAG/C,IAAI,CAACC,MAAL,CAAY+C,OAAZ,CAAoB5B,GAApB,CAAV;EAAA,IACI6B,GAAG,GAAGhC,IAAI,CAACiC,IAAL,CAAU7B,CAAC,GAAG0B,GAAJ,GAAU,CAApB,CADV;EAAA,IAEI0H,KAAK,GAAGzK,IAAI,CAACC,MAAL,CAAYyK,MAFxB;;EAIA3H,GAAG,GAAG9B,IAAI,CAACiC,IAAL,CAAUH,GAAG,GAAG,CAAhB,CAAN;EACA,IAAI3D,CAAJ;EAAA,IACIoF,EADJ;EAAA,IAEI/F,IAAI,GAAG2B,IAAI,CAACsE,GAAD,CAFf;EAAA,IAGIxC,CAAC,GAAG,CAHR;EAIA,IAAIzD,IAAI,GAAG,CAAX,EAAc2B,IAAI,CAACsE,GAAD,CAAJ,GAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUjG,IAAI,GAAG,CAAjB,CAAZ;EACd,IAAIA,IAAI,IAAI,CAAZ,EAAe,KAAKyD,CAAC,GAAGa,GAAT,EAAcb,CAAC,GAAGe,GAAlB,EAAuBf,CAAC,EAAxB;IAA4B9B,IAAI,CAAC8B,CAAC,GAAG,CAAL,CAAJ,GAAc9B,IAAI,CAAC8B,CAAC,GAAG,CAAL,CAAJ,IAAe9B,IAAI,CAAC8B,CAAC,GAAG,CAAJ,GAAQa,GAAT,CAAJ,KAAsB,CAArC,IAA0C,GAAxD;EAA5B;;EAEf,KAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,CAApB,EAAuBc,CAAC,EAAxB,EAA4B;IAC1BhD,CAAC,GAAGsF,GAAG,GAAGtC,CAAC,GAAGa,GAAd;IACAuB,EAAE,GAAGpF,CAAC,GAAGgD,CAAJ,GAAQ,CAAb;IACA3D,IAAI,GAAG2B,IAAI,CAACoE,EAAE,GAAG,CAAN,CAAX;IACAtC,CAAC,GAAG,CAAJ;IACA,IAAIzD,IAAI,IAAI,CAAZ,EAAe,OAAOyD,CAAC,GAAGe,GAAX,EAAgBf,CAAC,EAAjB;MAAqB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAL,CAAJ,GAAc9B,IAAI,CAACoE,EAAE,GAAGtC,CAAN,CAAlB;IAArB,CAAf,MAAoE,IAAIzD,IAAI,IAAI,CAAZ,EAAe;MACjF,OAAOyD,CAAC,GAAGa,GAAX,EAAgBb,CAAC,EAAjB;QAAqB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAL,CAAJ,GAAc9B,IAAI,CAACoE,EAAE,GAAGtC,CAAN,CAAlB;MAArB;;MAEA,OAAOA,CAAC,GAAGe,GAAX,EAAgBf,CAAC,EAAjB;QAAqB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAL,CAAJ,GAAc9B,IAAI,CAACoE,EAAE,GAAGtC,CAAN,CAAJ,GAAe9B,IAAI,CAAChB,CAAC,GAAG8C,CAAJ,GAAQa,GAAT,CAAjC;MAArB;IACD,CAJmE,MAI7D,IAAItE,IAAI,IAAI,CAAZ,EAAe;MACpB,OAAOyD,CAAC,GAAGe,GAAX,EAAgBf,CAAC,EAAjB;QAAqB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAL,CAAJ,GAAc9B,IAAI,CAACoE,EAAE,GAAGtC,CAAN,CAAJ,GAAe9B,IAAI,CAAChB,CAAC,GAAG8C,CAAJ,GAAQe,GAAT,CAAjC;MAArB;IACD,CAFM,MAEA,IAAIxE,IAAI,IAAI,CAAZ,EAAe;MACpB,OAAOyD,CAAC,GAAGa,GAAX,EAAgBb,CAAC,EAAjB;QAAqB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAL,CAAJ,GAAc9B,IAAI,CAACoE,EAAE,GAAGtC,CAAN,CAAJ,IAAgB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAJ,GAAQe,GAAT,CAAJ,KAAsB,CAAtC,CAAd;MAArB;;MAEA,OAAOf,CAAC,GAAGe,GAAX,EAAgBf,CAAC,EAAjB;QAAqB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAL,CAAJ,GAAc9B,IAAI,CAACoE,EAAE,GAAGtC,CAAN,CAAJ,IAAgB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAJ,GAAQe,GAAT,CAAJ,GAAoB7C,IAAI,CAAChB,CAAC,GAAG8C,CAAJ,GAAQa,GAAT,CAAxB,KAA0C,CAA1D,CAAd;MAArB;IACD,CAJM,MAIA;MACL,OAAOb,CAAC,GAAGa,GAAX,EAAgBb,CAAC,EAAjB;QAAqB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAL,CAAJ,GAAc9B,IAAI,CAACoE,EAAE,GAAGtC,CAAN,CAAJ,GAAeuI,KAAK,CAAC,CAAD,EAAIrK,IAAI,CAAChB,CAAC,GAAG8C,CAAJ,GAAQe,GAAT,CAAR,EAAuB,CAAvB,CAAlC;MAArB;;MAEA,OAAOf,CAAC,GAAGe,GAAX,EAAgBf,CAAC,EAAjB;QAAqB9B,IAAI,CAAChB,CAAC,GAAG8C,CAAL,CAAJ,GAAc9B,IAAI,CAACoE,EAAE,GAAGtC,CAAN,CAAJ,GAAeuI,KAAK,CAACrK,IAAI,CAAChB,CAAC,GAAG8C,CAAJ,GAAQa,GAAT,CAAL,EAAoB3C,IAAI,CAAChB,CAAC,GAAG8C,CAAJ,GAAQe,GAAT,CAAxB,EAAuC7C,IAAI,CAAChB,CAAC,GAAG8C,CAAJ,GAAQa,GAAR,GAAcE,GAAf,CAA3C,CAAlC;MAArB;IACD;EACF;;EAED,OAAO7C,IAAP;AACD,CApCD;;AAsCAJ,IAAI,CAACC,MAAL,CAAYyK,MAAZ,GAAqB,UAAU3J,CAAV,EAAaD,CAAb,EAAgB6H,CAAhB,EAAmB;EACtC,IAAIzE,CAAC,GAAGnD,CAAC,GAAGD,CAAJ,GAAQ6H,CAAhB;EAAA,IACIgC,EAAE,GAAGzG,CAAC,GAAGnD,CADb;EAAA,IAEI6J,EAAE,GAAG1G,CAAC,GAAGpD,CAFb;EAAA,IAGI+J,EAAE,GAAG3G,CAAC,GAAGyE,CAHb;EAIA,IAAIgC,EAAE,GAAGA,EAAL,IAAWC,EAAE,GAAGA,EAAhB,IAAsBD,EAAE,GAAGA,EAAL,IAAWE,EAAE,GAAGA,EAA1C,EAA8C,OAAO9J,CAAP,CAA9C,KAA4D,IAAI6J,EAAE,GAAGA,EAAL,IAAWC,EAAE,GAAGA,EAApB,EAAwB,OAAO/J,CAAP;EACpF,OAAO6H,CAAP;AACD,CAPD;;AASA3I,IAAI,CAACC,MAAL,CAAY4F,KAAZ,GAAoB,UAAUzF,IAAV,EAAgB0E,MAAhB,EAAwB1D,GAAxB,EAA6B;EAC/C,IAAI2D,GAAG,GAAG/E,IAAI,CAACyD,IAAf;EACArC,GAAG,CAACb,KAAJ,GAAYwE,GAAG,CAACG,QAAJ,CAAa9E,IAAb,EAAmB0E,MAAnB,CAAZ;EACAA,MAAM,IAAI,CAAV;EACA1D,GAAG,CAACZ,MAAJ,GAAauE,GAAG,CAACG,QAAJ,CAAa9E,IAAb,EAAmB0E,MAAnB,CAAb;EACAA,MAAM,IAAI,CAAV;EACA1D,GAAG,CAACmC,KAAJ,GAAYnD,IAAI,CAAC0E,MAAD,CAAhB;EACAA,MAAM;EACN1D,GAAG,CAACkC,KAAJ,GAAYlD,IAAI,CAAC0E,MAAD,CAAhB;EACAA,MAAM;EACN1D,GAAG,CAACyF,QAAJ,GAAezG,IAAI,CAAC0E,MAAD,CAAnB;EACAA,MAAM;EACN1D,GAAG,CAAC2F,MAAJ,GAAa3G,IAAI,CAAC0E,MAAD,CAAjB;EACAA,MAAM;EACN1D,GAAG,CAAC0F,SAAJ,GAAgB1G,IAAI,CAAC0E,MAAD,CAApB;EACAA,MAAM;AACP,CAhBD;;AAkBA9E,IAAI,CAACyD,IAAL,GAAY;EACV8C,QAAQ,EAAE,kBAAUnG,IAAV,EAAgB8D,CAAhB,EAAmB;IAC3B,OAAO9D,IAAI,CAAC8D,CAAD,CAAJ,IAAW,CAAlB;MAAqBA,CAAC;IAAtB;;IAEA,OAAOA,CAAP;EACD,CALS;EAMVR,UAAU,EAAE,oBAAUmB,IAAV,EAAgBX,CAAhB,EAAmB;IAC7B,OAAOW,IAAI,CAACX,CAAD,CAAJ,IAAW,CAAX,GAAeW,IAAI,CAACX,CAAC,GAAG,CAAL,CAA1B;EACD,CARS;EASV4G,WAAW,EAAE,qBAAUjG,IAAV,EAAgBX,CAAhB,EAAmB8D,CAAnB,EAAsB;IACjCnD,IAAI,CAACX,CAAD,CAAJ,GAAU8D,CAAC,IAAI,CAAL,GAAS,GAAnB;IACAnD,IAAI,CAACX,CAAC,GAAG,CAAL,CAAJ,GAAc8D,CAAC,GAAG,GAAlB;EACD,CAZS;EAaV9C,QAAQ,EAAE,kBAAUL,IAAV,EAAgBX,CAAhB,EAAmB;IAC3B,OAAOW,IAAI,CAACX,CAAD,CAAJ,IAAW,MAAM,GAAN,GAAY,GAAvB,KAA+BW,IAAI,CAACX,CAAC,GAAG,CAAL,CAAJ,IAAe,EAAf,GAAoBW,IAAI,CAACX,CAAC,GAAG,CAAL,CAAJ,IAAe,CAAnC,GAAuCW,IAAI,CAACX,CAAC,GAAG,CAAL,CAA1E,CAAP;EACD,CAfS;EAgBV6G,SAAS,EAAE,mBAAUlG,IAAV,EAAgBX,CAAhB,EAAmB8D,CAAnB,EAAsB;IAC/BnD,IAAI,CAACX,CAAD,CAAJ,GAAU8D,CAAC,IAAI,EAAL,GAAU,GAApB;IACAnD,IAAI,CAACX,CAAC,GAAG,CAAL,CAAJ,GAAc8D,CAAC,IAAI,EAAL,GAAU,GAAxB;IACAnD,IAAI,CAACX,CAAC,GAAG,CAAL,CAAJ,GAAc8D,CAAC,IAAI,CAAL,GAAS,GAAvB;IACAnD,IAAI,CAACX,CAAC,GAAG,CAAL,CAAJ,GAAc8D,CAAC,GAAG,GAAlB;EACD,CArBS;EAsBVpC,SAAS,EAAE,mBAAUf,IAAV,EAAgBX,CAAhB,EAAmBiE,CAAnB,EAAsB;IAC/B,IAAIe,CAAC,GAAG,EAAR;;IAEA,KAAK,IAAI9J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+I,CAApB,EAAuB/I,CAAC,EAAxB;MAA4B8J,CAAC,IAAI8B,MAAM,CAACC,YAAP,CAAoBpG,IAAI,CAACX,CAAC,GAAG9E,CAAL,CAAxB,CAAL;IAA5B;;IAEA,OAAO8J,CAAP;EACD,CA5BS;EA6BVgC,UAAU,EAAE,oBAAU9K,IAAV,EAAgB8D,CAAhB,EAAmBgF,CAAnB,EAAsB;IAChC,KAAK,IAAI9J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8J,CAAC,CAACxJ,MAAtB,EAA8BN,CAAC,EAA/B;MAAmCgB,IAAI,CAAC8D,CAAC,GAAG9E,CAAL,CAAJ,GAAc8J,CAAC,CAACiC,UAAF,CAAa/L,CAAb,CAAd;IAAnC;EACD,CA/BS;EAgCVuH,SAAS,EAAE,mBAAU9B,IAAV,EAAgBX,CAAhB,EAAmBiE,CAAnB,EAAsB;IAC/B,IAAIiD,GAAG,GAAG,EAAV;;IAEA,KAAK,IAAIhM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+I,CAApB,EAAuB/I,CAAC,EAAxB;MAA4BgM,GAAG,CAACzI,IAAJ,CAASkC,IAAI,CAACX,CAAC,GAAG9E,CAAL,CAAb;IAA5B;;IAEA,OAAOgM,GAAP;EACD,CAtCS;EAuCVC,GAAG,EAAE,aAAUrD,CAAV,EAAa;IAChB,OAAOA,CAAC,CAACtI,MAAF,GAAW,CAAX,GAAe,MAAMsI,CAArB,GAAyBA,CAAhC;EACD,CAzCS;EA0CVvB,QAAQ,EAAE,kBAAU5B,IAAV,EAAgBX,CAAhB,EAAmBiE,CAAnB,EAAsB;IAC9B,IAAIe,CAAC,GAAG,EAAR;IAAA,IACIoC,EADJ;;IAGA,KAAK,IAAIlM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+I,CAApB,EAAuB/I,CAAC,EAAxB;MAA4B8J,CAAC,IAAI,MAAMlJ,IAAI,CAACyD,IAAL,CAAU4H,GAAV,CAAcxG,IAAI,CAACX,CAAC,GAAG9E,CAAL,CAAJ,CAAYmM,QAAZ,CAAqB,EAArB,CAAd,CAAX;IAA5B;;IAEA,IAAI;MACFD,EAAE,GAAGE,kBAAkB,CAACtC,CAAD,CAAvB;IACD,CAFD,CAEE,OAAOhB,CAAP,EAAU;MACV,OAAOlI,IAAI,CAACyD,IAAL,CAAUmC,SAAV,CAAoBf,IAApB,EAA0BX,CAA1B,EAA6BiE,CAA7B,CAAP;IACD;;IAED,OAAOmD,EAAP;EACD;AAvDS,CAAZ;;AA0DAtL,IAAI,CAAC0C,SAAL,GAAiB,UAAU+I,EAAV,EAAc3B,EAAd,EAAkBC,EAAlB,EAAsB/F,EAAtB,EAA0B0H,EAA1B,EAA8BC,EAA9B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,IAA9C,EAAoD;EACnE,IAAIzK,CAAC,GAAGJ,IAAI,CAACC,GAAL,CAAS4I,EAAT,EAAa4B,EAAb,CAAR;EAAA,IACIpK,CAAC,GAAGL,IAAI,CAACC,GAAL,CAAS6I,EAAT,EAAa4B,EAAb,CADR;EAEA,IAAII,EAAE,GAAG,CAAT;EAAA,IACIlI,EAAE,GAAG,CADT;;EAGA,KAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,CAApB,EAAuBc,CAAC,EAAxB;IAA4B,KAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAApB,EAAuBa,CAAC,EAAxB,EAA4B;MACtD,IAAI0J,IAAI,IAAI,CAAR,IAAaC,IAAI,IAAI,CAAzB,EAA4B;QAC1BE,EAAE,GAAG3J,CAAC,GAAG0H,EAAJ,GAAS5H,CAAT,IAAc,CAAnB;QACA2B,EAAE,GAAG,CAACgI,IAAI,GAAGzJ,CAAR,IAAasJ,EAAb,GAAkBE,IAAlB,GAAyB1J,CAAzB,IAA8B,CAAnC;MACD,CAHD,MAGO;QACL6J,EAAE,GAAG,CAAC,CAACF,IAAD,GAAQzJ,CAAT,IAAc0H,EAAd,GAAmB8B,IAAnB,GAA0B1J,CAA1B,IAA+B,CAApC;QACA2B,EAAE,GAAGzB,CAAC,GAAGsJ,EAAJ,GAASxJ,CAAT,IAAc,CAAnB;MACD;;MAED,IAAI4J,IAAI,IAAI,CAAZ,EAAe;QACb9H,EAAE,CAACH,EAAD,CAAF,GAAS4H,EAAE,CAACM,EAAD,CAAX;QACA/H,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa4H,EAAE,CAACM,EAAE,GAAG,CAAN,CAAf;QACA/H,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa4H,EAAE,CAACM,EAAE,GAAG,CAAN,CAAf;QACA/H,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa4H,EAAE,CAACM,EAAE,GAAG,CAAN,CAAf;MACD,CALD,MAKO,IAAID,IAAI,IAAI,CAAZ,EAAe;QACpB,IAAIE,EAAE,GAAGP,EAAE,CAACM,EAAE,GAAG,CAAN,CAAF,IAAc,IAAI,GAAlB,CAAT;QAAA,IACI/F,EAAE,GAAGyF,EAAE,CAACM,EAAD,CAAF,GAASC,EADlB;QAAA,IAEIC,EAAE,GAAGR,EAAE,CAACM,EAAE,GAAG,CAAN,CAAF,GAAaC,EAFtB;QAAA,IAGIE,EAAE,GAAGT,EAAE,CAACM,EAAE,GAAG,CAAN,CAAF,GAAaC,EAHtB;QAIA,IAAIG,EAAE,GAAGnI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,IAAc,IAAI,GAAlB,CAAT;QAAA,IACIuI,EAAE,GAAGpI,EAAE,CAACH,EAAD,CAAF,GAASsI,EADlB;QAAA,IAEIE,EAAE,GAAGrI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAasI,EAFtB;QAAA,IAGIG,EAAE,GAAGtI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAasI,EAHtB;QAIA,IAAII,GAAG,GAAG,IAAIP,EAAd;QAAA,IACIQ,EAAE,GAAGR,EAAE,GAAGG,EAAE,GAAGI,GADnB;QAAA,IAEIE,GAAG,GAAGD,EAAE,IAAI,CAAN,GAAU,CAAV,GAAc,IAAIA,EAF5B;QAGAxI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa,MAAM2I,EAAnB;QACAxI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa,CAACmC,EAAE,GAAGoG,EAAE,GAAGG,GAAX,IAAkBE,GAA/B;QACAzI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa,CAACoI,EAAE,GAAGI,EAAE,GAAGE,GAAX,IAAkBE,GAA/B;QACAzI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa,CAACqI,EAAE,GAAGI,EAAE,GAAGC,GAAX,IAAkBE,GAA/B;MACD,CAhBM,MAgBA,IAAIX,IAAI,IAAI,CAAZ,EAAe;QACpB;QACA,IAAIE,EAAE,GAAGP,EAAE,CAACM,EAAE,GAAG,CAAN,CAAX;QAAA,IACI/F,EAAE,GAAGyF,EAAE,CAACM,EAAD,CADX;QAAA,IAEIE,EAAE,GAAGR,EAAE,CAACM,EAAE,GAAG,CAAN,CAFX;QAAA,IAGIG,EAAE,GAAGT,EAAE,CAACM,EAAE,GAAG,CAAN,CAHX;QAIA,IAAII,EAAE,GAAGnI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAX;QAAA,IACIuI,EAAE,GAAGpI,EAAE,CAACH,EAAD,CADX;QAAA,IAEIwI,EAAE,GAAGrI,EAAE,CAACH,EAAE,GAAG,CAAN,CAFX;QAAA,IAGIyI,EAAE,GAAGtI,EAAE,CAACH,EAAE,GAAG,CAAN,CAHX;;QAKA,IAAImI,EAAE,IAAIG,EAAN,IAAYnG,EAAE,IAAIoG,EAAlB,IAAwBH,EAAE,IAAII,EAA9B,IAAoCH,EAAE,IAAII,EAA9C,EAAkD;UAChDtI,EAAE,CAACH,EAAD,CAAF,GAAS,CAAT;UACAG,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa,CAAb;UACAG,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa,CAAb;UACAG,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAa,CAAb;QACD,CALD,MAKO;UACLG,EAAE,CAACH,EAAD,CAAF,GAASmC,EAAT;UACAhC,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAaoI,EAAb;UACAjI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAaqI,EAAb;UACAlI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAF,GAAamI,EAAb;QACD;MACF,CAtBM,MAsBA,IAAIF,IAAI,IAAI,CAAZ,EAAe;QACpB;QACA,IAAIE,EAAE,GAAGP,EAAE,CAACM,EAAE,GAAG,CAAN,CAAX;QAAA,IACI/F,EAAE,GAAGyF,EAAE,CAACM,EAAD,CADX;QAAA,IAEIE,EAAE,GAAGR,EAAE,CAACM,EAAE,GAAG,CAAN,CAFX;QAAA,IAGIG,EAAE,GAAGT,EAAE,CAACM,EAAE,GAAG,CAAN,CAHX;QAIA,IAAII,EAAE,GAAGnI,EAAE,CAACH,EAAE,GAAG,CAAN,CAAX;QAAA,IACIuI,EAAE,GAAGpI,EAAE,CAACH,EAAD,CADX;QAAA,IAEIwI,EAAE,GAAGrI,EAAE,CAACH,EAAE,GAAG,CAAN,CAFX;QAAA,IAGIyI,EAAE,GAAGtI,EAAE,CAACH,EAAE,GAAG,CAAN,CAHX;QAIA,IAAImI,EAAE,IAAIG,EAAN,IAAYnG,EAAE,IAAIoG,EAAlB,IAAwBH,EAAE,IAAII,EAA9B,IAAoCH,EAAE,IAAII,EAA9C,EAAkD,SAV9B,CAUwC;;QAE5D,IAAIN,EAAE,GAAG,GAAL,IAAYG,EAAE,GAAG,EAArB,EAAyB,OAAO,KAAP;MAC1B;IACF;EAlED;;EAoEA,OAAO,IAAP;AACD,CA3ED;;AA6EA,SAAS5N,UAAT"},"metadata":{},"sourceType":"module"}