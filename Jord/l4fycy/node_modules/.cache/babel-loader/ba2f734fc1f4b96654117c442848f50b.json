{"ast":null,"code":"import _createClass from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { BufferGeometry, Float32BufferAttribute } from 'three';\nimport { ConvexHull } from '../math/ConvexHull.js';\n\nvar ConvexGeometry = /*#__PURE__*/function (_BufferGeometry) {\n  _inherits(ConvexGeometry, _BufferGeometry);\n\n  var _super = _createSuper(ConvexGeometry);\n\n  function ConvexGeometry(points) {\n    var _this;\n\n    _classCallCheck(this, ConvexGeometry);\n\n    _this = _super.call(this); // buffers\n\n    var vertices = [];\n    var normals = [];\n\n    if (ConvexHull === undefined) {\n      console.error('THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull');\n    }\n\n    var convexHull = new ConvexHull().setFromPoints(points); // generate vertices and normals\n\n    var faces = convexHull.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      var edge = face.edge; // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n      do {\n        var point = edge.head().point;\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n        edge = edge.next;\n      } while (edge !== face.edge);\n    } // build geometry\n\n\n    _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n    return _this;\n  }\n\n  return _createClass(ConvexGeometry);\n}(BufferGeometry);\n\nexport { ConvexGeometry };","map":{"version":3,"names":["BufferGeometry","Float32BufferAttribute","ConvexHull","ConvexGeometry","points","vertices","normals","undefined","console","error","convexHull","setFromPoints","faces","i","length","face","edge","point","head","push","x","y","z","normal","next","setAttribute"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/three-stdlib/geometries/ConvexGeometry.js"],"sourcesContent":["import { BufferGeometry, Float32BufferAttribute } from 'three';\nimport { ConvexHull } from '../math/ConvexHull.js';\n\nclass ConvexGeometry extends BufferGeometry {\n  constructor(points) {\n    super(); // buffers\n\n    const vertices = [];\n    const normals = [];\n\n    if (ConvexHull === undefined) {\n      console.error('THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull');\n    }\n\n    const convexHull = new ConvexHull().setFromPoints(points); // generate vertices and normals\n\n    const faces = convexHull.faces;\n\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      let edge = face.edge; // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n      do {\n        const point = edge.head().point;\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n        edge = edge.next;\n      } while (edge !== face.edge);\n    } // build geometry\n\n\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n  }\n\n}\n\nexport { ConvexGeometry };\n"],"mappings":";;;;AAAA,SAASA,cAAT,EAAyBC,sBAAzB,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,uBAA3B;;IAEMC,c;;;;;EACJ,wBAAYC,MAAZ,EAAoB;IAAA;;IAAA;;IAClB,0BADkB,CACT;;IAET,IAAMC,QAAQ,GAAG,EAAjB;IACA,IAAMC,OAAO,GAAG,EAAhB;;IAEA,IAAIJ,UAAU,KAAKK,SAAnB,EAA8B;MAC5BC,OAAO,CAACC,KAAR,CAAc,uEAAd;IACD;;IAED,IAAMC,UAAU,GAAG,IAAIR,UAAJ,GAAiBS,aAAjB,CAA+BP,MAA/B,CAAnB,CAVkB,CAUyC;;IAE3D,IAAMQ,KAAK,GAAGF,UAAU,CAACE,KAAzB;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACrC,IAAME,IAAI,GAAGH,KAAK,CAACC,CAAD,CAAlB;MACA,IAAIG,IAAI,GAAGD,IAAI,CAACC,IAAhB,CAFqC,CAEf;;MAEtB,GAAG;QACD,IAAMC,KAAK,GAAGD,IAAI,CAACE,IAAL,GAAYD,KAA1B;QACAZ,QAAQ,CAACc,IAAT,CAAcF,KAAK,CAACG,CAApB,EAAuBH,KAAK,CAACI,CAA7B,EAAgCJ,KAAK,CAACK,CAAtC;QACAhB,OAAO,CAACa,IAAR,CAAaJ,IAAI,CAACQ,MAAL,CAAYH,CAAzB,EAA4BL,IAAI,CAACQ,MAAL,CAAYF,CAAxC,EAA2CN,IAAI,CAACQ,MAAL,CAAYD,CAAvD;QACAN,IAAI,GAAGA,IAAI,CAACQ,IAAZ;MACD,CALD,QAKSR,IAAI,KAAKD,IAAI,CAACC,IALvB;IAMD,CAxBiB,CAwBhB;;;IAGF,MAAKS,YAAL,CAAkB,UAAlB,EAA8B,IAAIxB,sBAAJ,CAA2BI,QAA3B,EAAqC,CAArC,CAA9B;;IACA,MAAKoB,YAAL,CAAkB,QAAlB,EAA4B,IAAIxB,sBAAJ,CAA2BK,OAA3B,EAAoC,CAApC,CAA5B;;IA5BkB;EA6BnB;;;EA9B0BN,c;;AAkC7B,SAASG,cAAT"},"metadata":{},"sourceType":"module"}