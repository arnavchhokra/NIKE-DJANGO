{"ast":null,"code":"import _createClass from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from 'three'; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar _changeEvent = {\n  type: 'change'\n};\nvar _startEvent = {\n  type: 'start'\n};\nvar _endEvent = {\n  type: 'end'\n};\n\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n    if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n    if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n    _this.object = object;\n    _this.domElement = domElement;\n    _this.domElement.style.touchAction = 'none'; // disable touch scroll\n    // Set to false to disable this control\n\n    _this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    _this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    _this.minPolarAngle = 0; // radians\n\n    _this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n    _this.minAzimuthAngle = -Infinity; // radians\n\n    _this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    _this.enablePan = true;\n    _this.panSpeed = 1.0;\n    _this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n    // The four arrow keys\n\n    _this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    }; // Mouse buttons\n\n    _this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    }; // Touch fingers\n\n    _this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    }; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom; // the target DOM element for key events\n\n    _this._domElementKeyEvents = null; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new Vector3(); // so camera.up is the orbit axis\n\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    _this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerCancel);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n    var pointers = [];\n    var pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = function () {\n      var v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      var dx = pointers[0].pageX - pointers[1].pageX;\n      var dy = pointers[0].pageY - pointers[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var position = getSecondPointerPosition(event);\n      var dx = event.pageX - position.x;\n      var dy = event.pageY - position.y;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      } //\n\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (var i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      var position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      var pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } //\n\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerCancel);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    }); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return _createClass(OrbitControls);\n}(EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nvar MapControls = /*#__PURE__*/function (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n\n  var _super2 = _createSuper(MapControls);\n\n  function MapControls(object, domElement) {\n    var _this2;\n\n    _classCallCheck(this, MapControls);\n\n    _this2 = _super2.call(this, object, domElement);\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = MOUSE.ROTATE;\n    _this2.touches.ONE = TOUCH.PAN;\n    _this2.touches.TWO = TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n\n  return _createClass(MapControls);\n}(OrbitControls);\n\nexport { OrbitControls, MapControls };","map":{"version":3,"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","_changeEvent","type","_startEvent","_endEvent","OrbitControls","object","domElement","undefined","console","warn","document","error","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","code","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","ctrlKey","metaKey","shiftKey","trackPointer","DOLLY_ROTATE","push","i","splice","pointer","passive","MapControls"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\r\n\tEventDispatcher,\r\n\tMOUSE,\r\n\tQuaternion,\r\n\tSpherical,\r\n\tTOUCH,\r\n\tVector2,\r\n\tVector3\r\n} from 'three';\r\n\r\n// This set of controls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n//\r\n//    Orbit - left mouse / touch: one-finger move\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\r\n\r\nconst _changeEvent = { type: 'change' };\r\nconst _startEvent = { type: 'start' };\r\nconst _endEvent = { type: 'end' };\r\n\r\nclass OrbitControls extends EventDispatcher {\r\n\r\n\tconstructor( object, domElement ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\r\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.domElement = domElement;\r\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\r\n\r\n\t\t// Set to false to disable this control\r\n\t\tthis.enabled = true;\r\n\r\n\t\t// \"target\" sets the location of focus, where the object orbits around\r\n\t\tthis.target = new Vector3();\r\n\r\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\r\n\t\tthis.minDistance = 0;\r\n\t\tthis.maxDistance = Infinity;\r\n\r\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\r\n\t\tthis.minZoom = 0;\r\n\t\tthis.maxZoom = Infinity;\r\n\r\n\t\t// How far you can orbit vertically, upper and lower limits.\r\n\t\t// Range is 0 to Math.PI radians.\r\n\t\tthis.minPolarAngle = 0; // radians\r\n\t\tthis.maxPolarAngle = Math.PI; // radians\r\n\r\n\t\t// How far you can orbit horizontally, upper and lower limits.\r\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\r\n\t\tthis.minAzimuthAngle = - Infinity; // radians\r\n\t\tthis.maxAzimuthAngle = Infinity; // radians\r\n\r\n\t\t// Set to true to enable damping (inertia)\r\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\r\n\t\tthis.enableDamping = false;\r\n\t\tthis.dampingFactor = 0.05;\r\n\r\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n\t\t// Set to false to disable zooming\r\n\t\tthis.enableZoom = true;\r\n\t\tthis.zoomSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable rotating\r\n\t\tthis.enableRotate = true;\r\n\t\tthis.rotateSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable panning\r\n\t\tthis.enablePan = true;\r\n\t\tthis.panSpeed = 1.0;\r\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\r\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\r\n\r\n\t\t// Set to true to automatically rotate around the target\r\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n\t\tthis.autoRotate = false;\r\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\r\n\r\n\t\t// The four arrow keys\r\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\r\n\r\n\t\t// Mouse buttons\r\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\r\n\r\n\t\t// Touch fingers\r\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\r\n\r\n\t\t// for reset\r\n\t\tthis.target0 = this.target.clone();\r\n\t\tthis.position0 = this.object.position.clone();\r\n\t\tthis.zoom0 = this.object.zoom;\r\n\r\n\t\t// the target DOM element for key events\r\n\t\tthis._domElementKeyEvents = null;\r\n\r\n\t\t//\r\n\t\t// public methods\r\n\t\t//\r\n\r\n\t\tthis.getPolarAngle = function () {\r\n\r\n\t\t\treturn spherical.phi;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getAzimuthalAngle = function () {\r\n\r\n\t\t\treturn spherical.theta;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDistance = function () {\r\n\r\n\t\t\treturn this.object.position.distanceTo( this.target );\r\n\r\n\t\t};\r\n\r\n\t\tthis.listenToKeyEvents = function ( domElement ) {\r\n\r\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\r\n\t\t\tthis._domElementKeyEvents = domElement;\r\n\r\n\t\t};\r\n\r\n\t\tthis.saveState = function () {\r\n\r\n\t\t\tscope.target0.copy( scope.target );\r\n\t\t\tscope.position0.copy( scope.object.position );\r\n\t\t\tscope.zoom0 = scope.object.zoom;\r\n\r\n\t\t};\r\n\r\n\t\tthis.reset = function () {\r\n\r\n\t\t\tscope.target.copy( scope.target0 );\r\n\t\t\tscope.object.position.copy( scope.position0 );\r\n\t\t\tscope.object.zoom = scope.zoom0;\r\n\r\n\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\tscope.dispatchEvent( _changeEvent );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t\tstate = STATE.NONE;\r\n\r\n\t\t};\r\n\r\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\r\n\t\tthis.update = function () {\r\n\r\n\t\t\tconst offset = new Vector3();\r\n\r\n\t\t\t// so camera.up is the orbit axis\r\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\r\n\t\t\tconst quatInverse = quat.clone().invert();\r\n\r\n\t\t\tconst lastPosition = new Vector3();\r\n\t\t\tconst lastQuaternion = new Quaternion();\r\n\r\n\t\t\tconst twoPI = 2 * Math.PI;\r\n\r\n\t\t\treturn function update() {\r\n\r\n\t\t\t\tconst position = scope.object.position;\r\n\r\n\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\r\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\r\n\t\t\t\toffset.applyQuaternion( quat );\r\n\r\n\t\t\t\t// angle from z-axis around y-axis\r\n\t\t\t\tspherical.setFromVector3( offset );\r\n\r\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\r\n\r\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( scope.enableDamping ) {\r\n\r\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\r\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\r\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// restrict theta to be between desired limits\r\n\r\n\t\t\t\tlet min = scope.minAzimuthAngle;\r\n\t\t\t\tlet max = scope.maxAzimuthAngle;\r\n\r\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\r\n\r\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\r\n\r\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\r\n\r\n\t\t\t\t\tif ( min <= max ) {\r\n\r\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\r\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\r\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// restrict phi to be between desired limits\r\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\r\n\r\n\t\t\t\tspherical.makeSafe();\r\n\r\n\r\n\t\t\t\tspherical.radius *= scale;\r\n\r\n\t\t\t\t// restrict radius to be between desired limits\r\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\r\n\r\n\t\t\t\t// move target to panned location\r\n\r\n\t\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tscope.target.add( panOffset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toffset.setFromSpherical( spherical );\r\n\r\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\r\n\t\t\t\toffset.applyQuaternion( quatInverse );\r\n\r\n\t\t\t\tposition.copy( scope.target ).add( offset );\r\n\r\n\t\t\t\tscope.object.lookAt( scope.target );\r\n\r\n\t\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\r\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscale = 1;\r\n\r\n\t\t\t\t// update condition is:\r\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\r\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n\t\t\t\tif ( zoomChanged ||\r\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\r\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\r\n\r\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\r\n\r\n\t\t\t\t\tlastPosition.copy( scope.object.position );\r\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\r\n\t\t\t\t\tzoomChanged = false;\r\n\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\r\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\r\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\r\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\r\n\r\n\r\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\r\n\r\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\t\t// internals\r\n\t\t//\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst STATE = {\r\n\t\t\tNONE: - 1,\r\n\t\t\tROTATE: 0,\r\n\t\t\tDOLLY: 1,\r\n\t\t\tPAN: 2,\r\n\t\t\tTOUCH_ROTATE: 3,\r\n\t\t\tTOUCH_PAN: 4,\r\n\t\t\tTOUCH_DOLLY_PAN: 5,\r\n\t\t\tTOUCH_DOLLY_ROTATE: 6\r\n\t\t};\r\n\r\n\t\tlet state = STATE.NONE;\r\n\r\n\t\tconst EPS = 0.000001;\r\n\r\n\t\t// current position in spherical coordinates\r\n\t\tconst spherical = new Spherical();\r\n\t\tconst sphericalDelta = new Spherical();\r\n\r\n\t\tlet scale = 1;\r\n\t\tconst panOffset = new Vector3();\r\n\t\tlet zoomChanged = false;\r\n\r\n\t\tconst rotateStart = new Vector2();\r\n\t\tconst rotateEnd = new Vector2();\r\n\t\tconst rotateDelta = new Vector2();\r\n\r\n\t\tconst panStart = new Vector2();\r\n\t\tconst panEnd = new Vector2();\r\n\t\tconst panDelta = new Vector2();\r\n\r\n\t\tconst dollyStart = new Vector2();\r\n\t\tconst dollyEnd = new Vector2();\r\n\t\tconst dollyDelta = new Vector2();\r\n\r\n\t\tconst pointers = [];\r\n\t\tconst pointerPositions = {};\r\n\r\n\t\tfunction getAutoRotationAngle() {\r\n\r\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getZoomScale() {\r\n\r\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\r\n\r\n\t\t}\r\n\r\n\t\tfunction rotateLeft( angle ) {\r\n\r\n\t\t\tsphericalDelta.theta -= angle;\r\n\r\n\t\t}\r\n\r\n\t\tfunction rotateUp( angle ) {\r\n\r\n\t\t\tsphericalDelta.phi -= angle;\r\n\r\n\t\t}\r\n\r\n\t\tconst panLeft = function () {\r\n\r\n\t\t\tconst v = new Vector3();\r\n\r\n\t\t\treturn function panLeft( distance, objectMatrix ) {\r\n\r\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\r\n\t\t\t\tv.multiplyScalar( - distance );\r\n\r\n\t\t\t\tpanOffset.add( v );\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tconst panUp = function () {\r\n\r\n\t\t\tconst v = new Vector3();\r\n\r\n\t\t\treturn function panUp( distance, objectMatrix ) {\r\n\r\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\r\n\r\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\r\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tv.multiplyScalar( distance );\r\n\r\n\t\t\t\tpanOffset.add( v );\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\t// deltaX and deltaY are in pixels; right and down are positive\r\n\t\tconst pan = function () {\r\n\r\n\t\t\tconst offset = new Vector3();\r\n\r\n\t\t\treturn function pan( deltaX, deltaY ) {\r\n\r\n\t\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\t\t// perspective\r\n\t\t\t\t\tconst position = scope.object.position;\r\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\t\t\t\t\tlet targetDistance = offset.length();\r\n\r\n\t\t\t\t\t// half of the fov is center to top of screen\r\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\r\n\r\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\r\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\r\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\t// orthographic\r\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\r\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// camera neither orthographic nor perspective\r\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\r\n\t\t\t\t\tscope.enablePan = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tfunction dollyOut( dollyScale ) {\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\tscale /= dollyScale;\r\n\r\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\r\n\t\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\t\tzoomChanged = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\t\tscope.enableZoom = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction dollyIn( dollyScale ) {\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\tscale *= dollyScale;\r\n\r\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\r\n\t\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\t\tzoomChanged = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\t\tscope.enableZoom = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// event callbacks - update the object state\r\n\t\t//\r\n\r\n\t\tfunction handleMouseDownRotate( event ) {\r\n\r\n\t\t\trotateStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseDownDolly( event ) {\r\n\r\n\t\t\tdollyStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseDownPan( event ) {\r\n\r\n\t\t\tpanStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMoveRotate( event ) {\r\n\r\n\t\t\trotateEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMoveDolly( event ) {\r\n\r\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\r\n\r\n\t\t\tif ( dollyDelta.y > 0 ) {\r\n\r\n\t\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t\t} else if ( dollyDelta.y < 0 ) {\r\n\r\n\t\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMovePan( event ) {\r\n\r\n\t\t\tpanEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\t\tpanStart.copy( panEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseWheel( event ) {\r\n\r\n\t\t\tif ( event.deltaY < 0 ) {\r\n\r\n\t\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t\t} else if ( event.deltaY > 0 ) {\r\n\r\n\t\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleKeyDown( event ) {\r\n\r\n\t\t\tlet needsUpdate = false;\r\n\r\n\t\t\tswitch ( event.code ) {\r\n\r\n\t\t\t\tcase scope.keys.UP:\r\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.BOTTOM:\r\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.LEFT:\r\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.RIGHT:\r\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\t// prevent the browser from scrolling on cursor keys\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartRotate() {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\r\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\r\n\r\n\t\t\t\trotateStart.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartPan() {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\r\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\r\n\r\n\t\t\t\tpanStart.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDolly() {\r\n\r\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\r\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\r\n\r\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\t\tdollyStart.set( 0, distance );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDollyPan() {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\r\n\r\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDollyRotate() {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\r\n\r\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveRotate( event ) {\r\n\r\n\t\t\tif ( pointers.length == 1 ) {\r\n\r\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\trotateEnd.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMovePan( event ) {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\tpanEnd.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\t\tpanStart.copy( panEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDolly( event ) {\r\n\r\n\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\tconst dx = event.pageX - position.x;\r\n\t\t\tconst dy = event.pageY - position.y;\r\n\r\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\t\tdollyEnd.set( 0, distance );\r\n\r\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\r\n\r\n\t\t\tdollyOut( dollyDelta.y );\r\n\r\n\t\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDollyPan( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDollyRotate( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// event handlers - FSM: listen for events and reset state\r\n\t\t//\r\n\r\n\t\tfunction onPointerDown( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tif ( pointers.length === 0 ) {\r\n\r\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\r\n\r\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\r\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\taddPointer( event );\r\n\r\n\t\t\tif ( event.pointerType === 'touch' ) {\r\n\r\n\t\t\t\tonTouchStart( event );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonMouseDown( event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onPointerMove( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tif ( event.pointerType === 'touch' ) {\r\n\r\n\t\t\t\tonTouchMove( event );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonMouseMove( event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onPointerUp( event ) {\r\n\r\n\t\t    removePointer( event );\r\n\r\n\t\t    if ( pointers.length === 0 ) {\r\n\r\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\r\n\r\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\r\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\r\n\r\n\t\t    }\r\n\r\n\t\t    scope.dispatchEvent( _endEvent );\r\n\r\n\t\t    state = STATE.NONE;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onPointerCancel( event ) {\r\n\r\n\t\t\tremovePointer( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseDown( event ) {\r\n\r\n\t\t\tlet mouseAction;\r\n\r\n\t\t\tswitch ( event.button ) {\r\n\r\n\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tmouseAction = - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( mouseAction ) {\r\n\r\n\t\t\t\tcase MOUSE.DOLLY:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownDolly( event );\r\n\r\n\t\t\t\t\tstate = STATE.DOLLY;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MOUSE.ROTATE:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MOUSE.PAN:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseMove( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tswitch ( state ) {\r\n\r\n\t\t\t\tcase STATE.ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMoveRotate( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.DOLLY:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMoveDolly( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.PAN:\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMovePan( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseWheel( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\thandleMouseWheel( event );\r\n\r\n\t\t\tscope.dispatchEvent( _endEvent );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onKeyDown( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\r\n\r\n\t\t\thandleKeyDown( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onTouchStart( event ) {\r\n\r\n\t\t\ttrackPointer( event );\r\n\r\n\t\t\tswitch ( pointers.length ) {\r\n\r\n\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\r\n\r\n\t\t\t\t\t\tcase TOUCH.ROTATE:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartRotate();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TOUCH.PAN:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartPan();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\r\n\r\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onTouchMove( event ) {\r\n\r\n\t\t\ttrackPointer( event );\r\n\r\n\t\t\tswitch ( state ) {\r\n\r\n\t\t\t\tcase STATE.TOUCH_ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveRotate( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_PAN:\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMovePan( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveDollyPan( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextMenu( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t}\r\n\r\n\t\tfunction addPointer( event ) {\r\n\r\n\t\t\tpointers.push( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction removePointer( event ) {\r\n\r\n\t\t\tdelete pointerPositions[ event.pointerId ];\r\n\r\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\r\n\r\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\r\n\r\n\t\t\t\t\tpointers.splice( i, 1 );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction trackPointer( event ) {\r\n\r\n\t\t\tlet position = pointerPositions[ event.pointerId ];\r\n\r\n\t\t\tif ( position === undefined ) {\r\n\r\n\t\t\t\tposition = new Vector2();\r\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.set( event.pageX, event.pageY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getSecondPointerPosition( event ) {\r\n\r\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\r\n\r\n\t\t\treturn pointerPositions[ pointer.pointerId ];\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\r\n\r\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\r\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\r\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\r\n\r\n\t\t// force an update at start\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// This set of controls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n// This is very similar to OrbitControls, another set of touch behavior\r\n//\r\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - left mouse, or arrow keys / touch: one-finger move\r\n\r\nclass MapControls extends OrbitControls {\r\n\r\n\tconstructor( object, domElement ) {\r\n\r\n\t\tsuper( object, domElement );\r\n\r\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\r\n\r\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\r\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\r\n\r\n\t\tthis.touches.ONE = TOUCH.PAN;\r\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { OrbitControls, MapControls };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}