{"ast":null,"code":"import _classCallCheck from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TempNode from './TempNode.js';\n\nvar ExpressionNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(ExpressionNode, _TempNode);\n\n  var _super = _createSuper(ExpressionNode);\n\n  function ExpressionNode() {\n    var _this;\n\n    var snipped = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var nodeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'void';\n\n    _classCallCheck(this, ExpressionNode);\n\n    _this = _super.call(this, nodeType);\n    _this.snipped = snipped;\n    return _this;\n  }\n\n  _createClass(ExpressionNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      var type = this.getNodeType(builder);\n      var snipped = this.snipped;\n\n      if (type === 'void') {\n        builder.addFlowCode(snipped);\n      } else {\n        return \"( \".concat(snipped, \" )\");\n      }\n    }\n  }]);\n\n  return ExpressionNode;\n}(TempNode);\n\nexport default ExpressionNode;","map":{"version":3,"names":["TempNode","ExpressionNode","snipped","nodeType","builder","type","getNodeType","addFlowCode"],"sources":["D:/Jord/l4fycy/node_modules/three-stdlib/nodes/core/ExpressionNode.js"],"sourcesContent":["import TempNode from './TempNode.js';\n\nclass ExpressionNode extends TempNode {\n  constructor(snipped = '', nodeType = 'void') {\n    super(nodeType);\n    this.snipped = snipped;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const snipped = this.snipped;\n\n    if (type === 'void') {\n      builder.addFlowCode(snipped);\n    } else {\n      return `( ${snipped} )`;\n    }\n  }\n\n}\n\nexport default ExpressionNode;\n"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,eAArB;;IAEMC,c;;;;;EACJ,0BAA6C;IAAA;;IAAA,IAAjCC,OAAiC,uEAAvB,EAAuB;IAAA,IAAnBC,QAAmB,uEAAR,MAAQ;;IAAA;;IAC3C,0BAAMA,QAAN;IACA,MAAKD,OAAL,GAAeA,OAAf;IAF2C;EAG5C;;;;WAED,kBAASE,OAAT,EAAkB;MAChB,IAAMC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,OAAjB,CAAb;MACA,IAAMF,OAAO,GAAG,KAAKA,OAArB;;MAEA,IAAIG,IAAI,KAAK,MAAb,EAAqB;QACnBD,OAAO,CAACG,WAAR,CAAoBL,OAApB;MACD,CAFD,MAEO;QACL,mBAAYA,OAAZ;MACD;IACF;;;;EAf0BF,Q;;AAmB7B,eAAeC,cAAf"},"metadata":{},"sourceType":"module"}