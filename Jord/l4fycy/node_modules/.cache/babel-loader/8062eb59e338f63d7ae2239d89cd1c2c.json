{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { BufferAttribute, BufferGeometry, Vector3, Vector4, Matrix4, Matrix3 } from 'three';\n\nvar _positionVector = /*@__PURE__*/new Vector3();\n\nvar _normalVector = /*@__PURE__*/new Vector3();\n\nvar _tangentVector = /*@__PURE__*/new Vector3();\n\nvar _tangentVector4 = /*@__PURE__*/new Vector4();\n\nvar _morphVector = /*@__PURE__*/new Vector3();\n\nvar _temp = /*@__PURE__*/new Vector3();\n\nvar _skinIndex = /*@__PURE__*/new Vector4();\n\nvar _skinWeight = /*@__PURE__*/new Vector4();\n\nvar _matrix = /*@__PURE__*/new Matrix4();\n\nvar _boneMatrix = /*@__PURE__*/new Matrix4(); // Confirms that the two provided attributes are compatible\n\n\nfunction validateAttributes(attr1, attr2) {\n  if (!attr1 && !attr2) {\n    return;\n  }\n\n  var sameCount = attr1.count === attr2.count;\n  var sameNormalized = attr1.normalized === attr2.normalized;\n  var sameType = attr1.array.constructor === attr2.array.constructor;\n  var sameItemSize = attr1.itemSize === attr2.itemSize;\n\n  if (!sameCount || !sameNormalized || !sameType || !sameItemSize) {\n    throw new Error();\n  }\n} // Clones the given attribute with a new compatible buffer attribute but no data\n\n\nfunction createAttributeClone(attr) {\n  var countOverride = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var cons = attr.array.constructor;\n  var normalized = attr.normalized;\n  var itemSize = attr.itemSize;\n  var count = countOverride === null ? attr.count : countOverride;\n  return new BufferAttribute(new cons(itemSize * count), itemSize, normalized);\n} // target offset is the number of elements in the target buffer stride to skip before copying the\n// attributes contents in to.\n\n\nfunction copyAttributeContents(attr, target) {\n  var targetOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (attr.isInterleavedBufferAttribute) {\n    var itemSize = attr.itemSize;\n\n    for (var i = 0, l = attr.count; i < l; i++) {\n      var io = i + targetOffset;\n      target.setX(io, attr.getX(i));\n      if (itemSize >= 2) target.setY(io, attr.getY(i));\n      if (itemSize >= 3) target.setZ(io, attr.getZ(i));\n      if (itemSize >= 4) target.setW(io, attr.getW(i));\n    }\n  } else {\n    var array = target.array;\n    var cons = array.constructor;\n    var byteOffset = array.BYTES_PER_ELEMENT * attr.itemSize * targetOffset;\n    var temp = new cons(array.buffer, byteOffset, attr.array.length);\n    temp.set(attr.array);\n  }\n} // Adds the \"matrix\" multiplied by \"scale\" to \"target\"\n\n\nfunction addScaledMatrix(target, matrix, scale) {\n  var targetArray = target.elements;\n  var matrixArray = matrix.elements;\n\n  for (var i = 0, l = matrixArray.length; i < l; i++) {\n    targetArray[i] += matrixArray[i] * scale;\n  }\n} // A version of \"SkinnedMesh.boneTransform\" for normals\n\n\nfunction boneNormalTransform(mesh, index, target) {\n  var skeleton = mesh.skeleton;\n  var geometry = mesh.geometry;\n  var bones = skeleton.bones;\n  var boneInverses = skeleton.boneInverses;\n\n  _skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n  _skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n  _matrix.elements.fill(0);\n\n  for (var i = 0; i < 4; i++) {\n    var weight = _skinWeight.getComponent(i);\n\n    if (weight !== 0) {\n      var boneIndex = _skinIndex.getComponent(i);\n\n      _boneMatrix.multiplyMatrices(bones[boneIndex].matrixWorld, boneInverses[boneIndex]);\n\n      addScaledMatrix(_matrix, _boneMatrix, weight);\n    }\n  }\n\n  _matrix.multiply(mesh.bindMatrix).premultiply(mesh.bindMatrixInverse);\n\n  target.transformDirection(_matrix);\n  return target;\n} // Applies the morph target data to the target vector\n\n\nfunction applyMorphTarget(morphData, morphInfluences, morphTargetsRelative, i, target) {\n  _morphVector.set(0, 0, 0);\n\n  for (var j = 0, jl = morphData.length; j < jl; j++) {\n    var influence = morphInfluences[j];\n    var morphAttribute = morphData[j];\n    if (influence === 0) continue;\n\n    _temp.fromBufferAttribute(morphAttribute, i);\n\n    if (morphTargetsRelative) {\n      _morphVector.addScaledVector(_temp, influence);\n    } else {\n      _morphVector.addScaledVector(_temp.sub(target), influence);\n    }\n  }\n\n  target.add(_morphVector);\n} // Modified version of BufferGeometryUtils.mergeBufferGeometries that ignores morph targets and updates a attributes in plac\n\n\nfunction mergeBufferGeometries(geometries) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    useGroups: false,\n    updateIndex: false\n  };\n  var targetGeometry = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new BufferGeometry();\n  var isIndexed = geometries[0].index !== null;\n  var useGroups = options.useGroups,\n      updateIndex = options.updateIndex;\n  var attributesUsed = new Set(Object.keys(geometries[0].attributes));\n  var attributes = {};\n  var offset = 0;\n\n  for (var i = 0; i < geometries.length; ++i) {\n    var geometry = geometries[i];\n    var attributesCount = 0; // ensure that all geometries are indexed, or none\n\n    if (isIndexed !== (geometry.index !== null)) {\n      throw new Error('StaticGeometryGenerator: All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.');\n    } // gather attributes, exit early if they're different\n\n\n    for (var name in geometry.attributes) {\n      if (!attributesUsed.has(name)) {\n        throw new Error('StaticGeometryGenerator: All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.');\n      }\n\n      if (attributes[name] === undefined) {\n        attributes[name] = [];\n      }\n\n      attributes[name].push(geometry.attributes[name]);\n      attributesCount++;\n    } // ensure geometries have the same number of attributes\n\n\n    if (attributesCount !== attributesUsed.size) {\n      throw new Error('StaticGeometryGenerator: Make sure all geometries have the same number of attributes.');\n    }\n\n    if (useGroups) {\n      var count = void 0;\n\n      if (isIndexed) {\n        count = geometry.index.count;\n      } else if (geometry.attributes.position !== undefined) {\n        count = geometry.attributes.position.count;\n      } else {\n        throw new Error('StaticGeometryGenerator: The geometry must have either an index or a position attribute');\n      }\n\n      targetGeometry.addGroup(offset, count, i);\n      offset += count;\n    }\n  } // merge indices\n\n\n  if (isIndexed) {\n    var forceUpateIndex = false;\n\n    if (!targetGeometry.index) {\n      var indexCount = 0;\n\n      for (var _i = 0; _i < geometries.length; ++_i) {\n        indexCount += geometries[_i].index.count;\n      }\n\n      targetGeometry.setIndex(new BufferAttribute(new Uint32Array(indexCount), 1, false));\n      forceUpateIndex = true;\n    }\n\n    if (updateIndex || forceUpateIndex) {\n      var targetIndex = targetGeometry.index;\n      var targetOffset = 0;\n      var indexOffset = 0;\n\n      for (var _i2 = 0; _i2 < geometries.length; ++_i2) {\n        var _geometry = geometries[_i2];\n        var index = _geometry.index;\n\n        for (var j = 0; j < index.count; ++j) {\n          targetIndex.setX(targetOffset, index.getX(j) + indexOffset);\n          targetOffset++;\n        }\n\n        indexOffset += _geometry.attributes.position.count;\n      }\n    }\n  } // merge attributes\n\n\n  for (var _name in attributes) {\n    var attrList = attributes[_name];\n\n    if (!(_name in targetGeometry.attributes)) {\n      var _count = 0;\n\n      for (var key in attrList) {\n        _count += attrList[key].count;\n      }\n\n      targetGeometry.setAttribute(_name, createAttributeClone(attributes[_name][0], _count));\n    }\n\n    var targetAttribute = targetGeometry.attributes[_name];\n    var _offset = 0;\n\n    for (var _key in attrList) {\n      var attr = attrList[_key];\n      copyAttributeContents(attr, targetAttribute, _offset);\n      _offset += attr.count;\n    }\n  }\n\n  return targetGeometry;\n}\n\nexport var StaticGeometryGenerator = /*#__PURE__*/function () {\n  function StaticGeometryGenerator(meshes) {\n    _classCallCheck(this, StaticGeometryGenerator);\n\n    if (!Array.isArray(meshes)) {\n      meshes = [meshes];\n    }\n\n    var finalMeshes = [];\n    meshes.forEach(function (object) {\n      object.traverse(function (c) {\n        if (c.isMesh) {\n          finalMeshes.push(c);\n        }\n      });\n    });\n    this.meshes = finalMeshes;\n    this.useGroups = true;\n    this.applyWorldTransforms = true;\n    this.attributes = ['position', 'normal', 'tangent', 'uv', 'uv2'];\n    this._intermediateGeometry = new Array(finalMeshes.length).fill().map(function () {\n      return new BufferGeometry();\n    });\n  }\n\n  _createClass(StaticGeometryGenerator, [{\n    key: \"getMaterials\",\n    value: function getMaterials() {\n      var materials = [];\n      this.meshes.forEach(function (mesh) {\n        if (Array.isArray(mesh.material)) {\n          materials.push.apply(materials, _toConsumableArray(mesh.material));\n        } else {\n          materials.push(mesh.material);\n        }\n      });\n      return materials;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate() {\n      var targetGeometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n      var meshes = this.meshes,\n          useGroups = this.useGroups,\n          _intermediateGeometry = this._intermediateGeometry;\n\n      for (var i = 0, l = meshes.length; i < l; i++) {\n        var mesh = meshes[i];\n        var geom = _intermediateGeometry[i];\n\n        this._convertToStaticGeometry(mesh, geom);\n      }\n\n      mergeBufferGeometries(_intermediateGeometry, {\n        useGroups: useGroups\n      }, targetGeometry);\n\n      for (var key in targetGeometry.attributes) {\n        targetGeometry.attributes[key].needsUpdate = true;\n      }\n\n      return targetGeometry;\n    }\n  }, {\n    key: \"_convertToStaticGeometry\",\n    value: function _convertToStaticGeometry(mesh) {\n      var targetGeometry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new BufferGeometry();\n      var geometry = mesh.geometry;\n      var applyWorldTransforms = this.applyWorldTransforms;\n      var includeNormal = this.attributes.includes('normal');\n      var includeTangent = this.attributes.includes('tangent');\n      var attributes = geometry.attributes;\n      var targetAttributes = targetGeometry.attributes; // initialize the attributes if they don't exist\n\n      if (!targetGeometry.index) {\n        targetGeometry.index = geometry.index;\n      }\n\n      if (!targetAttributes.position) {\n        targetGeometry.setAttribute('position', createAttributeClone(attributes.position));\n      }\n\n      if (includeNormal && !targetAttributes.normal && attributes.normal) {\n        targetGeometry.setAttribute('normal', createAttributeClone(attributes.normal));\n      }\n\n      if (includeTangent && !targetAttributes.tangent && attributes.tangent) {\n        targetGeometry.setAttribute('tangent', createAttributeClone(attributes.tangent));\n      } // ensure the attributes are consistent\n\n\n      validateAttributes(geometry.index, targetGeometry.index);\n      validateAttributes(attributes.position, targetAttributes.position);\n\n      if (includeNormal) {\n        validateAttributes(attributes.normal, targetAttributes.normal);\n      }\n\n      if (includeTangent) {\n        validateAttributes(attributes.tangent, targetAttributes.tangent);\n      } // generate transformed vertex attribute data\n\n\n      var position = attributes.position;\n      var normal = includeNormal ? attributes.normal : null;\n      var tangent = includeTangent ? attributes.tangent : null;\n      var morphPosition = geometry.morphAttributes.position;\n      var morphNormal = geometry.morphAttributes.normal;\n      var morphTangent = geometry.morphAttributes.tangent;\n      var morphTargetsRelative = geometry.morphTargetsRelative;\n      var morphInfluences = mesh.morphTargetInfluences;\n      var normalMatrix = new Matrix3();\n      normalMatrix.getNormalMatrix(mesh.matrixWorld);\n\n      for (var i = 0, l = attributes.position.count; i < l; i++) {\n        _positionVector.fromBufferAttribute(position, i);\n\n        if (normal) {\n          _normalVector.fromBufferAttribute(normal, i);\n        }\n\n        if (tangent) {\n          _tangentVector4.fromBufferAttribute(tangent, i);\n\n          _tangentVector.fromBufferAttribute(tangent, i);\n        } // apply morph target transform\n\n\n        if (morphInfluences) {\n          if (morphPosition) {\n            applyMorphTarget(morphPosition, morphInfluences, morphTargetsRelative, i, _positionVector);\n          }\n\n          if (morphNormal) {\n            applyMorphTarget(morphNormal, morphInfluences, morphTargetsRelative, i, _normalVector);\n          }\n\n          if (morphTangent) {\n            applyMorphTarget(morphTangent, morphInfluences, morphTargetsRelative, i, _tangentVector);\n          }\n        } // apply bone transform\n\n\n        if (mesh.isSkinnedMesh) {\n          mesh.boneTransform(i, _positionVector);\n\n          if (normal) {\n            boneNormalTransform(mesh, i, _normalVector);\n          }\n\n          if (tangent) {\n            boneNormalTransform(mesh, i, _tangentVector);\n          }\n        } // update the vectors of the attributes\n\n\n        if (applyWorldTransforms) {\n          _positionVector.applyMatrix4(mesh.matrixWorld);\n        }\n\n        targetAttributes.position.setXYZ(i, _positionVector.x, _positionVector.y, _positionVector.z);\n\n        if (normal) {\n          if (applyWorldTransforms) {\n            _normalVector.applyNormalMatrix(normalMatrix);\n          }\n\n          targetAttributes.normal.setXYZ(i, _normalVector.x, _normalVector.y, _normalVector.z);\n        }\n\n        if (tangent) {\n          if (applyWorldTransforms) {\n            _tangentVector.transformDirection(mesh.matrixWorld);\n          }\n\n          targetAttributes.tangent.setXYZW(i, _tangentVector.x, _tangentVector.y, _tangentVector.z, _tangentVector4.w);\n        }\n      } // copy other attributes over\n\n\n      for (var _i3 in this.attributes) {\n        var key = this.attributes[_i3];\n\n        if (key === 'position' || key === 'tangent' || key === 'normal' || !(key in attributes)) {\n          continue;\n        }\n\n        if (!targetAttributes[key]) {\n          targetGeometry.setAttribute(key, createAttributeClone(attributes[key]));\n        }\n\n        validateAttributes(attributes[key], targetAttributes[key]);\n        copyAttributeContents(attributes[key], targetAttributes[key]);\n      }\n\n      return targetGeometry;\n    }\n  }]);\n\n  return StaticGeometryGenerator;\n}();","map":{"version":3,"names":["BufferAttribute","BufferGeometry","Vector3","Vector4","Matrix4","Matrix3","_positionVector","_normalVector","_tangentVector","_tangentVector4","_morphVector","_temp","_skinIndex","_skinWeight","_matrix","_boneMatrix","validateAttributes","attr1","attr2","sameCount","count","sameNormalized","normalized","sameType","array","constructor","sameItemSize","itemSize","Error","createAttributeClone","attr","countOverride","cons","copyAttributeContents","target","targetOffset","isInterleavedBufferAttribute","i","l","io","setX","getX","setY","getY","setZ","getZ","setW","getW","byteOffset","BYTES_PER_ELEMENT","temp","buffer","length","set","addScaledMatrix","matrix","scale","targetArray","elements","matrixArray","boneNormalTransform","mesh","index","skeleton","geometry","bones","boneInverses","fromBufferAttribute","attributes","skinIndex","skinWeight","fill","weight","getComponent","boneIndex","multiplyMatrices","matrixWorld","multiply","bindMatrix","premultiply","bindMatrixInverse","transformDirection","applyMorphTarget","morphData","morphInfluences","morphTargetsRelative","j","jl","influence","morphAttribute","addScaledVector","sub","add","mergeBufferGeometries","geometries","options","useGroups","updateIndex","targetGeometry","isIndexed","attributesUsed","Set","Object","keys","offset","attributesCount","name","has","undefined","push","size","position","addGroup","forceUpateIndex","indexCount","setIndex","Uint32Array","targetIndex","indexOffset","attrList","key","setAttribute","targetAttribute","StaticGeometryGenerator","meshes","Array","isArray","finalMeshes","forEach","object","traverse","c","isMesh","applyWorldTransforms","_intermediateGeometry","map","materials","material","geom","_convertToStaticGeometry","needsUpdate","includeNormal","includes","includeTangent","targetAttributes","normal","tangent","morphPosition","morphAttributes","morphNormal","morphTangent","morphTargetInfluences","normalMatrix","getNormalMatrix","isSkinnedMesh","boneTransform","applyMatrix4","setXYZ","x","y","z","applyNormalMatrix","setXYZW","w"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/three-mesh-bvh/src/utils/StaticGeometryGenerator.js"],"sourcesContent":["import { BufferAttribute, BufferGeometry, Vector3, Vector4, Matrix4, Matrix3 } from 'three';\r\n\r\nconst _positionVector = /*@__PURE__*/ new Vector3();\r\nconst _normalVector = /*@__PURE__*/ new Vector3();\r\nconst _tangentVector = /*@__PURE__*/ new Vector3();\r\nconst _tangentVector4 = /*@__PURE__*/ new Vector4();\r\n\r\nconst _morphVector = /*@__PURE__*/ new Vector3();\r\nconst _temp = /*@__PURE__*/ new Vector3();\r\n\r\nconst _skinIndex = /*@__PURE__*/ new Vector4();\r\nconst _skinWeight = /*@__PURE__*/ new Vector4();\r\nconst _matrix = /*@__PURE__*/ new Matrix4();\r\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n// Confirms that the two provided attributes are compatible\r\nfunction validateAttributes( attr1, attr2 ) {\r\n\r\n\tif ( ! attr1 && ! attr2 ) {\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tconst sameCount = attr1.count === attr2.count;\r\n\tconst sameNormalized = attr1.normalized === attr2.normalized;\r\n\tconst sameType = attr1.array.constructor === attr2.array.constructor;\r\n\tconst sameItemSize = attr1.itemSize === attr2.itemSize;\r\n\r\n\tif ( ! sameCount || ! sameNormalized || ! sameType || ! sameItemSize ) {\r\n\r\n\t\tthrow new Error();\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Clones the given attribute with a new compatible buffer attribute but no data\r\nfunction createAttributeClone( attr, countOverride = null ) {\r\n\r\n\tconst cons = attr.array.constructor;\r\n\tconst normalized = attr.normalized;\r\n\tconst itemSize = attr.itemSize;\r\n\tconst count = countOverride === null ? attr.count : countOverride;\r\n\r\n\treturn new BufferAttribute( new cons( itemSize * count ), itemSize, normalized );\r\n\r\n}\r\n\r\n// target offset is the number of elements in the target buffer stride to skip before copying the\r\n// attributes contents in to.\r\nfunction copyAttributeContents( attr, target, targetOffset = 0 ) {\r\n\r\n\tif ( attr.isInterleavedBufferAttribute ) {\r\n\r\n\t\tconst itemSize = attr.itemSize;\r\n\t\tfor ( let i = 0, l = attr.count; i < l; i ++ ) {\r\n\r\n\t\t\tconst io = i + targetOffset;\r\n\t\t\ttarget.setX( io, attr.getX( i ) );\r\n\t\t\tif ( itemSize >= 2 ) target.setY( io, attr.getY( i ) );\r\n\t\t\tif ( itemSize >= 3 ) target.setZ( io, attr.getZ( i ) );\r\n\t\t\tif ( itemSize >= 4 ) target.setW( io, attr.getW( i ) );\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tconst array = target.array;\r\n\t\tconst cons = array.constructor;\r\n\t\tconst byteOffset = array.BYTES_PER_ELEMENT * attr.itemSize * targetOffset;\r\n\t\tconst temp = new cons( array.buffer, byteOffset, attr.array.length );\r\n\t\ttemp.set( attr.array );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Adds the \"matrix\" multiplied by \"scale\" to \"target\"\r\nfunction addScaledMatrix( target, matrix, scale ) {\r\n\r\n\tconst targetArray = target.elements;\r\n\tconst matrixArray = matrix.elements;\r\n\tfor ( let i = 0, l = matrixArray.length; i < l; i ++ ) {\r\n\r\n\t\ttargetArray[ i ] += matrixArray[ i ] * scale;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// A version of \"SkinnedMesh.boneTransform\" for normals\r\nfunction boneNormalTransform( mesh, index, target ) {\r\n\r\n\tconst skeleton = mesh.skeleton;\r\n\tconst geometry = mesh.geometry;\r\n\tconst bones = skeleton.bones;\r\n\tconst boneInverses = skeleton.boneInverses;\r\n\r\n\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\r\n\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\r\n\r\n\t_matrix.elements.fill( 0 );\r\n\r\n\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\tconst weight = _skinWeight.getComponent( i );\r\n\r\n\t\tif ( weight !== 0 ) {\r\n\r\n\t\t\tconst boneIndex = _skinIndex.getComponent( i );\r\n\t\t\t_boneMatrix.multiplyMatrices( bones[ boneIndex ].matrixWorld, boneInverses[ boneIndex ] );\r\n\r\n\t\t\taddScaledMatrix( _matrix, _boneMatrix, weight );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_matrix.multiply( mesh.bindMatrix ).premultiply( mesh.bindMatrixInverse );\r\n\ttarget.transformDirection( _matrix );\r\n\r\n\treturn target;\r\n\r\n}\r\n\r\n// Applies the morph target data to the target vector\r\nfunction applyMorphTarget( morphData, morphInfluences, morphTargetsRelative, i, target ) {\r\n\r\n\t_morphVector.set( 0, 0, 0 );\r\n\tfor ( let j = 0, jl = morphData.length; j < jl; j ++ ) {\r\n\r\n\t\tconst influence = morphInfluences[ j ];\r\n\t\tconst morphAttribute = morphData[ j ];\r\n\r\n\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t_temp.fromBufferAttribute( morphAttribute, i );\r\n\r\n\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t_morphVector.addScaledVector( _temp, influence );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_morphVector.addScaledVector( _temp.sub( target ), influence );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttarget.add( _morphVector );\r\n\r\n}\r\n\r\n// Modified version of BufferGeometryUtils.mergeBufferGeometries that ignores morph targets and updates a attributes in plac\r\nfunction mergeBufferGeometries( geometries, options = { useGroups: false, updateIndex: false }, targetGeometry = new BufferGeometry() ) {\r\n\r\n\tconst isIndexed = geometries[ 0 ].index !== null;\r\n\tconst { useGroups, updateIndex } = options;\r\n\r\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\r\n\tconst attributes = {};\r\n\r\n\tlet offset = 0;\r\n\r\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\r\n\r\n\t\tconst geometry = geometries[ i ];\r\n\t\tlet attributesCount = 0;\r\n\r\n\t\t// ensure that all geometries are indexed, or none\r\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\r\n\r\n\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\r\n\r\n\t\t}\r\n\r\n\t\t// gather attributes, exit early if they're different\r\n\t\tfor ( const name in geometry.attributes ) {\r\n\r\n\t\t\tif ( ! attributesUsed.has( name ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributes[ name ] === undefined ) {\r\n\r\n\t\t\t\tattributes[ name ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\r\n\t\t\tattributesCount ++;\r\n\r\n\t\t}\r\n\r\n\t\t// ensure geometries have the same number of attributes\r\n\t\tif ( attributesCount !== attributesUsed.size ) {\r\n\r\n\t\t\tthrow new Error( 'StaticGeometryGenerator: Make sure all geometries have the same number of attributes.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( useGroups ) {\r\n\r\n\t\t\tlet count;\r\n\t\t\tif ( isIndexed ) {\r\n\r\n\t\t\t\tcount = geometry.index.count;\r\n\r\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\r\n\r\n\t\t\t\tcount = geometry.attributes.position.count;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: The geometry must have either an index or a position attribute' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttargetGeometry.addGroup( offset, count, i );\r\n\t\t\toffset += count;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// merge indices\r\n\tif ( isIndexed ) {\r\n\r\n\t\tlet forceUpateIndex = false;\r\n\t\tif ( ! targetGeometry.index ) {\r\n\r\n\t\t\tlet indexCount = 0;\r\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\r\n\r\n\t\t\t\tindexCount += geometries[ i ].index.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttargetGeometry.setIndex( new BufferAttribute( new Uint32Array( indexCount ), 1, false ) );\r\n\t\t\tforceUpateIndex = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateIndex || forceUpateIndex ) {\r\n\r\n\t\t\tconst targetIndex = targetGeometry.index;\r\n\t\t\tlet targetOffset = 0;\r\n\t\t\tlet indexOffset = 0;\r\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\r\n\r\n\t\t\t\tconst geometry = geometries[ i ];\r\n\t\t\t\tconst index = geometry.index;\r\n\t\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\r\n\r\n\t\t\t\t\ttargetIndex.setX( targetOffset, index.getX( j ) + indexOffset );\r\n\t\t\t\t\ttargetOffset ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindexOffset += geometry.attributes.position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// merge attributes\r\n\tfor ( const name in attributes ) {\r\n\r\n\t\tconst attrList = attributes[ name ];\r\n\t\tif ( ! ( name in targetGeometry.attributes ) ) {\r\n\r\n\t\t\tlet count = 0;\r\n\t\t\tfor ( const key in attrList ) {\r\n\r\n\t\t\t\tcount += attrList[ key ].count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttargetGeometry.setAttribute( name, createAttributeClone( attributes[ name ][ 0 ], count ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst targetAttribute = targetGeometry.attributes[ name ];\r\n\t\tlet offset = 0;\r\n\t\tfor ( const key in attrList ) {\r\n\r\n\t\t\tconst attr = attrList[ key ];\r\n\t\t\tcopyAttributeContents( attr, targetAttribute, offset );\r\n\t\t\toffset += attr.count;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn targetGeometry;\r\n\r\n}\r\n\r\nexport class StaticGeometryGenerator {\r\n\r\n\tconstructor( meshes ) {\r\n\r\n\t\tif ( ! Array.isArray( meshes ) ) {\r\n\r\n\t\t\tmeshes = [ meshes ];\r\n\r\n\t\t}\r\n\r\n\t\tconst finalMeshes = [];\r\n\t\tmeshes.forEach( object => {\r\n\r\n\t\t\tobject.traverse( c => {\r\n\r\n\t\t\t\tif ( c.isMesh ) {\r\n\r\n\t\t\t\t\tfinalMeshes.push( c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.meshes = finalMeshes;\r\n\t\tthis.useGroups = true;\r\n\t\tthis.applyWorldTransforms = true;\r\n\t\tthis.attributes = [ 'position', 'normal', 'tangent', 'uv', 'uv2' ];\r\n\t\tthis._intermediateGeometry = new Array( finalMeshes.length ).fill().map( () => new BufferGeometry() );\r\n\r\n\t}\r\n\r\n\tgetMaterials() {\r\n\r\n\t\tconst materials = [];\r\n\t\tthis.meshes.forEach( mesh => {\r\n\r\n\t\t\tif ( Array.isArray( mesh.material ) ) {\r\n\r\n\t\t\t\tmaterials.push( ...mesh.material );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterials.push( mesh.material );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tgenerate( targetGeometry = new BufferGeometry() ) {\r\n\r\n\t\tconst { meshes, useGroups, _intermediateGeometry } = this;\r\n\t\tfor ( let i = 0, l = meshes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst mesh = meshes[ i ];\r\n\t\t\tconst geom = _intermediateGeometry[ i ];\r\n\t\t\tthis._convertToStaticGeometry( mesh, geom );\r\n\r\n\t\t}\r\n\r\n\t\tmergeBufferGeometries( _intermediateGeometry, { useGroups }, targetGeometry );\r\n\t\tfor ( const key in targetGeometry.attributes ) {\r\n\r\n\t\t\ttargetGeometry.attributes[ key ].needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\treturn targetGeometry;\r\n\r\n\t}\r\n\r\n\t_convertToStaticGeometry( mesh, targetGeometry = new BufferGeometry() ) {\r\n\r\n\t\tconst geometry = mesh.geometry;\r\n\t\tconst applyWorldTransforms = this.applyWorldTransforms;\r\n\t\tconst includeNormal = this.attributes.includes( 'normal' );\r\n\t\tconst includeTangent = this.attributes.includes( 'tangent' );\r\n\t\tconst attributes = geometry.attributes;\r\n\t\tconst targetAttributes = targetGeometry.attributes;\r\n\r\n\t\t// initialize the attributes if they don't exist\r\n\t\tif ( ! targetGeometry.index ) {\r\n\r\n\t\t\ttargetGeometry.index = geometry.index;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! targetAttributes.position ) {\r\n\r\n\t\t\ttargetGeometry.setAttribute( 'position', createAttributeClone( attributes.position ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeNormal && ! targetAttributes.normal && attributes.normal ) {\r\n\r\n\t\t\ttargetGeometry.setAttribute( 'normal', createAttributeClone( attributes.normal ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeTangent && ! targetAttributes.tangent && attributes.tangent ) {\r\n\r\n\t\t\ttargetGeometry.setAttribute( 'tangent', createAttributeClone( attributes.tangent ) );\r\n\r\n\t\t}\r\n\r\n\t\t// ensure the attributes are consistent\r\n\t\tvalidateAttributes( geometry.index, targetGeometry.index );\r\n\t\tvalidateAttributes( attributes.position, targetAttributes.position );\r\n\r\n\t\tif ( includeNormal ) {\r\n\r\n\t\t\tvalidateAttributes( attributes.normal, targetAttributes.normal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeTangent ) {\r\n\r\n\t\t\tvalidateAttributes( attributes.tangent, targetAttributes.tangent );\r\n\r\n\t\t}\r\n\r\n\t\t// generate transformed vertex attribute data\r\n\t\tconst position = attributes.position;\r\n\t\tconst normal = includeNormal ? attributes.normal : null;\r\n\t\tconst tangent = includeTangent ? attributes.tangent : null;\r\n\t\tconst morphPosition = geometry.morphAttributes.position;\r\n\t\tconst morphNormal = geometry.morphAttributes.normal;\r\n\t\tconst morphTangent = geometry.morphAttributes.tangent;\r\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\r\n\t\tconst morphInfluences = mesh.morphTargetInfluences;\r\n\t\tconst normalMatrix = new Matrix3();\r\n\t\tnormalMatrix.getNormalMatrix( mesh.matrixWorld );\r\n\r\n\t\tfor ( let i = 0, l = attributes.position.count; i < l; i ++ ) {\r\n\r\n\t\t\t_positionVector.fromBufferAttribute( position, i );\r\n\t\t\tif ( normal ) {\r\n\r\n\t\t\t\t_normalVector.fromBufferAttribute( normal, i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tangent ) {\r\n\r\n\t\t\t\t_tangentVector4.fromBufferAttribute( tangent, i );\r\n\t\t\t\t_tangentVector.fromBufferAttribute( tangent, i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// apply morph target transform\r\n\t\t\tif ( morphInfluences ) {\r\n\r\n\t\t\t\tif ( morphPosition ) {\r\n\r\n\t\t\t\t\tapplyMorphTarget( morphPosition, morphInfluences, morphTargetsRelative, i, _positionVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( morphNormal ) {\r\n\r\n\t\t\t\t\tapplyMorphTarget( morphNormal, morphInfluences, morphTargetsRelative, i, _normalVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( morphTangent ) {\r\n\r\n\t\t\t\t\tapplyMorphTarget( morphTangent, morphInfluences, morphTargetsRelative, i, _tangentVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// apply bone transform\r\n\t\t\tif ( mesh.isSkinnedMesh ) {\r\n\r\n\t\t\t\tmesh.boneTransform( i, _positionVector );\r\n\t\t\t\tif ( normal ) {\r\n\r\n\t\t\t\t\tboneNormalTransform( mesh, i, _normalVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( tangent ) {\r\n\r\n\t\t\t\t\tboneNormalTransform( mesh, i, _tangentVector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update the vectors of the attributes\r\n\t\t\tif ( applyWorldTransforms ) {\r\n\r\n\t\t\t\t_positionVector.applyMatrix4( mesh.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttargetAttributes.position.setXYZ( i, _positionVector.x, _positionVector.y, _positionVector.z );\r\n\r\n\t\t\tif ( normal ) {\r\n\r\n\t\t\t\tif ( applyWorldTransforms ) {\r\n\r\n\t\t\t\t\t_normalVector.applyNormalMatrix( normalMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetAttributes.normal.setXYZ( i, _normalVector.x, _normalVector.y, _normalVector.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tangent ) {\r\n\r\n\t\t\t\tif ( applyWorldTransforms ) {\r\n\r\n\t\t\t\t\t_tangentVector.transformDirection( mesh.matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetAttributes.tangent.setXYZW( i, _tangentVector.x, _tangentVector.y, _tangentVector.z, _tangentVector4.w );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// copy other attributes over\r\n\t\tfor ( const i in this.attributes ) {\r\n\r\n\t\t\tconst key = this.attributes[ i ];\r\n\t\t\tif ( key === 'position' || key === 'tangent' || key === 'normal' || ! ( key in attributes ) ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! targetAttributes[ key ] ) {\r\n\r\n\t\t\t\ttargetGeometry.setAttribute( key, createAttributeClone( attributes[ key ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvalidateAttributes( attributes[ key ], targetAttributes[ key ] );\r\n\t\t\tcopyAttributeContents( attributes[ key ], targetAttributes[ key ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn targetGeometry;\r\n\r\n\t}\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}