{"ast":null,"code":"import _classCallCheck from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from 'three';\n\nvar _matrix = new Matrix4();\n\nvar _vector = new Vector3();\n\nvar XRHandPrimitiveModel = /*#__PURE__*/function () {\n  function XRHandPrimitiveModel(handModel, controller, path, handedness, options) {\n    _classCallCheck(this, XRHandPrimitiveModel);\n\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    var geometry;\n\n    if (!options || !options.primitive || options.primitive === 'sphere') {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === 'box') {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n\n    var material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage); // will be updated every frame\n\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n  }\n\n  _createClass(XRHandPrimitiveModel, [{\n    key: \"updateMesh\",\n    value: function updateMesh() {\n      var defaultRadius = 0.008;\n      var joints = this.controller.joints;\n      var count = 0;\n\n      for (var i = 0; i < this.joints.length; i++) {\n        var joint = joints[this.joints[i]];\n\n        if (joint.visible) {\n          _vector.setScalar(joint.jointRadius || defaultRadius);\n\n          _matrix.compose(joint.position, joint.quaternion, _vector);\n\n          this.handMesh.setMatrixAt(i, _matrix);\n          count++;\n        }\n      }\n\n      this.handMesh.count = count;\n      this.handMesh.instanceMatrix.needsUpdate = true;\n    }\n  }]);\n\n  return XRHandPrimitiveModel;\n}();\n\nexport { XRHandPrimitiveModel };","map":{"version":3,"names":["Matrix4","Vector3","SphereGeometry","BoxGeometry","MeshStandardMaterial","InstancedMesh","DynamicDrawUsage","_matrix","_vector","XRHandPrimitiveModel","handModel","controller","path","handedness","options","envMap","geometry","primitive","material","handMesh","instanceMatrix","setUsage","castShadow","receiveShadow","add","joints","defaultRadius","count","i","length","joint","visible","setScalar","jointRadius","compose","position","quaternion","setMatrixAt","needsUpdate"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/webxr/XRHandPrimitiveModel.js"],"sourcesContent":["import { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from 'three';\r\n\r\nconst _matrix = new Matrix4();\r\n\r\nconst _vector = new Vector3();\r\n\r\nclass XRHandPrimitiveModel {\r\n  constructor(handModel, controller, path, handedness, options) {\r\n    this.controller = controller;\r\n    this.handModel = handModel;\r\n    this.envMap = null;\r\n    let geometry;\r\n\r\n    if (!options || !options.primitive || options.primitive === 'sphere') {\r\n      geometry = new SphereGeometry(1, 10, 10);\r\n    } else if (options.primitive === 'box') {\r\n      geometry = new BoxGeometry(1, 1, 1);\r\n    }\r\n\r\n    const material = new MeshStandardMaterial();\r\n    this.handMesh = new InstancedMesh(geometry, material, 30);\r\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage); // will be updated every frame\r\n\r\n    this.handMesh.castShadow = true;\r\n    this.handMesh.receiveShadow = true;\r\n    this.handModel.add(this.handMesh);\r\n    this.joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\r\n  }\r\n\r\n  updateMesh() {\r\n    const defaultRadius = 0.008;\r\n    const joints = this.controller.joints;\r\n    let count = 0;\r\n\r\n    for (let i = 0; i < this.joints.length; i++) {\r\n      const joint = joints[this.joints[i]];\r\n\r\n      if (joint.visible) {\r\n        _vector.setScalar(joint.jointRadius || defaultRadius);\r\n\r\n        _matrix.compose(joint.position, joint.quaternion, _vector);\r\n\r\n        this.handMesh.setMatrixAt(i, _matrix);\r\n        count++;\r\n      }\r\n    }\r\n\r\n    this.handMesh.count = count;\r\n    this.handMesh.instanceMatrix.needsUpdate = true;\r\n  }\r\n\r\n}\r\n\r\nexport { XRHandPrimitiveModel };\r\n"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,OAAlB,EAA2BC,cAA3B,EAA2CC,WAA3C,EAAwDC,oBAAxD,EAA8EC,aAA9E,EAA6FC,gBAA7F,QAAqH,OAArH;;AAEA,IAAMC,OAAO,GAAG,IAAIP,OAAJ,EAAhB;;AAEA,IAAMQ,OAAO,GAAG,IAAIP,OAAJ,EAAhB;;IAEMQ,oB;EACJ,8BAAYC,SAAZ,EAAuBC,UAAvB,EAAmCC,IAAnC,EAAyCC,UAAzC,EAAqDC,OAArD,EAA8D;IAAA;;IAC5D,KAAKH,UAAL,GAAkBA,UAAlB;IACA,KAAKD,SAAL,GAAiBA,SAAjB;IACA,KAAKK,MAAL,GAAc,IAAd;IACA,IAAIC,QAAJ;;IAEA,IAAI,CAACF,OAAD,IAAY,CAACA,OAAO,CAACG,SAArB,IAAkCH,OAAO,CAACG,SAAR,KAAsB,QAA5D,EAAsE;MACpED,QAAQ,GAAG,IAAId,cAAJ,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,CAAX;IACD,CAFD,MAEO,IAAIY,OAAO,CAACG,SAAR,KAAsB,KAA1B,EAAiC;MACtCD,QAAQ,GAAG,IAAIb,WAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAX;IACD;;IAED,IAAMe,QAAQ,GAAG,IAAId,oBAAJ,EAAjB;IACA,KAAKe,QAAL,GAAgB,IAAId,aAAJ,CAAkBW,QAAlB,EAA4BE,QAA5B,EAAsC,EAAtC,CAAhB;IACA,KAAKC,QAAL,CAAcC,cAAd,CAA6BC,QAA7B,CAAsCf,gBAAtC,EAd4D,CAcH;;IAEzD,KAAKa,QAAL,CAAcG,UAAd,GAA2B,IAA3B;IACA,KAAKH,QAAL,CAAcI,aAAd,GAA8B,IAA9B;IACA,KAAKb,SAAL,CAAec,GAAf,CAAmB,KAAKL,QAAxB;IACA,KAAKM,MAAL,GAAc,CAAC,OAAD,EAAU,kBAAV,EAA8B,wBAA9B,EAAwD,sBAAxD,EAAgF,WAAhF,EAA6F,yBAA7F,EAAwH,+BAAxH,EAAyJ,mCAAzJ,EAA8L,6BAA9L,EAA6N,kBAA7N,EAAiP,0BAAjP,EAA6Q,gCAA7Q,EAA+S,oCAA/S,EAAqV,8BAArV,EAAqX,mBAArX,EAA0Y,wBAA1Y,EAAoa,8BAApa,EAAoc,kCAApc,EAAwe,4BAAxe,EAAsgB,iBAAtgB,EAAyhB,yBAAzhB,EAAojB,+BAApjB,EAAqlB,mCAArlB,EAA0nB,6BAA1nB,EAAypB,kBAAzpB,CAAd;EACD;;;;WAED,sBAAa;MACX,IAAMC,aAAa,GAAG,KAAtB;MACA,IAAMD,MAAM,GAAG,KAAKd,UAAL,CAAgBc,MAA/B;MACA,IAAIE,KAAK,GAAG,CAAZ;;MAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,MAAL,CAAYI,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;QAC3C,IAAME,KAAK,GAAGL,MAAM,CAAC,KAAKA,MAAL,CAAYG,CAAZ,CAAD,CAApB;;QAEA,IAAIE,KAAK,CAACC,OAAV,EAAmB;UACjBvB,OAAO,CAACwB,SAAR,CAAkBF,KAAK,CAACG,WAAN,IAAqBP,aAAvC;;UAEAnB,OAAO,CAAC2B,OAAR,CAAgBJ,KAAK,CAACK,QAAtB,EAAgCL,KAAK,CAACM,UAAtC,EAAkD5B,OAAlD;;UAEA,KAAKW,QAAL,CAAckB,WAAd,CAA0BT,CAA1B,EAA6BrB,OAA7B;UACAoB,KAAK;QACN;MACF;;MAED,KAAKR,QAAL,CAAcQ,KAAd,GAAsBA,KAAtB;MACA,KAAKR,QAAL,CAAcC,cAAd,CAA6BkB,WAA7B,GAA2C,IAA3C;IACD;;;;;;AAIH,SAAS7B,oBAAT"},"metadata":{},"sourceType":"module"}