{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { NodeUpdateType } from './constants.js';\nimport { getNodesKeys } from './NodeUtils.js';\nimport { MathUtils } from 'three';\nvar _nodeId = 0;\n\nvar Node = /*#__PURE__*/function () {\n  function Node() {\n    var nodeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, Node);\n\n    this.nodeType = nodeType;\n    this.updateType = NodeUpdateType.None;\n    this.uuid = MathUtils.generateUUID();\n    Object.defineProperty(this, 'id', {\n      value: _nodeId++\n    });\n  }\n\n  _createClass(Node, [{\n    key: \"type\",\n    get: function get() {\n      return this.constructor.name;\n    }\n  }, {\n    key: \"getHash\",\n    value: function getHash() {\n      return this.uuid;\n    }\n  }, {\n    key: \"getUpdateType\",\n    value: function getUpdateType() {\n      return this.updateType;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType() {\n      return this.nodeType;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      console.warn('Abstract function.');\n    }\n  }, {\n    key: \"generate\",\n    value: function generate() {\n      console.warn('Abstract function.');\n    }\n  }, {\n    key: \"analyze\",\n    value: function analyze(builder) {\n      var hash = this.getHash(builder);\n      var sharedNode = builder.getNodeFromHash(hash);\n\n      if (sharedNode !== undefined && this !== sharedNode) {\n        return sharedNode.analyze(builder);\n      }\n\n      var nodeData = builder.getDataFromNode(this);\n      nodeData.dependenciesCount = nodeData.dependenciesCount === undefined ? 1 : nodeData.dependenciesCount + 1;\n      var nodeKeys = getNodesKeys(this);\n\n      var _iterator = _createForOfIteratorHelper(nodeKeys),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var property = _step.value;\n          this[property].analyze(builder);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"build\",\n    value: function build(builder) {\n      var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var hash = this.getHash(builder);\n      var sharedNode = builder.getNodeFromHash(hash);\n\n      if (sharedNode !== undefined && this !== sharedNode) {\n        return sharedNode.build(builder, output);\n      }\n\n      builder.addNode(this);\n      builder.addStack(this);\n      var nodeData = builder.getDataFromNode(this);\n      var isGenerateOnce = this.generate.length === 1;\n      var snippet = null;\n\n      if (isGenerateOnce) {\n        var type = this.getNodeType(builder);\n        snippet = nodeData.snippet;\n\n        if (snippet === undefined) {\n          snippet = this.generate(builder) || '';\n          nodeData.snippet = snippet;\n        }\n\n        snippet = builder.format(snippet, type, output);\n      } else {\n        snippet = this.generate(builder, output) || '';\n      }\n\n      builder.removeStack(this);\n      return snippet;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(json) {\n      var nodeKeys = getNodesKeys(this);\n\n      if (nodeKeys.length > 0) {\n        var inputNodes = {};\n\n        var _iterator2 = _createForOfIteratorHelper(nodeKeys),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var property = _step2.value;\n            inputNodes[property] = this[property].toJSON(json.meta).uuid;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        json.inputNodes = inputNodes;\n      }\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(json) {\n      if (json.inputNodes !== undefined) {\n        var nodes = json.meta.nodes;\n\n        for (var property in json.inputNodes) {\n          var uuid = json.inputNodes[property];\n          this[property] = nodes[uuid];\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var uuid = this.uuid,\n          type = this.type;\n      var isRoot = meta === undefined || typeof meta === 'string';\n\n      if (isRoot) {\n        meta = {\n          textures: {},\n          images: {},\n          nodes: {}\n        };\n      } // serialize\n\n\n      var data = meta.nodes[uuid];\n\n      if (data === undefined) {\n        data = {\n          uuid: uuid,\n          type: type,\n          meta: meta,\n          metadata: {\n            version: 4.5,\n            type: 'Node',\n            generator: 'Node.toJSON'\n          }\n        };\n        meta.nodes[data.uuid] = data;\n        this.serialize(data);\n        delete data.meta;\n      } // TODO: Copied from Object3D.toJSON\n\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var _data = cache[key];\n          delete _data.metadata;\n          values.push(_data);\n        }\n\n        return values;\n      }\n\n      if (isRoot) {\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        var nodes = extractFromCache(meta.nodes);\n        if (textures.length > 0) data.textures = textures;\n        if (images.length > 0) data.images = images;\n        if (nodes.length > 0) data.nodes = nodes;\n      }\n\n      return data;\n    }\n  }]);\n\n  return Node;\n}();\n\nNode.prototype.isNode = true;\nexport default Node;","map":{"version":3,"names":["NodeUpdateType","getNodesKeys","MathUtils","_nodeId","Node","nodeType","updateType","None","uuid","generateUUID","Object","defineProperty","value","constructor","name","console","warn","builder","hash","getHash","sharedNode","getNodeFromHash","undefined","analyze","nodeData","getDataFromNode","dependenciesCount","nodeKeys","property","output","build","addNode","addStack","isGenerateOnce","generate","length","snippet","type","getNodeType","format","removeStack","json","inputNodes","toJSON","meta","nodes","isRoot","textures","images","data","metadata","version","generator","serialize","extractFromCache","cache","values","key","push","prototype","isNode"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/nodes/core/Node.js"],"sourcesContent":["import { NodeUpdateType } from './constants.js';\r\nimport { getNodesKeys } from './NodeUtils.js';\r\nimport { MathUtils } from 'three';\r\n\r\nlet _nodeId = 0;\r\n\r\nclass Node {\r\n  constructor(nodeType = null) {\r\n    this.nodeType = nodeType;\r\n    this.updateType = NodeUpdateType.None;\r\n    this.uuid = MathUtils.generateUUID();\r\n    Object.defineProperty(this, 'id', {\r\n      value: _nodeId++\r\n    });\r\n  }\r\n\r\n  get type() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  getHash() {\r\n    return this.uuid;\r\n  }\r\n\r\n  getUpdateType() {\r\n    return this.updateType;\r\n  }\r\n\r\n  getNodeType() {\r\n    return this.nodeType;\r\n  }\r\n\r\n  update() {\r\n    console.warn('Abstract function.');\r\n  }\r\n\r\n  generate() {\r\n    console.warn('Abstract function.');\r\n  }\r\n\r\n  analyze(builder) {\r\n    const hash = this.getHash(builder);\r\n    const sharedNode = builder.getNodeFromHash(hash);\r\n\r\n    if (sharedNode !== undefined && this !== sharedNode) {\r\n      return sharedNode.analyze(builder);\r\n    }\r\n\r\n    const nodeData = builder.getDataFromNode(this);\r\n    nodeData.dependenciesCount = nodeData.dependenciesCount === undefined ? 1 : nodeData.dependenciesCount + 1;\r\n    const nodeKeys = getNodesKeys(this);\r\n\r\n    for (const property of nodeKeys) {\r\n      this[property].analyze(builder);\r\n    }\r\n  }\r\n\r\n  build(builder, output = null) {\r\n    const hash = this.getHash(builder);\r\n    const sharedNode = builder.getNodeFromHash(hash);\r\n\r\n    if (sharedNode !== undefined && this !== sharedNode) {\r\n      return sharedNode.build(builder, output);\r\n    }\r\n\r\n    builder.addNode(this);\r\n    builder.addStack(this);\r\n    const nodeData = builder.getDataFromNode(this);\r\n    const isGenerateOnce = this.generate.length === 1;\r\n    let snippet = null;\r\n\r\n    if (isGenerateOnce) {\r\n      const type = this.getNodeType(builder);\r\n      snippet = nodeData.snippet;\r\n\r\n      if (snippet === undefined) {\r\n        snippet = this.generate(builder) || '';\r\n        nodeData.snippet = snippet;\r\n      }\r\n\r\n      snippet = builder.format(snippet, type, output);\r\n    } else {\r\n      snippet = this.generate(builder, output) || '';\r\n    }\r\n\r\n    builder.removeStack(this);\r\n    return snippet;\r\n  }\r\n\r\n  serialize(json) {\r\n    const nodeKeys = getNodesKeys(this);\r\n\r\n    if (nodeKeys.length > 0) {\r\n      const inputNodes = {};\r\n\r\n      for (const property of nodeKeys) {\r\n        inputNodes[property] = this[property].toJSON(json.meta).uuid;\r\n      }\r\n\r\n      json.inputNodes = inputNodes;\r\n    }\r\n  }\r\n\r\n  deserialize(json) {\r\n    if (json.inputNodes !== undefined) {\r\n      const nodes = json.meta.nodes;\r\n\r\n      for (const property in json.inputNodes) {\r\n        const uuid = json.inputNodes[property];\r\n        this[property] = nodes[uuid];\r\n      }\r\n    }\r\n  }\r\n\r\n  toJSON(meta) {\r\n    const {\r\n      uuid,\r\n      type\r\n    } = this;\r\n    const isRoot = meta === undefined || typeof meta === 'string';\r\n\r\n    if (isRoot) {\r\n      meta = {\r\n        textures: {},\r\n        images: {},\r\n        nodes: {}\r\n      };\r\n    } // serialize\r\n\r\n\r\n    let data = meta.nodes[uuid];\r\n\r\n    if (data === undefined) {\r\n      data = {\r\n        uuid,\r\n        type,\r\n        meta,\r\n        metadata: {\r\n          version: 4.5,\r\n          type: 'Node',\r\n          generator: 'Node.toJSON'\r\n        }\r\n      };\r\n      meta.nodes[data.uuid] = data;\r\n      this.serialize(data);\r\n      delete data.meta;\r\n    } // TODO: Copied from Object3D.toJSON\r\n\r\n\r\n    function extractFromCache(cache) {\r\n      const values = [];\r\n\r\n      for (const key in cache) {\r\n        const data = cache[key];\r\n        delete data.metadata;\r\n        values.push(data);\r\n      }\r\n\r\n      return values;\r\n    }\r\n\r\n    if (isRoot) {\r\n      const textures = extractFromCache(meta.textures);\r\n      const images = extractFromCache(meta.images);\r\n      const nodes = extractFromCache(meta.nodes);\r\n      if (textures.length > 0) data.textures = textures;\r\n      if (images.length > 0) data.images = images;\r\n      if (nodes.length > 0) data.nodes = nodes;\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nNode.prototype.isNode = true;\r\n\r\nexport default Node;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}