{"ast":null,"code":"import _createClass from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three'; // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar moduloWrapAround = function moduloWrapAround(offset, capacity) {\n  return (offset % capacity + capacity) % capacity;\n};\n\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"object\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"domElement\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enabled\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"target\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"minDistance\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxDistance\", Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"minZoom\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxZoom\", Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"minPolarAngle\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(_assertThisInitialized(_this), \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableDamping\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"dampingFactor\", 0.05);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableZoom\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"zoomSpeed\", 1.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableRotate\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotateSpeed\", 1.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enablePan\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"panSpeed\", 1.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"screenSpacePanning\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"keyPanSpeed\", 7.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"autoRotate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"reverseOrbit\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"keys\", {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"target0\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"position0\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"zoom0\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_domElementKeyEvents\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"getPolarAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"setPolarAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"setAzimuthalAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getDistance\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"listenToKeyEvents\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"saveState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"connect\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dispose\", void 0);\n\n    _this.object = object;\n    _this.domElement = domElement; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object instanceof PerspectiveCamera ? _this.object.zoom : 1; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.setPolarAngle = function (value) {\n      // use modulo wrapping to safeguard value\n      var phi = moduloWrapAround(value, 2 * Math.PI);\n      var currentPhi = spherical.phi; // convert to the equivalent shortest angle\n\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      var phiDist = Math.abs(phi - currentPhi);\n\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n\n    _this.setAzimuthalAngle = function (value) {\n      // use modulo wrapping to safeguard value\n      var theta = moduloWrapAround(value, 2 * Math.PI);\n      var currentTheta = spherical.theta; // convert to the equivalent shortest angle\n\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      var thetaDist = Math.abs(theta - currentTheta);\n\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n\n    _this.getDistance = function () {\n      return scope.object.position.distanceTo(scope.target);\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      _this._domElementKeyEvents = domElement;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new Vector3(); // so camera.up is the orbit axis\n\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    _this.connect = function (domElement) {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement; // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n\n      scope.domElement.style.touchAction = 'none';\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('pointercancel', onPointerCancel);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n    };\n\n    _this.dispose = function () {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('pointercancel', onPointerCancel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var changeEvent = {\n      type: 'change'\n    };\n    var startEvent = {\n      type: 'start'\n    };\n    var endEvent = {\n      type: 'end'\n    };\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n    var pointers = [];\n    var pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n\n    function rotateUp(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n\n    var panLeft = function () {\n      var v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      var dx = pointers[0].pageX - pointers[1].pageX;\n      var dy = pointers[0].pageY - pointers[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var position = getSecondPointerPosition(event);\n      var dx = event.pageX - position.x;\n      var dy = event.pageY - position.y;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        var _scope$domElement7, _scope$domElement8;\n\n        (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.addEventListener('pointerup', onPointerUp);\n      }\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        var _scope$domElement9, _scope$domElement10, _scope$domElement11;\n\n        (_scope$domElement9 = scope.domElement) === null || _scope$domElement9 === void 0 ? void 0 : _scope$domElement9.releasePointerCapture(event.pointerId);\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.removeEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      }\n\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (var i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      var position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      var pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } // connect events\n\n\n    if (domElement !== undefined) _this.connect(domElement); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return _createClass(OrbitControls);\n}(EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nvar MapControls = /*#__PURE__*/function (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n\n  var _super2 = _createSuper(MapControls);\n\n  function MapControls(object, domElement) {\n    var _this2;\n\n    _classCallCheck(this, MapControls);\n\n    _this2 = _super2.call(this, object, domElement);\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = MOUSE.ROTATE;\n    _this2.touches.ONE = TOUCH.PAN;\n    _this2.touches.TWO = TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n\n  return _createClass(MapControls);\n}(OrbitControls);\n\nexport { MapControls, OrbitControls };","map":{"version":3,"names":["_defineProperty","EventDispatcher","Vector3","MOUSE","TOUCH","PerspectiveCamera","Quaternion","Spherical","Vector2","OrthographicCamera","moduloWrapAround","offset","capacity","OrbitControls","object","domElement","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ROTATE","MIDDLE","DOLLY","PAN","ONE","TWO","DOLLY_PAN","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","value","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","_domElementKeyEvents","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","state","STATE","NONE","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","getAutoRotationAngle","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","scale","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","style","touchAction","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","dispose","_scope$domElement","_scope$domElement2","_scope$domElement3","_scope$domElement4","_scope$domElement5","_scope$domElement6","removeEventListener","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","autoRotateSpeed","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","screenSpacePanning","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","rotateSpeed","x","y","handleMouseMoveDolly","handleMouseMovePan","panSpeed","handleMouseWheel","handleKeyDown","needsUpdate","code","keys","keyPanSpeed","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","enableRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","enabled","_scope$domElement7","_scope$domElement8","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","_scope$domElement9","_scope$domElement10","_scope$domElement11","releasePointerCapture","pointerId","mouseAction","button","mouseButtons","ctrlKey","metaKey","shiftKey","trackPointer","touches","DOLLY_ROTATE","push","i","splice","undefined","pointer","MapControls"],"sources":["D:/Jord/l4fycy/node_modules/three-stdlib/controls/OrbitControls.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three';\n\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\n\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"target\", new Vector3());\n\n    _defineProperty(this, \"minDistance\", 0);\n\n    _defineProperty(this, \"maxDistance\", Infinity);\n\n    _defineProperty(this, \"minZoom\", 0);\n\n    _defineProperty(this, \"maxZoom\", Infinity);\n\n    _defineProperty(this, \"minPolarAngle\", 0);\n\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(this, \"enableDamping\", false);\n\n    _defineProperty(this, \"dampingFactor\", 0.05);\n\n    _defineProperty(this, \"enableZoom\", true);\n\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n\n    _defineProperty(this, \"enableRotate\", true);\n\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n\n    _defineProperty(this, \"enablePan\", true);\n\n    _defineProperty(this, \"panSpeed\", 1.0);\n\n    _defineProperty(this, \"screenSpacePanning\", true);\n\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n\n    _defineProperty(this, \"autoRotate\", false);\n\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(this, \"reverseOrbit\", false);\n\n    _defineProperty(this, \"keys\", {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    });\n\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(this, \"target0\", void 0);\n\n    _defineProperty(this, \"position0\", void 0);\n\n    _defineProperty(this, \"zoom0\", void 0);\n\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n\n    _defineProperty(this, \"getPolarAngle\", void 0);\n\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"setPolarAngle\", void 0);\n\n    _defineProperty(this, \"setAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"getDistance\", void 0);\n\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n\n    _defineProperty(this, \"saveState\", void 0);\n\n    _defineProperty(this, \"reset\", void 0);\n\n    _defineProperty(this, \"update\", void 0);\n\n    _defineProperty(this, \"connect\", void 0);\n\n    _defineProperty(this, \"dispose\", void 0);\n\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n\n    this.getAzimuthalAngle = () => spherical.theta;\n\n    this.setPolarAngle = value => {\n      // use modulo wrapping to safeguard value\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi; // convert to the equivalent shortest angle\n\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n\n    this.setAzimuthalAngle = value => {\n      // use modulo wrapping to safeguard value\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta; // convert to the equivalent shortest angle\n\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement; // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n\n      scope.domElement.style.touchAction = 'none';\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('pointercancel', onPointerCancel);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n    };\n\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('pointercancel', onPointerCancel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n\n    function rotateUp(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        var _scope$domElement7, _scope$domElement8;\n\n        (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.addEventListener('pointerup', onPointerUp);\n      }\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        var _scope$domElement9, _scope$domElement10, _scope$domElement11;\n\n        (_scope$domElement9 = scope.domElement) === null || _scope$domElement9 === void 0 ? void 0 : _scope$domElement9.releasePointerCapture(event.pointerId);\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.removeEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      }\n\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } // connect events\n\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexport { MapControls, OrbitControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}