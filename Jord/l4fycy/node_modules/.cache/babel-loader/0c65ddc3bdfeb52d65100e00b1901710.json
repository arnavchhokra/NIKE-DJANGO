{"ast":null,"code":"import _slicedToArray from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, MeshStandardMaterial, Color, TextureLoader, Object3D, Matrix4, BufferGeometryLoader, DirectionalLight, PointLight, RectAreaLight, Vector3, SpotLight, CanvasTexture, LinearFilter, ClampToEdgeWrapping, SpriteMaterial, Sprite, LineBasicMaterial, Line, Mesh, PointsMaterial, Points } from 'three';\n\nvar _taskCache = new WeakMap();\n\nvar Rhino3dmLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(Rhino3dmLoader, _Loader);\n\n  var _super = _createSuper(Rhino3dmLoader);\n\n  function Rhino3dmLoader(manager) {\n    var _this;\n\n    _classCallCheck(this, Rhino3dmLoader);\n\n    _this = _super.call(this, manager);\n    _this.libraryPath = '';\n    _this.libraryPending = null;\n    _this.libraryBinary = null;\n    _this.libraryConfig = {};\n    _this.url = '';\n    _this.workerLimit = 4;\n    _this.workerPool = [];\n    _this.workerNextTaskID = 1;\n    _this.workerSourceURL = '';\n    _this.workerConfig = {};\n    _this.materials = [];\n    return _this;\n  }\n\n  _createClass(Rhino3dmLoader, [{\n    key: \"setLibraryPath\",\n    value: function setLibraryPath(path) {\n      this.libraryPath = path;\n      return this;\n    }\n  }, {\n    key: \"setWorkerLimit\",\n    value: function setWorkerLimit(workerLimit) {\n      this.workerLimit = workerLimit;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this2 = this;\n\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n      loader.setRequestHeader(this.requestHeader);\n      this.url = url;\n      loader.load(url, function (buffer) {\n        // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n        // again from this thread.\n        if (_taskCache.has(buffer)) {\n          var cachedTask = _taskCache.get(buffer);\n\n          return cachedTask.promise.then(onLoad).catch(onError);\n        }\n\n        _this2.decodeObjects(buffer, url).then(onLoad).catch(onError);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      console.log('Task load: ', this.workerPool.map(function (worker) {\n        return worker._taskLoad;\n      }));\n    }\n  }, {\n    key: \"decodeObjects\",\n    value: function decodeObjects(buffer, url) {\n      var _this3 = this;\n\n      var worker;\n      var taskID;\n      var taskCost = buffer.byteLength;\n\n      var objectPending = this._getWorker(taskCost).then(function (_worker) {\n        worker = _worker;\n        taskID = _this3.workerNextTaskID++; //hmmm\n\n        return new Promise(function (resolve, reject) {\n          worker._callbacks[taskID] = {\n            resolve: resolve,\n            reject: reject\n          };\n          worker.postMessage({\n            type: 'decode',\n            id: taskID,\n            buffer: buffer\n          }, [buffer]); //this.debug();\n        });\n      }).then(function (message) {\n        return _this3._createGeometry(message.data);\n      }); // Remove task from the task list.\n      // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\n\n      objectPending.catch(function () {\n        return true;\n      }).then(function () {\n        if (worker && taskID) {\n          _this3._releaseTask(worker, taskID); //this.debug();\n\n        }\n      }); // Cache the task result.\n\n      _taskCache.set(buffer, {\n        url: url,\n        promise: objectPending\n      });\n\n      return objectPending;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(data, onLoad, onError) {\n      this.decodeObjects(data, '').then(onLoad).catch(onError);\n    }\n  }, {\n    key: \"_compareMaterials\",\n    value: function _compareMaterials(material) {\n      var mat = {};\n      mat.name = material.name;\n      mat.color = {};\n      mat.color.r = material.color.r;\n      mat.color.g = material.color.g;\n      mat.color.b = material.color.b;\n      mat.type = material.type;\n\n      for (var i = 0; i < this.materials.length; i++) {\n        var m = this.materials[i];\n        var _mat = {};\n        _mat.name = m.name;\n        _mat.color = {};\n        _mat.color.r = m.color.r;\n        _mat.color.g = m.color.g;\n        _mat.color.b = m.color.b;\n        _mat.type = m.type;\n\n        if (JSON.stringify(mat) === JSON.stringify(_mat)) {\n          return m;\n        }\n      }\n\n      this.materials.push(material);\n      return material;\n    }\n  }, {\n    key: \"_createMaterial\",\n    value: function _createMaterial(material) {\n      if (material === undefined) {\n        return new MeshStandardMaterial({\n          color: new Color(1, 1, 1),\n          metalness: 0.8,\n          name: 'default',\n          side: 2\n        });\n      }\n\n      var _diffuseColor = material.diffuseColor;\n      var diffusecolor = new Color(_diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0);\n\n      if (_diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0) {\n        diffusecolor.r = 1;\n        diffusecolor.g = 1;\n        diffusecolor.b = 1;\n      } // console.log( material );\n\n\n      var mat = new MeshStandardMaterial({\n        color: diffusecolor,\n        name: material.name,\n        side: 2,\n        transparent: material.transparency > 0 ? true : false,\n        opacity: 1.0 - material.transparency\n      });\n      var textureLoader = new TextureLoader();\n\n      for (var i = 0; i < material.textures.length; i++) {\n        var texture = material.textures[i];\n\n        if (texture.image !== null) {\n          var map = textureLoader.load(texture.image);\n\n          switch (texture.type) {\n            case 'Diffuse':\n              mat.map = map;\n              break;\n\n            case 'Bump':\n              mat.bumpMap = map;\n              break;\n\n            case 'Transparency':\n              mat.alphaMap = map;\n              mat.transparent = true;\n              break;\n\n            case 'Emap':\n              mat.envMap = map;\n              break;\n          }\n        }\n      }\n\n      return mat;\n    }\n  }, {\n    key: \"_createGeometry\",\n    value: function _createGeometry(data) {\n      // console.log(data);\n      var object = new Object3D();\n      var instanceDefinitionObjects = [];\n      var instanceDefinitions = [];\n      var instanceReferences = [];\n      object.userData['layers'] = data.layers;\n      object.userData['groups'] = data.groups;\n      object.userData['settings'] = data.settings;\n      object.userData['objectType'] = 'File3dm';\n      object.userData['materials'] = null;\n      object.name = this.url;\n      var objects = data.objects;\n      var materials = data.materials;\n\n      for (var i = 0; i < objects.length; i++) {\n        var obj = objects[i];\n        var attributes = obj.attributes;\n\n        switch (obj.objectType) {\n          case 'InstanceDefinition':\n            instanceDefinitions.push(obj);\n            break;\n\n          case 'InstanceReference':\n            instanceReferences.push(obj);\n            break;\n\n          default:\n            var _object = void 0;\n\n            if (attributes.materialIndex >= 0) {\n              var rMaterial = materials[attributes.materialIndex];\n\n              var material = this._createMaterial(rMaterial);\n\n              material = this._compareMaterials(material);\n              _object = this._createObject(obj, material);\n            } else {\n              var _material2 = this._createMaterial();\n\n              _object = this._createObject(obj, _material2);\n            }\n\n            if (_object === undefined) {\n              continue;\n            }\n\n            var layer = data.layers[attributes.layerIndex];\n            _object.visible = layer ? data.layers[attributes.layerIndex].visible : true;\n\n            if (attributes.isInstanceDefinitionObject) {\n              instanceDefinitionObjects.push(_object);\n            } else {\n              object.add(_object);\n            }\n\n            break;\n        }\n      }\n\n      for (var _i = 0; _i < instanceDefinitions.length; _i++) {\n        var iDef = instanceDefinitions[_i];\n        objects = [];\n\n        for (var j = 0; j < iDef.attributes.objectIds.length; j++) {\n          var objId = iDef.attributes.objectIds[j];\n\n          for (var p = 0; p < instanceDefinitionObjects.length; p++) {\n            var idoId = instanceDefinitionObjects[p].userData.attributes.id;\n\n            if (objId === idoId) {\n              objects.push(instanceDefinitionObjects[p]);\n            }\n          }\n        } // Currently clones geometry and does not take advantage of instancing\n\n\n        for (var _j = 0; _j < instanceReferences.length; _j++) {\n          var iRef = instanceReferences[_j];\n\n          if (iRef.geometry.parentIdefId === iDef.attributes.id) {\n            var iRefObject = new Object3D();\n            var xf = iRef.geometry.xform.array;\n            var matrix = new Matrix4();\n            matrix.set(xf[0], xf[1], xf[2], xf[3], xf[4], xf[5], xf[6], xf[7], xf[8], xf[9], xf[10], xf[11], xf[12], xf[13], xf[14], xf[15]);\n            iRefObject.applyMatrix4(matrix);\n\n            for (var _p = 0; _p < objects.length; _p++) {\n              iRefObject.add(objects[_p].clone(true));\n            }\n\n            object.add(iRefObject);\n          }\n        }\n      }\n\n      object.userData['materials'] = this.materials;\n      return object;\n    }\n  }, {\n    key: \"_createObject\",\n    value: function _createObject(obj, mat) {\n      var loader = new BufferGeometryLoader();\n      var attributes = obj.attributes;\n\n      var geometry, material, _color, color;\n\n      switch (obj.objectType) {\n        case 'Point':\n        case 'PointSet':\n          geometry = loader.parse(obj.geometry);\n\n          if (geometry.attributes.hasOwnProperty('color')) {\n            material = new PointsMaterial({\n              vertexColors: true,\n              sizeAttenuation: false,\n              size: 2\n            });\n          } else {\n            _color = attributes.drawColor;\n            color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n            material = new PointsMaterial({\n              color: color,\n              sizeAttenuation: false,\n              size: 2\n            });\n          }\n\n          material = this._compareMaterials(material);\n          var points = new Points(geometry, material);\n          points.userData['attributes'] = attributes;\n          points.userData['objectType'] = obj.objectType;\n\n          if (attributes.name) {\n            points.name = attributes.name;\n          }\n\n          return points;\n\n        case 'Mesh':\n        case 'Extrusion':\n        case 'SubD':\n        case 'Brep':\n          if (obj.geometry === null) return;\n          geometry = loader.parse(obj.geometry);\n\n          if (geometry.attributes.hasOwnProperty('color')) {\n            mat.vertexColors = true;\n          }\n\n          if (mat === null) {\n            mat = this._createMaterial();\n            mat = this._compareMaterials(mat);\n          }\n\n          var mesh = new Mesh(geometry, mat);\n          mesh.castShadow = attributes.castsShadows;\n          mesh.receiveShadow = attributes.receivesShadows;\n          mesh.userData['attributes'] = attributes;\n          mesh.userData['objectType'] = obj.objectType;\n\n          if (attributes.name) {\n            mesh.name = attributes.name;\n          }\n\n          return mesh;\n\n        case 'Curve':\n          geometry = loader.parse(obj.geometry);\n          _color = attributes.drawColor;\n          color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          material = new LineBasicMaterial({\n            color: color\n          });\n          material = this._compareMaterials(material);\n          var lines = new Line(geometry, material);\n          lines.userData['attributes'] = attributes;\n          lines.userData['objectType'] = obj.objectType;\n\n          if (attributes.name) {\n            lines.name = attributes.name;\n          }\n\n          return lines;\n\n        case 'TextDot':\n          geometry = obj.geometry;\n          var ctx = document.createElement('canvas').getContext('2d');\n          var font = \"\".concat(geometry.fontHeight, \"px \").concat(geometry.fontFace);\n          ctx.font = font;\n          var width = ctx.measureText(geometry.text).width + 10;\n          var height = geometry.fontHeight + 10;\n          var r = window.devicePixelRatio;\n          ctx.canvas.width = width * r;\n          ctx.canvas.height = height * r;\n          ctx.canvas.style.width = width + 'px';\n          ctx.canvas.style.height = height + 'px';\n          ctx.setTransform(r, 0, 0, r, 0, 0);\n          ctx.font = font;\n          ctx.textBaseline = 'middle';\n          ctx.textAlign = 'center';\n          color = attributes.drawColor;\n          ctx.fillStyle = \"rgba(\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b, \",\").concat(color.a, \")\");\n          ctx.fillRect(0, 0, width, height);\n          ctx.fillStyle = 'white';\n          ctx.fillText(geometry.text, width / 2, height / 2);\n          var texture = new CanvasTexture(ctx.canvas);\n          texture.minFilter = LinearFilter;\n          texture.wrapS = ClampToEdgeWrapping;\n          texture.wrapT = ClampToEdgeWrapping;\n          material = new SpriteMaterial({\n            map: texture,\n            depthTest: false\n          });\n          var sprite = new Sprite(material);\n          sprite.position.set(geometry.point[0], geometry.point[1], geometry.point[2]);\n          sprite.scale.set(width / 10, height / 10, 1.0);\n          sprite.userData['attributes'] = attributes;\n          sprite.userData['objectType'] = obj.objectType;\n\n          if (attributes.name) {\n            sprite.name = attributes.name;\n          }\n\n          return sprite;\n\n        case 'Light':\n          geometry = obj.geometry;\n          var light;\n\n          if (geometry.isDirectionalLight) {\n            light = new DirectionalLight();\n            light.castShadow = attributes.castsShadows;\n            light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n            light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n            light.shadow.normalBias = 0.1;\n          } else if (geometry.isPointLight) {\n            light = new PointLight();\n            light.castShadow = attributes.castsShadows;\n            light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n            light.shadow.normalBias = 0.1;\n          } else if (geometry.isRectangularLight) {\n            light = new RectAreaLight();\n\n            var _width = Math.abs(geometry.width[2]);\n\n            var _height = Math.abs(geometry.length[0]);\n\n            light.position.set(geometry.location[0] - _height / 2, geometry.location[1], geometry.location[2] - _width / 2);\n            light.height = _height;\n            light.width = _width;\n            light.lookAt(new Vector3(geometry.direction[0], geometry.direction[1], geometry.direction[2]));\n          } else if (geometry.isSpotLight) {\n            light = new SpotLight();\n            light.castShadow = attributes.castsShadows;\n            light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n            light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n            light.angle = geometry.spotAngleRadians;\n            light.shadow.normalBias = 0.1;\n          } else if (geometry.isLinearLight) {\n            console.warn('THREE.3DMLoader:  No conversion exists for linear lights.');\n            return;\n          }\n\n          if (light) {\n            light.intensity = geometry.intensity;\n            _color = geometry.diffuse;\n            color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n            light.color = color;\n            light.userData['attributes'] = attributes;\n            light.userData['objectType'] = obj.objectType;\n          }\n\n          return light;\n      }\n    }\n  }, {\n    key: \"_initLibrary\",\n    value: function _initLibrary() {\n      var _this4 = this;\n\n      if (!this.libraryPending) {\n        // Load rhino3dm wrapper.\n        var jsLoader = new FileLoader(this.manager);\n        jsLoader.setPath(this.libraryPath);\n        var jsContent = new Promise(function (resolve, reject) {\n          jsLoader.load('rhino3dm.js', resolve, undefined, reject);\n        }); // Load rhino3dm WASM binary.\n\n        var binaryLoader = new FileLoader(this.manager);\n        binaryLoader.setPath(this.libraryPath);\n        binaryLoader.setResponseType('arraybuffer');\n        var binaryContent = new Promise(function (resolve, reject) {\n          binaryLoader.load('rhino3dm.wasm', resolve, undefined, reject);\n        });\n        this.libraryPending = Promise.all([jsContent, binaryContent]).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              jsContent = _ref2[0],\n              binaryContent = _ref2[1];\n\n          //this.libraryBinary = binaryContent;\n          _this4.libraryConfig.wasmBinary = binaryContent;\n          var fn = Rhino3dmWorker.toString();\n          var body = ['/* rhino3dm.js */', jsContent, '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n          _this4.workerSourceURL = URL.createObjectURL(new Blob([body]));\n        });\n      }\n\n      return this.libraryPending;\n    }\n  }, {\n    key: \"_getWorker\",\n    value: function _getWorker(taskCost) {\n      var _this5 = this;\n\n      return this._initLibrary().then(function () {\n        if (_this5.workerPool.length < _this5.workerLimit) {\n          var _worker2 = new Worker(_this5.workerSourceURL);\n\n          _worker2._callbacks = {};\n          _worker2._taskCosts = {};\n          _worker2._taskLoad = 0;\n\n          _worker2.postMessage({\n            type: 'init',\n            libraryConfig: _this5.libraryConfig\n          });\n\n          _worker2.onmessage = function (e) {\n            var message = e.data;\n\n            switch (message.type) {\n              case 'decode':\n                _worker2._callbacks[message.id].resolve(message);\n\n                break;\n\n              case 'error':\n                _worker2._callbacks[message.id].reject(message);\n\n                break;\n\n              default:\n                console.error('THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"');\n            }\n          };\n\n          _this5.workerPool.push(_worker2);\n        } else {\n          _this5.workerPool.sort(function (a, b) {\n            return a._taskLoad > b._taskLoad ? -1 : 1;\n          });\n        }\n\n        var worker = _this5.workerPool[_this5.workerPool.length - 1];\n        worker._taskLoad += taskCost;\n        return worker;\n      });\n    }\n  }, {\n    key: \"_releaseTask\",\n    value: function _releaseTask(worker, taskID) {\n      worker._taskLoad -= worker._taskCosts[taskID];\n      delete worker._callbacks[taskID];\n      delete worker._taskCosts[taskID];\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      for (var i = 0; i < this.workerPool.length; ++i) {\n        this.workerPool[i].terminate();\n      }\n\n      this.workerPool.length = 0;\n      return this;\n    }\n  }]);\n\n  return Rhino3dmLoader;\n}(Loader);\n/* WEB WORKER */\n\n\nfunction Rhino3dmWorker() {\n  var libraryPending;\n  var libraryConfig;\n  var rhino;\n\n  onmessage = function onmessage(e) {\n    var message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        libraryConfig = message.libraryConfig;\n        var wasmBinary = libraryConfig.wasmBinary;\n        var RhinoModule;\n        libraryPending = new Promise(function (resolve) {\n          /* Like Basis Loader */\n          RhinoModule = {\n            wasmBinary: wasmBinary,\n            onRuntimeInitialized: resolve\n          };\n          rhino3dm(RhinoModule); // eslint-disable-line no-undef\n        }).then(function () {\n          rhino = RhinoModule;\n        });\n        break;\n\n      case 'decode':\n        var buffer = message.buffer;\n        libraryPending.then(function () {\n          var data = decodeObjects(rhino, buffer);\n          self.postMessage({\n            type: 'decode',\n            id: message.id,\n            data: data\n          });\n        });\n        break;\n    }\n  };\n\n  function decodeObjects(rhino, buffer) {\n    var arr = new Uint8Array(buffer);\n    var doc = rhino.File3dm.fromByteArray(arr);\n    var objects = [];\n    var materials = [];\n    var layers = [];\n    var views = [];\n    var namedViews = [];\n    var groups = []; //Handle objects\n\n    var objs = doc.objects();\n    var cnt = objs.count;\n\n    for (var i = 0; i < cnt; i++) {\n      var _object = objs.get(i);\n\n      var object = extractObjectData(_object, doc);\n\n      _object.delete();\n\n      if (object) {\n        objects.push(object);\n      }\n    } // Handle instance definitions\n    // console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\n\n\n    for (var _i2 = 0; _i2 < doc.instanceDefinitions().count(); _i2++) {\n      var idef = doc.instanceDefinitions().get(_i2);\n      var idefAttributes = extractProperties(idef);\n      idefAttributes.objectIds = idef.getObjectIds();\n      objects.push({\n        geometry: null,\n        attributes: idefAttributes,\n        objectType: 'InstanceDefinition'\n      });\n    } // Handle materials\n\n\n    var textureTypes = [// rhino.TextureType.Bitmap,\n    rhino.TextureType.Diffuse, rhino.TextureType.Bump, rhino.TextureType.Transparency, rhino.TextureType.Opacity, rhino.TextureType.Emap];\n    var pbrTextureTypes = [rhino.TextureType.PBR_BaseColor, rhino.TextureType.PBR_Subsurface, rhino.TextureType.PBR_SubsurfaceScattering, rhino.TextureType.PBR_SubsurfaceScatteringRadius, rhino.TextureType.PBR_Metallic, rhino.TextureType.PBR_Specular, rhino.TextureType.PBR_SpecularTint, rhino.TextureType.PBR_Roughness, rhino.TextureType.PBR_Anisotropic, rhino.TextureType.PBR_Anisotropic_Rotation, rhino.TextureType.PBR_Sheen, rhino.TextureType.PBR_SheenTint, rhino.TextureType.PBR_Clearcoat, rhino.TextureType.PBR_ClearcoatBump, rhino.TextureType.PBR_ClearcoatRoughness, rhino.TextureType.PBR_OpacityIor, rhino.TextureType.PBR_OpacityRoughness, rhino.TextureType.PBR_Emission, rhino.TextureType.PBR_AmbientOcclusion, rhino.TextureType.PBR_Displacement];\n\n    for (var _i3 = 0; _i3 < doc.materials().count(); _i3++) {\n      var _material = doc.materials().get(_i3);\n\n      var _pbrMaterial = _material.physicallyBased();\n\n      var material = extractProperties(_material);\n      var textures = [];\n\n      for (var j = 0; j < textureTypes.length; j++) {\n        var _texture = _material.getTexture(textureTypes[j]);\n\n        if (_texture) {\n          var textureType = textureTypes[j].constructor.name;\n          textureType = textureType.substring(12, textureType.length);\n          var texture = {\n            type: textureType\n          };\n          var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n\n          if (image) {\n            texture.image = 'data:image/png;base64,' + image;\n          } else {\n            console.warn(\"THREE.3DMLoader: Image for \".concat(textureType, \" texture not embedded in file.\"));\n            texture.image = null;\n          }\n\n          textures.push(texture);\n\n          _texture.delete();\n        }\n      }\n\n      material.textures = textures;\n\n      if (_pbrMaterial.supported) {\n        console.log('pbr true');\n\n        for (var _j2 = 0; _j2 < pbrTextureTypes.length; _j2++) {\n          var _texture2 = _material.getTexture(textureTypes[_j2]);\n\n          if (_texture2) {\n            var _image = doc.getEmbeddedFileAsBase64(_texture2.fileName);\n\n            var _textureType = textureTypes[_j2].constructor.name;\n            _textureType = _textureType.substring(12, _textureType.length);\n            var _texture3 = {\n              type: _textureType,\n              image: 'data:image/png;base64,' + _image\n            };\n            textures.push(_texture3);\n\n            _texture2.delete();\n          }\n        }\n\n        var pbMaterialProperties = extractProperties(_material.physicallyBased());\n        material = Object.assign(pbMaterialProperties, material);\n      }\n\n      materials.push(material);\n\n      _material.delete();\n\n      _pbrMaterial.delete();\n    } // Handle layers\n\n\n    for (var _i4 = 0; _i4 < doc.layers().count(); _i4++) {\n      var _layer = doc.layers().get(_i4);\n\n      var layer = extractProperties(_layer);\n      layers.push(layer);\n\n      _layer.delete();\n    } // Handle views\n\n\n    for (var _i5 = 0; _i5 < doc.views().count(); _i5++) {\n      var _view = doc.views().get(_i5);\n\n      var view = extractProperties(_view);\n      views.push(view);\n\n      _view.delete();\n    } // Handle named views\n\n\n    for (var _i6 = 0; _i6 < doc.namedViews().count(); _i6++) {\n      var _namedView = doc.namedViews().get(_i6);\n\n      var namedView = extractProperties(_namedView);\n      namedViews.push(namedView);\n\n      _namedView.delete();\n    } // Handle groups\n\n\n    for (var _i7 = 0; _i7 < doc.groups().count(); _i7++) {\n      var _group = doc.groups().get(_i7);\n\n      var group = extractProperties(_group);\n      groups.push(group);\n\n      _group.delete();\n    } // Handle settings\n\n\n    var settings = extractProperties(doc.settings()); //TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\n    // Handle dimstyles\n    // console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\n    // Handle bitmaps\n    // console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\n    // Handle strings -- this seems to be broken at the moment in rhino3dm\n    // console.log( `Document Strings Count: ${doc.strings().count()}` );\n\n    /*\n    for( var i = 0; i < doc.strings().count(); i++ ){\n    var _string= doc.strings().get( i );\n    console.log(_string);\n    var string = extractProperties( _group );\n    strings.push( string );\n    _string.delete();\n    }\n    */\n\n    doc.delete();\n    return {\n      objects: objects,\n      materials: materials,\n      layers: layers,\n      views: views,\n      namedViews: namedViews,\n      groups: groups,\n      settings: settings\n    };\n  }\n\n  function extractObjectData(object, doc) {\n    var _geometry = object.geometry();\n\n    var _attributes = object.attributes();\n\n    var objectType = _geometry.objectType;\n    var geometry, attributes, position, data, mesh; // skip instance definition objects\n    //if( _attributes.isInstanceDefinitionObject ) { continue; }\n    // TODO: handle other geometry types\n\n    switch (objectType) {\n      case rhino.ObjectType.Curve:\n        var pts = curveToPoints(_geometry, 100);\n        position = {};\n        attributes = {};\n        data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [];\n\n        for (var j = 0; j < pts.length; j++) {\n          position.array.push(pts[j][0]);\n          position.array.push(pts[j][1]);\n          position.array.push(pts[j][2]);\n        }\n\n        attributes.position = position;\n        data.attributes = attributes;\n        geometry = {\n          data: data\n        };\n        break;\n\n      case rhino.ObjectType.Point:\n        var pt = _geometry.location;\n        position = {};\n        var color = {};\n        attributes = {};\n        data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [pt[0], pt[1], pt[2]];\n\n        var _color = _attributes.drawColor(doc);\n\n        color.itemSize = 3;\n        color.type = 'Float32Array';\n        color.array = [_color.r / 255.0, _color.g / 255.0, _color.b / 255.0];\n        attributes.position = position;\n        attributes.color = color;\n        data.attributes = attributes;\n        geometry = {\n          data: data\n        };\n        break;\n\n      case rhino.ObjectType.PointSet:\n      case rhino.ObjectType.Mesh:\n        geometry = _geometry.toThreejsJSON();\n        break;\n\n      case rhino.ObjectType.Brep:\n        var faces = _geometry.faces();\n\n        mesh = new rhino.Mesh();\n\n        for (var faceIndex = 0; faceIndex < faces.count; faceIndex++) {\n          var face = faces.get(faceIndex);\n\n          var _mesh = face.getMesh(rhino.MeshType.Any);\n\n          if (_mesh) {\n            mesh.append(_mesh);\n\n            _mesh.delete();\n          }\n\n          face.delete();\n        }\n\n        if (mesh.faces().count > 0) {\n          mesh.compact();\n          geometry = mesh.toThreejsJSON();\n          faces.delete();\n        }\n\n        mesh.delete();\n        break;\n\n      case rhino.ObjectType.Extrusion:\n        mesh = _geometry.getMesh(rhino.MeshType.Any);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      case rhino.ObjectType.TextDot:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.Light:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.InstanceReference:\n        geometry = extractProperties(_geometry);\n        geometry.xform = extractProperties(_geometry.xform);\n        geometry.xform.array = _geometry.xform.toFloatArray(true);\n        break;\n\n      case rhino.ObjectType.SubD:\n        // TODO: precalculate resulting vertices and faces and warn on excessive results\n        _geometry.subdivide(3);\n\n        mesh = rhino.Mesh.createFromSubDControlNet(_geometry);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      /*\n      case rhino.ObjectType.Annotation:\n      case rhino.ObjectType.Hatch:\n      case rhino.ObjectType.ClipPlane:\n      */\n\n      default:\n        console.warn(\"THREE.3DMLoader: TODO: Implement \".concat(objectType.constructor.name));\n        break;\n    }\n\n    if (geometry) {\n      attributes = extractProperties(_attributes);\n      attributes.geometry = extractProperties(_geometry);\n\n      if (_attributes.groupCount > 0) {\n        attributes.groupIds = _attributes.getGroupList();\n      }\n\n      if (_attributes.userStringCount > 0) {\n        attributes.userStrings = _attributes.getUserStrings();\n      }\n\n      if (_geometry.userStringCount > 0) {\n        attributes.geometry.userStrings = _geometry.getUserStrings();\n      }\n\n      attributes.drawColor = _attributes.drawColor(doc);\n      objectType = objectType.constructor.name;\n      objectType = objectType.substring(11, objectType.length);\n      return {\n        geometry: geometry,\n        attributes: attributes,\n        objectType: objectType\n      };\n    } else {\n      console.warn(\"THREE.3DMLoader: \".concat(objectType.constructor.name, \" has no associated mesh geometry.\"));\n    }\n  }\n\n  function extractProperties(object) {\n    var result = {};\n\n    for (var property in object) {\n      var value = object[property];\n\n      if (typeof value !== 'function') {\n        if (typeof value === 'object' && value !== null && value.hasOwnProperty('constructor')) {\n          result[property] = {\n            name: value.constructor.name,\n            value: value.value\n          };\n        } else {\n          result[property] = value;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function curveToPoints(curve, pointLimit) {\n    var pointCount = pointLimit;\n    var rc = [];\n    var ts = [];\n\n    if (curve instanceof rhino.LineCurve) {\n      return [curve.pointAtStart, curve.pointAtEnd];\n    }\n\n    if (curve instanceof rhino.PolylineCurve) {\n      pointCount = curve.pointCount;\n\n      for (var i = 0; i < pointCount; i++) {\n        rc.push(curve.point(i));\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.PolyCurve) {\n      var segmentCount = curve.segmentCount;\n\n      for (var _i8 = 0; _i8 < segmentCount; _i8++) {\n        var segment = curve.segmentCurve(_i8);\n        var segmentArray = curveToPoints(segment, pointCount);\n        rc = rc.concat(segmentArray);\n        segment.delete();\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.ArcCurve) {\n      pointCount = Math.floor(curve.angleDegrees / 5);\n      pointCount = pointCount < 2 ? 2 : pointCount; // alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\n    }\n\n    if (curve instanceof rhino.NurbsCurve && curve.degree === 1) {\n      var pLine = curve.tryGetPolyline();\n\n      for (var _i9 = 0; _i9 < pLine.count; _i9++) {\n        rc.push(pLine.get(_i9));\n      }\n\n      pLine.delete();\n      return rc;\n    }\n\n    var domain = curve.domain;\n    var divisions = pointCount - 1.0;\n\n    for (var j = 0; j < pointCount; j++) {\n      var t = domain[0] + j / divisions * (domain[1] - domain[0]);\n\n      if (t === domain[0] || t === domain[1]) {\n        ts.push(t);\n        continue;\n      }\n\n      var tan = curve.tangentAt(t);\n      var prevTan = curve.tangentAt(ts.slice(-1)[0]); // Duplicated from THREE.Vector3\n      // How to pass imports to worker?\n\n      var tS = tan[0] * tan[0] + tan[1] * tan[1] + tan[2] * tan[2];\n      var ptS = prevTan[0] * prevTan[0] + prevTan[1] * prevTan[1] + prevTan[2] * prevTan[2];\n      var denominator = Math.sqrt(tS * ptS);\n      var angle = void 0;\n\n      if (denominator === 0) {\n        angle = Math.PI / 2;\n      } else {\n        var theta = (tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z) / denominator;\n        angle = Math.acos(Math.max(-1, Math.min(1, theta)));\n      }\n\n      if (angle < 0.1) continue;\n      ts.push(t);\n    }\n\n    rc = ts.map(function (t) {\n      return curve.pointAt(t);\n    });\n    return rc;\n  }\n}\n\nexport { Rhino3dmLoader };","map":{"version":3,"names":["Loader","FileLoader","MeshStandardMaterial","Color","TextureLoader","Object3D","Matrix4","BufferGeometryLoader","DirectionalLight","PointLight","RectAreaLight","Vector3","SpotLight","CanvasTexture","LinearFilter","ClampToEdgeWrapping","SpriteMaterial","Sprite","LineBasicMaterial","Line","Mesh","PointsMaterial","Points","_taskCache","WeakMap","Rhino3dmLoader","manager","libraryPath","libraryPending","libraryBinary","libraryConfig","url","workerLimit","workerPool","workerNextTaskID","workerSourceURL","workerConfig","materials","path","onLoad","onProgress","onError","loader","setPath","setResponseType","setRequestHeader","requestHeader","load","buffer","has","cachedTask","get","promise","then","catch","decodeObjects","console","log","map","worker","_taskLoad","taskID","taskCost","byteLength","objectPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","type","id","message","_createGeometry","data","_releaseTask","set","material","mat","name","color","r","g","b","i","length","m","_mat","JSON","stringify","push","undefined","metalness","side","_diffuseColor","diffuseColor","diffusecolor","transparent","transparency","opacity","textureLoader","textures","texture","image","bumpMap","alphaMap","envMap","object","instanceDefinitionObjects","instanceDefinitions","instanceReferences","userData","layers","groups","settings","objects","obj","attributes","objectType","_object","materialIndex","rMaterial","_createMaterial","_compareMaterials","_createObject","layer","layerIndex","visible","isInstanceDefinitionObject","add","iDef","j","objectIds","objId","p","idoId","iRef","geometry","parentIdefId","iRefObject","xf","xform","array","matrix","applyMatrix4","clone","_color","parse","hasOwnProperty","vertexColors","sizeAttenuation","size","drawColor","points","mesh","castShadow","castsShadows","receiveShadow","receivesShadows","lines","ctx","document","createElement","getContext","font","fontHeight","fontFace","width","measureText","text","height","window","devicePixelRatio","canvas","style","setTransform","textBaseline","textAlign","fillStyle","a","fillRect","fillText","minFilter","wrapS","wrapT","depthTest","sprite","position","point","scale","light","isDirectionalLight","location","target","direction","shadow","normalBias","isPointLight","isRectangularLight","Math","abs","lookAt","isSpotLight","angle","spotAngleRadians","isLinearLight","warn","intensity","diffuse","jsLoader","jsContent","binaryLoader","binaryContent","all","wasmBinary","fn","Rhino3dmWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","_initLibrary","Worker","_taskCosts","onmessage","e","error","sort","terminate","rhino","RhinoModule","onRuntimeInitialized","rhino3dm","self","arr","Uint8Array","doc","File3dm","fromByteArray","views","namedViews","objs","cnt","count","extractObjectData","delete","idef","idefAttributes","extractProperties","getObjectIds","textureTypes","TextureType","Diffuse","Bump","Transparency","Opacity","Emap","pbrTextureTypes","PBR_BaseColor","PBR_Subsurface","PBR_SubsurfaceScattering","PBR_SubsurfaceScatteringRadius","PBR_Metallic","PBR_Specular","PBR_SpecularTint","PBR_Roughness","PBR_Anisotropic","PBR_Anisotropic_Rotation","PBR_Sheen","PBR_SheenTint","PBR_Clearcoat","PBR_ClearcoatBump","PBR_ClearcoatRoughness","PBR_OpacityIor","PBR_OpacityRoughness","PBR_Emission","PBR_AmbientOcclusion","PBR_Displacement","_material","_pbrMaterial","physicallyBased","_texture","getTexture","textureType","constructor","getEmbeddedFileAsBase64","fileName","supported","pbMaterialProperties","Object","assign","_layer","_view","view","_namedView","namedView","_group","group","_geometry","_attributes","ObjectType","Curve","pts","curveToPoints","itemSize","Point","pt","PointSet","toThreejsJSON","Brep","faces","faceIndex","face","_mesh","getMesh","MeshType","Any","append","compact","Extrusion","TextDot","Light","InstanceReference","toFloatArray","SubD","subdivide","createFromSubDControlNet","groupCount","groupIds","getGroupList","userStringCount","userStrings","getUserStrings","result","property","value","curve","pointLimit","pointCount","rc","ts","LineCurve","pointAtStart","pointAtEnd","PolylineCurve","PolyCurve","segmentCount","segment","segmentCurve","segmentArray","concat","ArcCurve","floor","angleDegrees","NurbsCurve","degree","pLine","tryGetPolyline","domain","divisions","t","tan","tangentAt","prevTan","slice","tS","ptS","denominator","sqrt","PI","theta","x","y","z","acos","max","min","pointAt"],"sources":["D:/Jord/l4fycy/node_modules/three-stdlib/loaders/3DMLoader.js"],"sourcesContent":["import { Loader, FileLoader, MeshStandardMaterial, Color, TextureLoader, Object3D, Matrix4, BufferGeometryLoader, DirectionalLight, PointLight, RectAreaLight, Vector3, SpotLight, CanvasTexture, LinearFilter, ClampToEdgeWrapping, SpriteMaterial, Sprite, LineBasicMaterial, Line, Mesh, PointsMaterial, Points } from 'three';\n\nconst _taskCache = new WeakMap();\n\nclass Rhino3dmLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.libraryPath = '';\n    this.libraryPending = null;\n    this.libraryBinary = null;\n    this.libraryConfig = {};\n    this.url = '';\n    this.workerLimit = 4;\n    this.workerPool = [];\n    this.workerNextTaskID = 1;\n    this.workerSourceURL = '';\n    this.workerConfig = {};\n    this.materials = [];\n  }\n\n  setLibraryPath(path) {\n    this.libraryPath = path;\n    return this;\n  }\n\n  setWorkerLimit(workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    this.url = url;\n    loader.load(url, buffer => {\n      // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n      // again from this thread.\n      if (_taskCache.has(buffer)) {\n        const cachedTask = _taskCache.get(buffer);\n\n        return cachedTask.promise.then(onLoad).catch(onError);\n      }\n\n      this.decodeObjects(buffer, url).then(onLoad).catch(onError);\n    }, onProgress, onError);\n  }\n\n  debug() {\n    console.log('Task load: ', this.workerPool.map(worker => worker._taskLoad));\n  }\n\n  decodeObjects(buffer, url) {\n    let worker;\n    let taskID;\n    const taskCost = buffer.byteLength;\n\n    const objectPending = this._getWorker(taskCost).then(_worker => {\n      worker = _worker;\n      taskID = this.workerNextTaskID++; //hmmm\n\n      return new Promise((resolve, reject) => {\n        worker._callbacks[taskID] = {\n          resolve,\n          reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          buffer\n        }, [buffer]); //this.debug();\n      });\n    }).then(message => this._createGeometry(message.data)); // Remove task from the task list.\n    // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\n\n    objectPending.catch(() => true).then(() => {\n      if (worker && taskID) {\n        this._releaseTask(worker, taskID); //this.debug();\n\n      }\n    }); // Cache the task result.\n\n    _taskCache.set(buffer, {\n      url: url,\n      promise: objectPending\n    });\n\n    return objectPending;\n  }\n\n  parse(data, onLoad, onError) {\n    this.decodeObjects(data, '').then(onLoad).catch(onError);\n  }\n\n  _compareMaterials(material) {\n    const mat = {};\n    mat.name = material.name;\n    mat.color = {};\n    mat.color.r = material.color.r;\n    mat.color.g = material.color.g;\n    mat.color.b = material.color.b;\n    mat.type = material.type;\n\n    for (let i = 0; i < this.materials.length; i++) {\n      const m = this.materials[i];\n      const _mat = {};\n      _mat.name = m.name;\n      _mat.color = {};\n      _mat.color.r = m.color.r;\n      _mat.color.g = m.color.g;\n      _mat.color.b = m.color.b;\n      _mat.type = m.type;\n\n      if (JSON.stringify(mat) === JSON.stringify(_mat)) {\n        return m;\n      }\n    }\n\n    this.materials.push(material);\n    return material;\n  }\n\n  _createMaterial(material) {\n    if (material === undefined) {\n      return new MeshStandardMaterial({\n        color: new Color(1, 1, 1),\n        metalness: 0.8,\n        name: 'default',\n        side: 2\n      });\n    }\n\n    const _diffuseColor = material.diffuseColor;\n    const diffusecolor = new Color(_diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0);\n\n    if (_diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0) {\n      diffusecolor.r = 1;\n      diffusecolor.g = 1;\n      diffusecolor.b = 1;\n    } // console.log( material );\n\n\n    const mat = new MeshStandardMaterial({\n      color: diffusecolor,\n      name: material.name,\n      side: 2,\n      transparent: material.transparency > 0 ? true : false,\n      opacity: 1.0 - material.transparency\n    });\n    const textureLoader = new TextureLoader();\n\n    for (let i = 0; i < material.textures.length; i++) {\n      const texture = material.textures[i];\n\n      if (texture.image !== null) {\n        const map = textureLoader.load(texture.image);\n\n        switch (texture.type) {\n          case 'Diffuse':\n            mat.map = map;\n            break;\n\n          case 'Bump':\n            mat.bumpMap = map;\n            break;\n\n          case 'Transparency':\n            mat.alphaMap = map;\n            mat.transparent = true;\n            break;\n\n          case 'Emap':\n            mat.envMap = map;\n            break;\n        }\n      }\n    }\n\n    return mat;\n  }\n\n  _createGeometry(data) {\n    // console.log(data);\n    const object = new Object3D();\n    const instanceDefinitionObjects = [];\n    const instanceDefinitions = [];\n    const instanceReferences = [];\n    object.userData['layers'] = data.layers;\n    object.userData['groups'] = data.groups;\n    object.userData['settings'] = data.settings;\n    object.userData['objectType'] = 'File3dm';\n    object.userData['materials'] = null;\n    object.name = this.url;\n    let objects = data.objects;\n    const materials = data.materials;\n\n    for (let i = 0; i < objects.length; i++) {\n      const obj = objects[i];\n      const attributes = obj.attributes;\n\n      switch (obj.objectType) {\n        case 'InstanceDefinition':\n          instanceDefinitions.push(obj);\n          break;\n\n        case 'InstanceReference':\n          instanceReferences.push(obj);\n          break;\n\n        default:\n          let _object;\n\n          if (attributes.materialIndex >= 0) {\n            const rMaterial = materials[attributes.materialIndex];\n\n            let material = this._createMaterial(rMaterial);\n\n            material = this._compareMaterials(material);\n            _object = this._createObject(obj, material);\n          } else {\n            const material = this._createMaterial();\n\n            _object = this._createObject(obj, material);\n          }\n\n          if (_object === undefined) {\n            continue;\n          }\n\n          const layer = data.layers[attributes.layerIndex];\n          _object.visible = layer ? data.layers[attributes.layerIndex].visible : true;\n\n          if (attributes.isInstanceDefinitionObject) {\n            instanceDefinitionObjects.push(_object);\n          } else {\n            object.add(_object);\n          }\n\n          break;\n      }\n    }\n\n    for (let i = 0; i < instanceDefinitions.length; i++) {\n      const iDef = instanceDefinitions[i];\n      objects = [];\n\n      for (let j = 0; j < iDef.attributes.objectIds.length; j++) {\n        const objId = iDef.attributes.objectIds[j];\n\n        for (let p = 0; p < instanceDefinitionObjects.length; p++) {\n          const idoId = instanceDefinitionObjects[p].userData.attributes.id;\n\n          if (objId === idoId) {\n            objects.push(instanceDefinitionObjects[p]);\n          }\n        }\n      } // Currently clones geometry and does not take advantage of instancing\n\n\n      for (let j = 0; j < instanceReferences.length; j++) {\n        const iRef = instanceReferences[j];\n\n        if (iRef.geometry.parentIdefId === iDef.attributes.id) {\n          const iRefObject = new Object3D();\n          const xf = iRef.geometry.xform.array;\n          const matrix = new Matrix4();\n          matrix.set(xf[0], xf[1], xf[2], xf[3], xf[4], xf[5], xf[6], xf[7], xf[8], xf[9], xf[10], xf[11], xf[12], xf[13], xf[14], xf[15]);\n          iRefObject.applyMatrix4(matrix);\n\n          for (let p = 0; p < objects.length; p++) {\n            iRefObject.add(objects[p].clone(true));\n          }\n\n          object.add(iRefObject);\n        }\n      }\n    }\n\n    object.userData['materials'] = this.materials;\n    return object;\n  }\n\n  _createObject(obj, mat) {\n    const loader = new BufferGeometryLoader();\n    const attributes = obj.attributes;\n\n    let geometry, material, _color, color;\n\n    switch (obj.objectType) {\n      case 'Point':\n      case 'PointSet':\n        geometry = loader.parse(obj.geometry);\n\n        if (geometry.attributes.hasOwnProperty('color')) {\n          material = new PointsMaterial({\n            vertexColors: true,\n            sizeAttenuation: false,\n            size: 2\n          });\n        } else {\n          _color = attributes.drawColor;\n          color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          material = new PointsMaterial({\n            color: color,\n            sizeAttenuation: false,\n            size: 2\n          });\n        }\n\n        material = this._compareMaterials(material);\n        const points = new Points(geometry, material);\n        points.userData['attributes'] = attributes;\n        points.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          points.name = attributes.name;\n        }\n\n        return points;\n\n      case 'Mesh':\n      case 'Extrusion':\n      case 'SubD':\n      case 'Brep':\n        if (obj.geometry === null) return;\n        geometry = loader.parse(obj.geometry);\n\n        if (geometry.attributes.hasOwnProperty('color')) {\n          mat.vertexColors = true;\n        }\n\n        if (mat === null) {\n          mat = this._createMaterial();\n          mat = this._compareMaterials(mat);\n        }\n\n        const mesh = new Mesh(geometry, mat);\n        mesh.castShadow = attributes.castsShadows;\n        mesh.receiveShadow = attributes.receivesShadows;\n        mesh.userData['attributes'] = attributes;\n        mesh.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          mesh.name = attributes.name;\n        }\n\n        return mesh;\n\n      case 'Curve':\n        geometry = loader.parse(obj.geometry);\n        _color = attributes.drawColor;\n        color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n        material = new LineBasicMaterial({\n          color: color\n        });\n        material = this._compareMaterials(material);\n        const lines = new Line(geometry, material);\n        lines.userData['attributes'] = attributes;\n        lines.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          lines.name = attributes.name;\n        }\n\n        return lines;\n\n      case 'TextDot':\n        geometry = obj.geometry;\n        const ctx = document.createElement('canvas').getContext('2d');\n        const font = `${geometry.fontHeight}px ${geometry.fontFace}`;\n        ctx.font = font;\n        const width = ctx.measureText(geometry.text).width + 10;\n        const height = geometry.fontHeight + 10;\n        const r = window.devicePixelRatio;\n        ctx.canvas.width = width * r;\n        ctx.canvas.height = height * r;\n        ctx.canvas.style.width = width + 'px';\n        ctx.canvas.style.height = height + 'px';\n        ctx.setTransform(r, 0, 0, r, 0, 0);\n        ctx.font = font;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        color = attributes.drawColor;\n        ctx.fillStyle = `rgba(${color.r},${color.g},${color.b},${color.a})`;\n        ctx.fillRect(0, 0, width, height);\n        ctx.fillStyle = 'white';\n        ctx.fillText(geometry.text, width / 2, height / 2);\n        const texture = new CanvasTexture(ctx.canvas);\n        texture.minFilter = LinearFilter;\n        texture.wrapS = ClampToEdgeWrapping;\n        texture.wrapT = ClampToEdgeWrapping;\n        material = new SpriteMaterial({\n          map: texture,\n          depthTest: false\n        });\n        const sprite = new Sprite(material);\n        sprite.position.set(geometry.point[0], geometry.point[1], geometry.point[2]);\n        sprite.scale.set(width / 10, height / 10, 1.0);\n        sprite.userData['attributes'] = attributes;\n        sprite.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          sprite.name = attributes.name;\n        }\n\n        return sprite;\n\n      case 'Light':\n        geometry = obj.geometry;\n        let light;\n\n        if (geometry.isDirectionalLight) {\n          light = new DirectionalLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isPointLight) {\n          light = new PointLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isRectangularLight) {\n          light = new RectAreaLight();\n          const width = Math.abs(geometry.width[2]);\n          const height = Math.abs(geometry.length[0]);\n          light.position.set(geometry.location[0] - height / 2, geometry.location[1], geometry.location[2] - width / 2);\n          light.height = height;\n          light.width = width;\n          light.lookAt(new Vector3(geometry.direction[0], geometry.direction[1], geometry.direction[2]));\n        } else if (geometry.isSpotLight) {\n          light = new SpotLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.angle = geometry.spotAngleRadians;\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isLinearLight) {\n          console.warn('THREE.3DMLoader:  No conversion exists for linear lights.');\n          return;\n        }\n\n        if (light) {\n          light.intensity = geometry.intensity;\n          _color = geometry.diffuse;\n          color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          light.color = color;\n          light.userData['attributes'] = attributes;\n          light.userData['objectType'] = obj.objectType;\n        }\n\n        return light;\n    }\n  }\n\n  _initLibrary() {\n    if (!this.libraryPending) {\n      // Load rhino3dm wrapper.\n      const jsLoader = new FileLoader(this.manager);\n      jsLoader.setPath(this.libraryPath);\n      const jsContent = new Promise((resolve, reject) => {\n        jsLoader.load('rhino3dm.js', resolve, undefined, reject);\n      }); // Load rhino3dm WASM binary.\n\n      const binaryLoader = new FileLoader(this.manager);\n      binaryLoader.setPath(this.libraryPath);\n      binaryLoader.setResponseType('arraybuffer');\n      const binaryContent = new Promise((resolve, reject) => {\n        binaryLoader.load('rhino3dm.wasm', resolve, undefined, reject);\n      });\n      this.libraryPending = Promise.all([jsContent, binaryContent]).then(([jsContent, binaryContent]) => {\n        //this.libraryBinary = binaryContent;\n        this.libraryConfig.wasmBinary = binaryContent;\n        const fn = Rhino3dmWorker.toString();\n        const body = ['/* rhino3dm.js */', jsContent, '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n        this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n      });\n    }\n\n    return this.libraryPending;\n  }\n\n  _getWorker(taskCost) {\n    return this._initLibrary().then(() => {\n      if (this.workerPool.length < this.workerLimit) {\n        const worker = new Worker(this.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          libraryConfig: this.libraryConfig\n        });\n\n        worker.onmessage = function (e) {\n          const message = e.data;\n\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n\n              break;\n\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n\n              break;\n\n            default:\n              console.error('THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n\n        this.workerPool.push(worker);\n      } else {\n        this.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n\n      const worker = this.workerPool[this.workerPool.length - 1];\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  }\n\n  _releaseTask(worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  }\n\n  dispose() {\n    for (let i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n\n    this.workerPool.length = 0;\n    return this;\n  }\n\n}\n/* WEB WORKER */\n\n\nfunction Rhino3dmWorker() {\n  let libraryPending;\n  let libraryConfig;\n  let rhino;\n\n  onmessage = function (e) {\n    const message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        libraryConfig = message.libraryConfig;\n        const wasmBinary = libraryConfig.wasmBinary;\n        let RhinoModule;\n        libraryPending = new Promise(function (resolve) {\n          /* Like Basis Loader */\n          RhinoModule = {\n            wasmBinary,\n            onRuntimeInitialized: resolve\n          };\n          rhino3dm(RhinoModule); // eslint-disable-line no-undef\n        }).then(() => {\n          rhino = RhinoModule;\n        });\n        break;\n\n      case 'decode':\n        const buffer = message.buffer;\n        libraryPending.then(() => {\n          const data = decodeObjects(rhino, buffer);\n          self.postMessage({\n            type: 'decode',\n            id: message.id,\n            data\n          });\n        });\n        break;\n    }\n  };\n\n  function decodeObjects(rhino, buffer) {\n    const arr = new Uint8Array(buffer);\n    const doc = rhino.File3dm.fromByteArray(arr);\n    const objects = [];\n    const materials = [];\n    const layers = [];\n    const views = [];\n    const namedViews = [];\n    const groups = []; //Handle objects\n\n    const objs = doc.objects();\n    const cnt = objs.count;\n\n    for (let i = 0; i < cnt; i++) {\n      const _object = objs.get(i);\n\n      const object = extractObjectData(_object, doc);\n\n      _object.delete();\n\n      if (object) {\n        objects.push(object);\n      }\n    } // Handle instance definitions\n    // console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\n\n\n    for (let i = 0; i < doc.instanceDefinitions().count(); i++) {\n      const idef = doc.instanceDefinitions().get(i);\n      const idefAttributes = extractProperties(idef);\n      idefAttributes.objectIds = idef.getObjectIds();\n      objects.push({\n        geometry: null,\n        attributes: idefAttributes,\n        objectType: 'InstanceDefinition'\n      });\n    } // Handle materials\n\n\n    const textureTypes = [// rhino.TextureType.Bitmap,\n    rhino.TextureType.Diffuse, rhino.TextureType.Bump, rhino.TextureType.Transparency, rhino.TextureType.Opacity, rhino.TextureType.Emap];\n    const pbrTextureTypes = [rhino.TextureType.PBR_BaseColor, rhino.TextureType.PBR_Subsurface, rhino.TextureType.PBR_SubsurfaceScattering, rhino.TextureType.PBR_SubsurfaceScatteringRadius, rhino.TextureType.PBR_Metallic, rhino.TextureType.PBR_Specular, rhino.TextureType.PBR_SpecularTint, rhino.TextureType.PBR_Roughness, rhino.TextureType.PBR_Anisotropic, rhino.TextureType.PBR_Anisotropic_Rotation, rhino.TextureType.PBR_Sheen, rhino.TextureType.PBR_SheenTint, rhino.TextureType.PBR_Clearcoat, rhino.TextureType.PBR_ClearcoatBump, rhino.TextureType.PBR_ClearcoatRoughness, rhino.TextureType.PBR_OpacityIor, rhino.TextureType.PBR_OpacityRoughness, rhino.TextureType.PBR_Emission, rhino.TextureType.PBR_AmbientOcclusion, rhino.TextureType.PBR_Displacement];\n\n    for (let i = 0; i < doc.materials().count(); i++) {\n      const _material = doc.materials().get(i);\n\n      const _pbrMaterial = _material.physicallyBased();\n\n      let material = extractProperties(_material);\n      const textures = [];\n\n      for (let j = 0; j < textureTypes.length; j++) {\n        const _texture = _material.getTexture(textureTypes[j]);\n\n        if (_texture) {\n          let textureType = textureTypes[j].constructor.name;\n          textureType = textureType.substring(12, textureType.length);\n          const texture = {\n            type: textureType\n          };\n          const image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n\n          if (image) {\n            texture.image = 'data:image/png;base64,' + image;\n          } else {\n            console.warn(`THREE.3DMLoader: Image for ${textureType} texture not embedded in file.`);\n            texture.image = null;\n          }\n\n          textures.push(texture);\n\n          _texture.delete();\n        }\n      }\n\n      material.textures = textures;\n\n      if (_pbrMaterial.supported) {\n        console.log('pbr true');\n\n        for (let j = 0; j < pbrTextureTypes.length; j++) {\n          const _texture = _material.getTexture(textureTypes[j]);\n\n          if (_texture) {\n            const image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n            let textureType = textureTypes[j].constructor.name;\n            textureType = textureType.substring(12, textureType.length);\n            const texture = {\n              type: textureType,\n              image: 'data:image/png;base64,' + image\n            };\n            textures.push(texture);\n\n            _texture.delete();\n          }\n        }\n\n        const pbMaterialProperties = extractProperties(_material.physicallyBased());\n        material = Object.assign(pbMaterialProperties, material);\n      }\n\n      materials.push(material);\n\n      _material.delete();\n\n      _pbrMaterial.delete();\n    } // Handle layers\n\n\n    for (let i = 0; i < doc.layers().count(); i++) {\n      const _layer = doc.layers().get(i);\n\n      const layer = extractProperties(_layer);\n      layers.push(layer);\n\n      _layer.delete();\n    } // Handle views\n\n\n    for (let i = 0; i < doc.views().count(); i++) {\n      const _view = doc.views().get(i);\n\n      const view = extractProperties(_view);\n      views.push(view);\n\n      _view.delete();\n    } // Handle named views\n\n\n    for (let i = 0; i < doc.namedViews().count(); i++) {\n      const _namedView = doc.namedViews().get(i);\n\n      const namedView = extractProperties(_namedView);\n      namedViews.push(namedView);\n\n      _namedView.delete();\n    } // Handle groups\n\n\n    for (let i = 0; i < doc.groups().count(); i++) {\n      const _group = doc.groups().get(i);\n\n      const group = extractProperties(_group);\n      groups.push(group);\n\n      _group.delete();\n    } // Handle settings\n\n\n    const settings = extractProperties(doc.settings()); //TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\n    // Handle dimstyles\n    // console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\n    // Handle bitmaps\n    // console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\n    // Handle strings -- this seems to be broken at the moment in rhino3dm\n    // console.log( `Document Strings Count: ${doc.strings().count()}` );\n\n    /*\n    for( var i = 0; i < doc.strings().count(); i++ ){\n    var _string= doc.strings().get( i );\n    console.log(_string);\n    var string = extractProperties( _group );\n    strings.push( string );\n    _string.delete();\n    }\n    */\n\n    doc.delete();\n    return {\n      objects,\n      materials,\n      layers,\n      views,\n      namedViews,\n      groups,\n      settings\n    };\n  }\n\n  function extractObjectData(object, doc) {\n    const _geometry = object.geometry();\n\n    const _attributes = object.attributes();\n\n    let objectType = _geometry.objectType;\n    let geometry, attributes, position, data, mesh; // skip instance definition objects\n    //if( _attributes.isInstanceDefinitionObject ) { continue; }\n    // TODO: handle other geometry types\n\n    switch (objectType) {\n      case rhino.ObjectType.Curve:\n        const pts = curveToPoints(_geometry, 100);\n        position = {};\n        attributes = {};\n        data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [];\n\n        for (let j = 0; j < pts.length; j++) {\n          position.array.push(pts[j][0]);\n          position.array.push(pts[j][1]);\n          position.array.push(pts[j][2]);\n        }\n\n        attributes.position = position;\n        data.attributes = attributes;\n        geometry = {\n          data\n        };\n        break;\n\n      case rhino.ObjectType.Point:\n        const pt = _geometry.location;\n        position = {};\n        const color = {};\n        attributes = {};\n        data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [pt[0], pt[1], pt[2]];\n\n        const _color = _attributes.drawColor(doc);\n\n        color.itemSize = 3;\n        color.type = 'Float32Array';\n        color.array = [_color.r / 255.0, _color.g / 255.0, _color.b / 255.0];\n        attributes.position = position;\n        attributes.color = color;\n        data.attributes = attributes;\n        geometry = {\n          data\n        };\n        break;\n\n      case rhino.ObjectType.PointSet:\n      case rhino.ObjectType.Mesh:\n        geometry = _geometry.toThreejsJSON();\n        break;\n\n      case rhino.ObjectType.Brep:\n        const faces = _geometry.faces();\n\n        mesh = new rhino.Mesh();\n\n        for (let faceIndex = 0; faceIndex < faces.count; faceIndex++) {\n          const face = faces.get(faceIndex);\n\n          const _mesh = face.getMesh(rhino.MeshType.Any);\n\n          if (_mesh) {\n            mesh.append(_mesh);\n\n            _mesh.delete();\n          }\n\n          face.delete();\n        }\n\n        if (mesh.faces().count > 0) {\n          mesh.compact();\n          geometry = mesh.toThreejsJSON();\n          faces.delete();\n        }\n\n        mesh.delete();\n        break;\n\n      case rhino.ObjectType.Extrusion:\n        mesh = _geometry.getMesh(rhino.MeshType.Any);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      case rhino.ObjectType.TextDot:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.Light:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.InstanceReference:\n        geometry = extractProperties(_geometry);\n        geometry.xform = extractProperties(_geometry.xform);\n        geometry.xform.array = _geometry.xform.toFloatArray(true);\n        break;\n\n      case rhino.ObjectType.SubD:\n        // TODO: precalculate resulting vertices and faces and warn on excessive results\n        _geometry.subdivide(3);\n\n        mesh = rhino.Mesh.createFromSubDControlNet(_geometry);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      /*\n      case rhino.ObjectType.Annotation:\n      case rhino.ObjectType.Hatch:\n      case rhino.ObjectType.ClipPlane:\n      */\n\n      default:\n        console.warn(`THREE.3DMLoader: TODO: Implement ${objectType.constructor.name}`);\n        break;\n    }\n\n    if (geometry) {\n      attributes = extractProperties(_attributes);\n      attributes.geometry = extractProperties(_geometry);\n\n      if (_attributes.groupCount > 0) {\n        attributes.groupIds = _attributes.getGroupList();\n      }\n\n      if (_attributes.userStringCount > 0) {\n        attributes.userStrings = _attributes.getUserStrings();\n      }\n\n      if (_geometry.userStringCount > 0) {\n        attributes.geometry.userStrings = _geometry.getUserStrings();\n      }\n\n      attributes.drawColor = _attributes.drawColor(doc);\n      objectType = objectType.constructor.name;\n      objectType = objectType.substring(11, objectType.length);\n      return {\n        geometry,\n        attributes,\n        objectType\n      };\n    } else {\n      console.warn(`THREE.3DMLoader: ${objectType.constructor.name} has no associated mesh geometry.`);\n    }\n  }\n\n  function extractProperties(object) {\n    const result = {};\n\n    for (const property in object) {\n      const value = object[property];\n\n      if (typeof value !== 'function') {\n        if (typeof value === 'object' && value !== null && value.hasOwnProperty('constructor')) {\n          result[property] = {\n            name: value.constructor.name,\n            value: value.value\n          };\n        } else {\n          result[property] = value;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function curveToPoints(curve, pointLimit) {\n    let pointCount = pointLimit;\n    let rc = [];\n    const ts = [];\n\n    if (curve instanceof rhino.LineCurve) {\n      return [curve.pointAtStart, curve.pointAtEnd];\n    }\n\n    if (curve instanceof rhino.PolylineCurve) {\n      pointCount = curve.pointCount;\n\n      for (let i = 0; i < pointCount; i++) {\n        rc.push(curve.point(i));\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.PolyCurve) {\n      const segmentCount = curve.segmentCount;\n\n      for (let i = 0; i < segmentCount; i++) {\n        const segment = curve.segmentCurve(i);\n        const segmentArray = curveToPoints(segment, pointCount);\n        rc = rc.concat(segmentArray);\n        segment.delete();\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.ArcCurve) {\n      pointCount = Math.floor(curve.angleDegrees / 5);\n      pointCount = pointCount < 2 ? 2 : pointCount; // alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\n    }\n\n    if (curve instanceof rhino.NurbsCurve && curve.degree === 1) {\n      const pLine = curve.tryGetPolyline();\n\n      for (let i = 0; i < pLine.count; i++) {\n        rc.push(pLine.get(i));\n      }\n\n      pLine.delete();\n      return rc;\n    }\n\n    const domain = curve.domain;\n    const divisions = pointCount - 1.0;\n\n    for (let j = 0; j < pointCount; j++) {\n      const t = domain[0] + j / divisions * (domain[1] - domain[0]);\n\n      if (t === domain[0] || t === domain[1]) {\n        ts.push(t);\n        continue;\n      }\n\n      const tan = curve.tangentAt(t);\n      const prevTan = curve.tangentAt(ts.slice(-1)[0]); // Duplicated from THREE.Vector3\n      // How to pass imports to worker?\n\n      const tS = tan[0] * tan[0] + tan[1] * tan[1] + tan[2] * tan[2];\n      const ptS = prevTan[0] * prevTan[0] + prevTan[1] * prevTan[1] + prevTan[2] * prevTan[2];\n      const denominator = Math.sqrt(tS * ptS);\n      let angle;\n\n      if (denominator === 0) {\n        angle = Math.PI / 2;\n      } else {\n        const theta = (tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z) / denominator;\n        angle = Math.acos(Math.max(-1, Math.min(1, theta)));\n      }\n\n      if (angle < 0.1) continue;\n      ts.push(t);\n    }\n\n    rc = ts.map(t => curve.pointAt(t));\n    return rc;\n  }\n}\n\nexport { Rhino3dmLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}