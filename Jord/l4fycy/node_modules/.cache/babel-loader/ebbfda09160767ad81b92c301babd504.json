{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultLexerErrorProvider = void 0;\nexports.defaultLexerErrorProvider = {\n  buildUnableToPopLexerModeMessage: function buildUnableToPopLexerModeMessage(token) {\n    return \"Unable to pop Lexer Mode after encountering Token ->\".concat(token.image, \"<- The Mode Stack is empty\");\n  },\n  buildUnexpectedCharactersMessage: function buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n    return \"unexpected character: ->\".concat(fullText.charAt(startOffset), \"<- at offset: \").concat(startOffset, \",\") + \" skipped \".concat(length, \" characters.\");\n  }\n};","map":{"version":3,"mappings":";;;;;;AAEaA,oCAAwD;EACnEC,gCAAgC,EAAhC,0CAAiCC,KAAjC,EAA8C;IAC5C,OAAO,8DAAuDA,KAAK,CAACC,KAA7D,EAAkE,4BAAlE,CAAP;EACD,CAHkE;EAKnEC,gCAAgC,EAAhC,0CACEC,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,MALF,EAKiB;IAEf,OACE,kCAA2BJ,QAAQ,CAACK,MAAT,CACzBJ,WADyB,CAA3B,EAEC,gBAFD,EAECK,MAFD,CAEkBL,WAFlB,EAE6B,GAF7B,IAEmC,mBAAYC,MAAZ,EAAkB,cAAlB,CAHrC;EAKD;AAjBkE,CAAxD","names":["exports","buildUnableToPopLexerModeMessage","token","image","buildUnexpectedCharactersMessage","fullText","startOffset","length","line","column","charAt","concat"],"sources":["D:\\Jord\\l4fycy\\node_modules\\chevrotain\\src\\scan\\lexer_errors_public.ts"],"sourcesContent":["import { ILexerErrorMessageProvider, IToken } from \"@chevrotain/types\"\n\nexport const defaultLexerErrorProvider: ILexerErrorMessageProvider = {\n  buildUnableToPopLexerModeMessage(token: IToken): string {\n    return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`\n  },\n\n  buildUnexpectedCharactersMessage(\n    fullText: string,\n    startOffset: number,\n    length: number,\n    line?: number,\n    column?: number\n  ): string {\n    return (\n      `unexpected character: ->${fullText.charAt(\n        startOffset\n      )}<- at offset: ${startOffset},` + ` skipped ${length} characters.`\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}