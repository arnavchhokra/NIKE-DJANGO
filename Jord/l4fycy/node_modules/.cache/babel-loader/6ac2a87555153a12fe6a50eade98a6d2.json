{"ast":null,"code":"import _classCallCheck from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport CameraNode from './CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\n\nvar NormalNode = /*#__PURE__*/function (_Node) {\n  _inherits(NormalNode, _Node);\n\n  var _super = _createSuper(NormalNode);\n\n  function NormalNode() {\n    var _this;\n\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NormalNode.LOCAL;\n\n    _classCallCheck(this, NormalNode);\n\n    _this = _super.call(this, 'vec3');\n    _this.scope = scope;\n    return _this;\n  }\n\n  _createClass(NormalNode, [{\n    key: \"getHash\",\n    value: function getHash() {\n      return \"normal-\".concat(this.scope);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n      var outputNode = null;\n\n      if (scope === NormalNode.GEOMETRY) {\n        outputNode = new AttributeNode('normal', 'vec3');\n      } else if (scope === NormalNode.LOCAL) {\n        outputNode = new VaryNode(new NormalNode(NormalNode.GEOMETRY));\n      } else if (scope === NormalNode.VIEW) {\n        var vertexNormalNode = new OperatorNode('*', new ModelNode(ModelNode.NORMAL_MATRIX), new NormalNode(NormalNode.LOCAL));\n        outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n      } else if (scope === NormalNode.WORLD) {\n        // To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n        var _vertexNormalNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new NormalNode(NormalNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n\n        outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(_vertexNormalNode));\n      }\n\n      return outputNode.build(builder);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(NormalNode.prototype), \"serialize\", this).call(this, data);\n\n      data.scope = this.scope;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(NormalNode.prototype), \"deserialize\", this).call(this, data);\n\n      this.scope = data.scope;\n    }\n  }]);\n\n  return NormalNode;\n}(Node);\n\n_defineProperty(NormalNode, \"GEOMETRY\", 'geometry');\n\n_defineProperty(NormalNode, \"LOCAL\", 'local');\n\n_defineProperty(NormalNode, \"WORLD\", 'world');\n\n_defineProperty(NormalNode, \"VIEW\", 'view');\n\nexport default NormalNode;","map":{"version":3,"names":["_defineProperty","Node","AttributeNode","VaryNode","ModelNode","CameraNode","OperatorNode","MathNode","NormalNode","scope","LOCAL","builder","outputNode","GEOMETRY","VIEW","vertexNormalNode","NORMAL_MATRIX","NORMALIZE","WORLD","TRANSFORM_DIRECTION","VIEW_MATRIX","build","data"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/three-stdlib/nodes/accessors/NormalNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport CameraNode from './CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\n\nclass NormalNode extends Node {\n  constructor(scope = NormalNode.LOCAL) {\n    super('vec3');\n    this.scope = scope;\n  }\n\n  getHash() {\n    return `normal-${this.scope}`;\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n    let outputNode = null;\n\n    if (scope === NormalNode.GEOMETRY) {\n      outputNode = new AttributeNode('normal', 'vec3');\n    } else if (scope === NormalNode.LOCAL) {\n      outputNode = new VaryNode(new NormalNode(NormalNode.GEOMETRY));\n    } else if (scope === NormalNode.VIEW) {\n      const vertexNormalNode = new OperatorNode('*', new ModelNode(ModelNode.NORMAL_MATRIX), new NormalNode(NormalNode.LOCAL));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    } else if (scope === NormalNode.WORLD) {\n      // To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n      const vertexNormalNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new NormalNode(NormalNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    }\n\n    return outputNode.build(builder);\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n\n}\n\n_defineProperty(NormalNode, \"GEOMETRY\", 'geometry');\n\n_defineProperty(NormalNode, \"LOCAL\", 'local');\n\n_defineProperty(NormalNode, \"WORLD\", 'world');\n\n_defineProperty(NormalNode, \"VIEW\", 'view');\n\nexport default NormalNode;\n"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;IAEMC,U;;;;;EACJ,sBAAsC;IAAA;;IAAA,IAA1BC,KAA0B,uEAAlBD,UAAU,CAACE,KAAO;;IAAA;;IACpC,0BAAM,MAAN;IACA,MAAKD,KAAL,GAAaA,KAAb;IAFoC;EAGrC;;;;WAED,mBAAU;MACR,wBAAiB,KAAKA,KAAtB;IACD;;;WAED,kBAASE,OAAT,EAAkB;MAChB,IAAMF,KAAK,GAAG,KAAKA,KAAnB;MACA,IAAIG,UAAU,GAAG,IAAjB;;MAEA,IAAIH,KAAK,KAAKD,UAAU,CAACK,QAAzB,EAAmC;QACjCD,UAAU,GAAG,IAAIV,aAAJ,CAAkB,QAAlB,EAA4B,MAA5B,CAAb;MACD,CAFD,MAEO,IAAIO,KAAK,KAAKD,UAAU,CAACE,KAAzB,EAAgC;QACrCE,UAAU,GAAG,IAAIT,QAAJ,CAAa,IAAIK,UAAJ,CAAeA,UAAU,CAACK,QAA1B,CAAb,CAAb;MACD,CAFM,MAEA,IAAIJ,KAAK,KAAKD,UAAU,CAACM,IAAzB,EAA+B;QACpC,IAAMC,gBAAgB,GAAG,IAAIT,YAAJ,CAAiB,GAAjB,EAAsB,IAAIF,SAAJ,CAAcA,SAAS,CAACY,aAAxB,CAAtB,EAA8D,IAAIR,UAAJ,CAAeA,UAAU,CAACE,KAA1B,CAA9D,CAAzB;QACAE,UAAU,GAAG,IAAIL,QAAJ,CAAaA,QAAQ,CAACU,SAAtB,EAAiC,IAAId,QAAJ,CAAaY,gBAAb,CAAjC,CAAb;MACD,CAHM,MAGA,IAAIN,KAAK,KAAKD,UAAU,CAACU,KAAzB,EAAgC;QACrC;QACA,IAAMH,iBAAgB,GAAG,IAAIR,QAAJ,CAAaA,QAAQ,CAACY,mBAAtB,EAA2C,IAAIX,UAAJ,CAAeA,UAAU,CAACM,IAA1B,CAA3C,EAA4E,IAAIT,UAAJ,CAAeA,UAAU,CAACe,WAA1B,CAA5E,CAAzB;;QACAR,UAAU,GAAG,IAAIL,QAAJ,CAAaA,QAAQ,CAACU,SAAtB,EAAiC,IAAId,QAAJ,CAAaY,iBAAb,CAAjC,CAAb;MACD;;MAED,OAAOH,UAAU,CAACS,KAAX,CAAiBV,OAAjB,CAAP;IACD;;;WAED,mBAAUW,IAAV,EAAgB;MACd,0EAAgBA,IAAhB;;MACAA,IAAI,CAACb,KAAL,GAAa,KAAKA,KAAlB;IACD;;;WAED,qBAAYa,IAAZ,EAAkB;MAChB,4EAAkBA,IAAlB;;MACA,KAAKb,KAAL,GAAaa,IAAI,CAACb,KAAlB;IACD;;;;EAtCsBR,I;;AA0CzBD,eAAe,CAACQ,UAAD,EAAa,UAAb,EAAyB,UAAzB,CAAf;;AAEAR,eAAe,CAACQ,UAAD,EAAa,OAAb,EAAsB,OAAtB,CAAf;;AAEAR,eAAe,CAACQ,UAAD,EAAa,OAAb,EAAsB,OAAtB,CAAf;;AAEAR,eAAe,CAACQ,UAAD,EAAa,MAAb,EAAqB,MAArB,CAAf;;AAEA,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}