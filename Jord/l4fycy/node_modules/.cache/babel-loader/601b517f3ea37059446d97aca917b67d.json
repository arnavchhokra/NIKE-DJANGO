{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"object\", \"children\", \"deep\", \"castShadow\", \"receiveShadow\", \"inject\", \"keys\"],\n    _excluded2 = [\"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\n\nfunction createSpread(child, _ref) {\n  var _ref$keys = _ref.keys,\n      keys = _ref$keys === void 0 ? ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData'] : _ref$keys,\n      deep = _ref.deep,\n      inject = _ref.inject,\n      castShadow = _ref.castShadow,\n      receiveShadow = _ref.receiveShadow;\n  var spread = pick(child, keys);\n\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n\n  if (inject) {\n    if (typeof inject === 'function') spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject(child)\n    });else if ( /*#__PURE__*/React.isValidElement(inject)) spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject\n    });else spread = _objectSpread(_objectSpread({}, spread), inject);\n  }\n\n  if (child.type === 'Mesh') {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n\n  return spread;\n}\n\nvar Clone = /*#__PURE__*/React.forwardRef(function (_ref2, forwardRef) {\n  var object = _ref2.object,\n      children = _ref2.children,\n      deep = _ref2.deep,\n      castShadow = _ref2.castShadow,\n      receiveShadow = _ref2.receiveShadow,\n      inject = _ref2.inject,\n      keys = _ref2.keys,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var config = {\n    keys: keys,\n    deep: deep,\n    inject: inject,\n    castShadow: castShadow,\n    receiveShadow: receiveShadow\n  }; // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(function (o) {\n      return /*#__PURE__*/React.createElement(Clone, _extends({\n        key: o.uuid,\n        object: o\n      }, config));\n    }), children);\n  } // Singleton clones\n\n\n  var _createSpread = createSpread(object, config),\n      injectChildren = _createSpread.children,\n      spread = _objectWithoutProperties(_createSpread, _excluded2);\n\n  var Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), (object == null ? void 0 : object.children).map(function (child) {\n    var spread = {};\n    var Element = child.type[0].toLowerCase() + child.type.slice(1);\n\n    if (Element === 'group' || Element === 'object3D') {\n      Element = Clone;\n      spread = _objectSpread({\n        object: child\n      }, config);\n    } else {\n      spread = createSpread(child, config);\n    }\n\n    return /*#__PURE__*/React.createElement(Element, _extends({\n      key: child.uuid\n    }, spread));\n  }), children, injectChildren);\n});\nexport { Clone };","map":{"version":3,"names":["_extends","React","pick","createSpread","child","keys","deep","inject","castShadow","receiveShadow","spread","geometry","clone","material","children","isValidElement","type","Clone","forwardRef","object","props","config","Array","isArray","createElement","ref","map","o","key","uuid","injectChildren","Element","toLowerCase","slice"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/@react-three/drei/core/Clone.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = pick(child, keys);\n\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n\n  if (inject) {\n    if (typeof inject === 'function') spread = { ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = { ...spread,\n      children: inject\n    };else spread = { ...spread,\n      ...inject\n    };\n  }\n\n  if (child.type === 'Mesh') {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n\n  return spread;\n}\n\nconst Clone = /*#__PURE__*/React.forwardRef(({\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  }; // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  } // Singleton clones\n\n\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), (object == null ? void 0 : object.children).map(child => {\n    let spread = {};\n    let Element = child.type[0].toLowerCase() + child.type.slice(1);\n\n    if (Element === 'group' || Element === 'object3D') {\n      Element = Clone;\n      spread = {\n        object: child,\n        ...config\n      };\n    } else {\n      spread = createSpread(child, config);\n    }\n\n    return /*#__PURE__*/React.createElement(Element, _extends({\n      key: child.uuid\n    }, spread));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}