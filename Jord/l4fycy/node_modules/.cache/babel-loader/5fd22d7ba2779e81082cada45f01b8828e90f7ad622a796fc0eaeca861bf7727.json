{"ast":null,"code":"import React from'react';import App from'./App';import'./Main.css';import ProductPage from'./ProductPage/ProductPage';import{BrowserRouter as Router,Routes,Route,Link}from'react-router-dom';import Cart from'./Cart/Cart';import Signup from'./User/Signup';import Login from'./User/Login';import SingleProductPage from'./SingleProductPage/SingleProductPage';import Profile from'./User/Profile';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(){const login_api=async(email,password,success,fail)=>{const response=await fetch(\"http://127.0.0.1:8000/User/api/token/\",{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})});const text=await response.text();if(response.status===200){console.log(\"success\",JSON.parse(text));success(JSON.parse(text));}else{console.log(\"failed\",text);Object.entries(JSON.parse(text)).forEach(_ref=>{let[key,value]=_ref;fail(\"\".concat(key,\": \").concat(value));});}};const signup_api=async(name,email,password,password2,success,fail)=>{// Check if the passwords match\nif(password!==password2){fail(\"password2: Passwords do not match\");return;}// Make the API request\nconst response=await fetch(\"http://127.0.0.1:8000/User/User/Register/\",{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({name:name,email:email,password:password,password2:password2})});const text=await response.text();if(response.status===201){console.log(\"success\",JSON.parse(text));success(JSON.parse(text));}else{console.log(\"failed\",text);Object.entries(JSON.parse(text)).forEach(_ref2=>{let[key,value]=_ref2;fail(\"\".concat(key,\": \").concat(value));});}};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(App,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Products\",element:/*#__PURE__*/_jsx(ProductPage,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Cart\",element:/*#__PURE__*/_jsx(Cart,{})}),/*#__PURE__*/_jsx(Route,{path:\"/Profile\",element:/*#__PURE__*/_jsx(Profile,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Signup\",element:/*#__PURE__*/_jsx(Signup,{signup_api:signup_api})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Login\",element:/*#__PURE__*/_jsx(Login,{login_api:login_api})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Products/:id\",element:/*#__PURE__*/_jsx(SingleProductPage,{})})]})});}export default Main;","map":{"version":3,"names":["React","App","ProductPage","BrowserRouter","Router","Routes","Route","Link","Cart","Signup","Login","SingleProductPage","Profile","jsx","_jsx","jsxs","_jsxs","Main","login_api","email","password","success","fail","response","fetch","method","headers","Accept","body","JSON","stringify","text","status","console","log","parse","Object","entries","forEach","_ref","key","value","concat","signup_api","name","password2","_ref2","children","exact","path","element"],"sources":["D:/Repos/NIKE-DJANGO/Jord/l4fycy/src/Main.js"],"sourcesContent":["import React from 'react'\r\nimport App from './App'\r\nimport './Main.css'\r\nimport ProductPage from './ProductPage/ProductPage'\r\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom'\r\nimport Cart from './Cart/Cart'\r\nimport Signup from './User/Signup'\r\nimport Login from './User/Login'\r\nimport SingleProductPage from './SingleProductPage/SingleProductPage'\r\nimport Profile from './User/Profile'\r\n\r\nfunction Main() {\r\n  const login_api = async (email, password, success, fail) => {\r\n    const response = await fetch(`http://127.0.0.1:8000/User/api/token/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    });\r\n    const text = await response.text();\r\n    if (response.status === 200) {\r\n      console.log(\"success\", JSON.parse(text));\r\n      success(JSON.parse(text));\r\n    } else {\r\n      console.log(\"failed\", text);\r\n      Object.entries(JSON.parse(text)).forEach(([key, value]) => {\r\n        fail(`${key}: ${value}`);\r\n      });\r\n    }\r\n  };\r\n\r\n  const signup_api = async (name, email, password, password2, success, fail) => {\r\n    // Check if the passwords match\r\n    if (password !== password2) {\r\n      fail(\"password2: Passwords do not match\");\r\n      return;\r\n    }\r\n  \r\n    // Make the API request\r\n    const response = await fetch(\"http://127.0.0.1:8000/User/User/Register/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        password2: password2,\r\n      }),\r\n    });\r\n  \r\n    const text = await response.text();\r\n  \r\n    if (response.status === 201) {\r\n      console.log(\"success\", JSON.parse(text));\r\n      success(JSON.parse(text));\r\n    } else {\r\n      console.log(\"failed\", text);\r\n      Object.entries(JSON.parse(text)).forEach(([key, value]) => {\r\n        fail(`${key}: ${value}`);\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<App />}></Route>\r\n        <Route exact path=\"/Products\" element={<ProductPage />}></Route>\r\n        <Route exact path=\"/Cart\" element={<Cart />}></Route>\r\n        <Route path=\"/Profile\" element={<Profile />} />\r\n        <Route exact path=\"/Signup\" element={<Signup signup_api={signup_api} />}></Route>\r\n        <Route exact path=\"/Login\" element={<Login  login_api={login_api} />}></Route>\r\n        <Route exact path=\"/Products/:id\" element={<SingleProductPage />}></Route>\r\n      </Routes>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Main\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}