{"ast":null,"code":"'use client';\n\nimport { TRANSITION_EASINGS, getSlideTransition, withDelay } from \"./chunk-6NHXDBFO.mjs\";\n\n// src/slide.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants = {\n  exit: _ref => {\n    let {\n      direction,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n    var _a;\n    const {\n      exit: exitStyles\n    } = getSlideTransition({\n      direction\n    });\n    return {\n      ...exitStyles,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: _ref2 => {\n    let {\n      direction,\n      transitionEnd,\n      transition,\n      delay\n    } = _ref2;\n    var _a;\n    const {\n      enter: enterStyles\n    } = getSlideTransition({\n      direction\n    });\n    return {\n      ...enterStyles,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nvar Slide = forwardRef(function Slide2(props, ref) {\n  const {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    motionProps,\n    ...rest\n  } = props;\n  const transitionStyles = getSlideTransition({\n    direction\n  });\n  const computedStyle = Object.assign({\n    position: \"fixed\"\n  }, transitionStyles.position, style);\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = {\n    transitionEnd,\n    transition,\n    direction,\n    delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, {\n      ...rest,\n      ref,\n      initial: \"exit\",\n      className: cx(\"chakra-slide\", className),\n      animate,\n      exit: \"exit\",\n      custom,\n      variants,\n      style: computedStyle,\n      ...motionProps\n    })\n  });\n});\nSlide.displayName = \"Slide\";\nexport { Slide };","map":{"version":3,"names":["cx","AnimatePresence","motion","forwardRef","jsx","defaultTransition","exit","duration","ease","TRANSITION_EASINGS","easeInOut","enter","type","damping","stiffness","variants","_ref","direction","transition","transitionEnd","delay","_a","exitStyles","getSlideTransition","withDelay","_ref2","enterStyles","Slide","Slide2","props","ref","style","unmountOnExit","in","isOpen","className","motionProps","rest","transitionStyles","computedStyle","Object","assign","position","show","animate","custom","children","div","initial","displayName"],"sources":["D:\\Github\\NIKE-DJANGO\\Jord\\l4fycy\\node_modules\\@chakra-ui\\transition\\src\\slide.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants as TVariants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  SlideDirection,\n  getSlideTransition,\n  TRANSITION_EASINGS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport type { SlideDirection }\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut,\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180,\n  },\n}\n\nconst variants: Variants<SlideOptions> = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = getSlideTransition({ direction })\n    return {\n      ...exitStyles,\n      transition:\n        transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit,\n    }\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = getSlideTransition({ direction })\n    return {\n      ...enterStyles,\n      transition:\n        transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter,\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n}\n\nexport interface SlideProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    SlideOptions {\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nexport const Slide = forwardRef<HTMLDivElement, SlideProps>(function Slide(\n  props,\n  ref,\n) {\n  const {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    motionProps,\n    ...rest\n  } = props\n\n  const transitionStyles = getSlideTransition({ direction })\n  const computedStyle: MotionStyle = Object.assign(\n    { position: \"fixed\" },\n    transitionStyles.position,\n    style,\n  )\n\n  const show = unmountOnExit ? isOpen && unmountOnExit : true\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n  const custom = { transitionEnd, transition, direction, delay }\n\n  return (\n    <AnimatePresence custom={custom}>\n      {show && (\n        <motion.div\n          {...rest}\n          ref={ref}\n          initial=\"exit\"\n          className={cx(\"chakra-slide\", className)}\n          animate={animate}\n          exit=\"exit\"\n          custom={custom}\n          variants={variants as TVariants}\n          style={computedStyle}\n          {...motionProps}\n        />\n      )}\n    </AnimatePresence>\n  )\n})\n\nSlide.displayName = \"Slide\"\n"],"mappings":";;;;;AAAA,SAASA,EAAA,QAAU;AACnB,SACEC,eAAA,EAEAC,MAAA,QAGK;AACP,SAASC,UAAA,QAAkB;AA2FnB,SAAAC,GAAA;AA/ER,IAAMC,iBAAA,GAAoB;EACxBC,IAAA,EAAM;IACJC,QAAA,EAAU;IACVC,IAAA,EAAMC,kBAAA,CAAmBC;EAC3B;EACAC,KAAA,EAAO;IACLC,IAAA,EAAM;IACNC,OAAA,EAAS;IACTC,SAAA,EAAW;EACb;AACF;AAEA,IAAMC,QAAA,GAAmC;EACvCT,IAAA,EAAMU,IAAA,IAAqD;IAAA,IAApD;MAAEC,SAAA;MAAWC,UAAA;MAAYC,aAAA;MAAeC;IAAM,IAAAJ,IAAA;IAjCvD,IAAAK,EAAA;IAkCI,MAAM;MAAEf,IAAA,EAAMgB;IAAW,IAAIC,kBAAA,CAAmB;MAAEN;IAAU,CAAC;IAC7D,OAAO;MACL,GAAGK,UAAA;MACHJ,UAAA,GACEG,EAAA,GAAAH,UAAA,oBAAAA,UAAA,CAAYZ,IAAA,KAAZ,OAAAe,EAAA,GAAoBG,SAAA,CAAUlB,IAAA,CAAKD,iBAAA,CAAkBC,IAAA,EAAMc,KAAK;MAClED,aAAA,EAAeA,aAAA,oBAAAA,aAAA,CAAeb;IAChC;EACF;EACAK,KAAA,EAAOc,KAAA,IAAqD;IAAA,IAApD;MAAER,SAAA;MAAWE,aAAA;MAAeD,UAAA;MAAYE;IAAM,IAAAK,KAAA;IA1CxD,IAAAJ,EAAA;IA2CI,MAAM;MAAEV,KAAA,EAAOe;IAAY,IAAIH,kBAAA,CAAmB;MAAEN;IAAU,CAAC;IAC/D,OAAO;MACL,GAAGS,WAAA;MACHR,UAAA,GACEG,EAAA,GAAAH,UAAA,oBAAAA,UAAA,CAAYP,KAAA,KAAZ,OAAAU,EAAA,GAAqBG,SAAA,CAAUb,KAAA,CAAMN,iBAAA,CAAkBM,KAAA,EAAOS,KAAK;MACrED,aAAA,EAAeA,aAAA,oBAAAA,aAAA,CAAeR;IAChC;EACF;AACF;AAgBO,IAAMgB,KAAA,GAAQxB,UAAA,CAAuC,SAASyB,OACnEC,KAAA,EACAC,GAAA,EACA;EACA,MAAM;IACJb,SAAA,GAAY;IACZc,KAAA;IACAC,aAAA;IACAC,EAAA,EAAIC,MAAA;IACJC,SAAA;IACAjB,UAAA;IACAC,aAAA;IACAC,KAAA;IACAgB,WAAA;IACA,GAAGC;EACL,IAAIR,KAAA;EAEJ,MAAMS,gBAAA,GAAmBf,kBAAA,CAAmB;IAAEN;EAAU,CAAC;EACzD,MAAMsB,aAAA,GAA6BC,MAAA,CAAOC,MAAA,CACxC;IAAEC,QAAA,EAAU;EAAQ,GACpBJ,gBAAA,CAAiBI,QAAA,EACjBX,KACF;EAEA,MAAMY,IAAA,GAAOX,aAAA,GAAgBE,MAAA,IAAUF,aAAA,GAAgB;EACvD,MAAMY,OAAA,GAAUV,MAAA,IAAUF,aAAA,GAAgB,UAAU;EAEpD,MAAMa,MAAA,GAAS;IAAE1B,aAAA;IAAeD,UAAA;IAAYD,SAAA;IAAWG;EAAM;EAE7D,OACE,eAAAhB,GAAA,CAACH,eAAA;IAAgB4C,MAAA;IACdC,QAAA,EAAAH,IAAA,IACC,eAAAvC,GAAA,CAACF,MAAA,CAAO6C,GAAA,EAAP;MACE,GAAGV,IAAA;MACJP,GAAA;MACAkB,OAAA,EAAQ;MACRb,SAAA,EAAWnC,EAAA,CAAG,gBAAgBmC,SAAS;MACvCS,OAAA;MACAtC,IAAA,EAAK;MACLuC,MAAA;MACA9B,QAAA;MACAgB,KAAA,EAAOQ,aAAA;MACN,GAAGH;IAAA,CACN;EAAA,CAEJ;AAEJ,CAAC;AAEDT,KAAA,CAAMsB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}