{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\nimport { vector } from '../core/NodeBuilder.js';\n\nvar SplitNode = /*#__PURE__*/function (_Node) {\n  _inherits(SplitNode, _Node);\n\n  var _super = _createSuper(SplitNode);\n\n  function SplitNode(node) {\n    var _this;\n\n    var components = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n\n    _classCallCheck(this, SplitNode);\n\n    _this = _super.call(this);\n    _this.node = node;\n    _this.components = components;\n    return _this;\n  }\n\n  _createClass(SplitNode, [{\n    key: \"getVectorLength\",\n    value: function getVectorLength() {\n      var vectorLength = this.components.length;\n\n      var _iterator = _createForOfIteratorHelper(this.components),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var c = _step.value;\n          vectorLength = Math.max(vector.indexOf(c) + 1, vectorLength);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return vectorLength;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return builder.getTypeFromLength(this.components.length);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var node = this.node;\n      var nodeTypeLength = builder.getTypeLength(node.getNodeType(builder));\n\n      if (nodeTypeLength > 1) {\n        var type = null;\n        var componentsLength = this.getVectorLength();\n\n        if (componentsLength >= nodeTypeLength) {\n          // need expand the input node\n          type = builder.getTypeFromLength(this.getVectorLength());\n        }\n\n        var nodeSnippet = node.build(builder, type);\n        return \"\".concat(nodeSnippet, \".\").concat(this.components);\n      } else {\n        // ignore components if node is a float\n        return node.build(builder);\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(SplitNode.prototype), \"serialize\", this).call(this, data);\n\n      data.components = this.components;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(SplitNode.prototype), \"deserialize\", this).call(this, data);\n\n      this.components = data.components;\n    }\n  }]);\n\n  return SplitNode;\n}(Node);\n\nexport default SplitNode;","map":{"version":3,"names":["Node","vector","SplitNode","node","components","vectorLength","length","c","Math","max","indexOf","builder","getTypeFromLength","nodeTypeLength","getTypeLength","getNodeType","type","componentsLength","getVectorLength","nodeSnippet","build","data"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/nodes/utils/SplitNode.js"],"sourcesContent":["import Node from '../core/Node.js';\r\nimport { vector } from '../core/NodeBuilder.js';\r\n\r\nclass SplitNode extends Node {\r\n  constructor(node, components = 'x') {\r\n    super();\r\n    this.node = node;\r\n    this.components = components;\r\n  }\r\n\r\n  getVectorLength() {\r\n    let vectorLength = this.components.length;\r\n\r\n    for (const c of this.components) {\r\n      vectorLength = Math.max(vector.indexOf(c) + 1, vectorLength);\r\n    }\r\n\r\n    return vectorLength;\r\n  }\r\n\r\n  getNodeType(builder) {\r\n    return builder.getTypeFromLength(this.components.length);\r\n  }\r\n\r\n  generate(builder) {\r\n    const node = this.node;\r\n    const nodeTypeLength = builder.getTypeLength(node.getNodeType(builder));\r\n\r\n    if (nodeTypeLength > 1) {\r\n      let type = null;\r\n      const componentsLength = this.getVectorLength();\r\n\r\n      if (componentsLength >= nodeTypeLength) {\r\n        // need expand the input node\r\n        type = builder.getTypeFromLength(this.getVectorLength());\r\n      }\r\n\r\n      const nodeSnippet = node.build(builder, type);\r\n      return `${nodeSnippet}.${this.components}`;\r\n    } else {\r\n      // ignore components if node is a float\r\n      return node.build(builder);\r\n    }\r\n  }\r\n\r\n  serialize(data) {\r\n    super.serialize(data);\r\n    data.components = this.components;\r\n  }\r\n\r\n  deserialize(data) {\r\n    super.deserialize(data);\r\n    this.components = data.components;\r\n  }\r\n\r\n}\r\n\r\nexport default SplitNode;\r\n"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;IAEMC,S;;;;;EACJ,mBAAYC,IAAZ,EAAoC;IAAA;;IAAA,IAAlBC,UAAkB,uEAAL,GAAK;;IAAA;;IAClC;IACA,MAAKD,IAAL,GAAYA,IAAZ;IACA,MAAKC,UAAL,GAAkBA,UAAlB;IAHkC;EAInC;;;;WAED,2BAAkB;MAChB,IAAIC,YAAY,GAAG,KAAKD,UAAL,CAAgBE,MAAnC;;MADgB,2CAGA,KAAKF,UAHL;MAAA;;MAAA;QAGhB,oDAAiC;UAAA,IAAtBG,CAAsB;UAC/BF,YAAY,GAAGG,IAAI,CAACC,GAAL,CAASR,MAAM,CAACS,OAAP,CAAeH,CAAf,IAAoB,CAA7B,EAAgCF,YAAhC,CAAf;QACD;MALe;QAAA;MAAA;QAAA;MAAA;;MAOhB,OAAOA,YAAP;IACD;;;WAED,qBAAYM,OAAZ,EAAqB;MACnB,OAAOA,OAAO,CAACC,iBAAR,CAA0B,KAAKR,UAAL,CAAgBE,MAA1C,CAAP;IACD;;;WAED,kBAASK,OAAT,EAAkB;MAChB,IAAMR,IAAI,GAAG,KAAKA,IAAlB;MACA,IAAMU,cAAc,GAAGF,OAAO,CAACG,aAAR,CAAsBX,IAAI,CAACY,WAAL,CAAiBJ,OAAjB,CAAtB,CAAvB;;MAEA,IAAIE,cAAc,GAAG,CAArB,EAAwB;QACtB,IAAIG,IAAI,GAAG,IAAX;QACA,IAAMC,gBAAgB,GAAG,KAAKC,eAAL,EAAzB;;QAEA,IAAID,gBAAgB,IAAIJ,cAAxB,EAAwC;UACtC;UACAG,IAAI,GAAGL,OAAO,CAACC,iBAAR,CAA0B,KAAKM,eAAL,EAA1B,CAAP;QACD;;QAED,IAAMC,WAAW,GAAGhB,IAAI,CAACiB,KAAL,CAAWT,OAAX,EAAoBK,IAApB,CAApB;QACA,iBAAUG,WAAV,cAAyB,KAAKf,UAA9B;MACD,CAXD,MAWO;QACL;QACA,OAAOD,IAAI,CAACiB,KAAL,CAAWT,OAAX,CAAP;MACD;IACF;;;WAED,mBAAUU,IAAV,EAAgB;MACd,yEAAgBA,IAAhB;;MACAA,IAAI,CAACjB,UAAL,GAAkB,KAAKA,UAAvB;IACD;;;WAED,qBAAYiB,IAAZ,EAAkB;MAChB,2EAAkBA,IAAlB;;MACA,KAAKjB,UAAL,GAAkBiB,IAAI,CAACjB,UAAvB;IACD;;;;EAlDqBJ,I;;AAsDxB,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}