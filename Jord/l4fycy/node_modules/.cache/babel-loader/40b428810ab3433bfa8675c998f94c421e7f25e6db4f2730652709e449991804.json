{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshStandardMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nclass WobbleMaterialImpl extends MeshStandardMaterial {\n  constructor() {\n    let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._factor = {\n      value: 1\n    };\n  }\n\n  // FIXME Use `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.factor = this._factor;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float factor;\\n      \".concat(shader.vertexShader, \"\\n    \");\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"float theta = sin( time + position.y ) / 2.0 * factor;\\n        float c = cos( theta );\\n        float s = sin( theta );\\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\\n        vec3 transformed = vec3( position ) * m;\\n        vNormal = vNormal * m;\");\n  }\n  get time() {\n    return this._time.value;\n  }\n  set time(v) {\n    this._time.value = v;\n  }\n  get factor() {\n    return this._factor.value;\n  }\n  set factor(v) {\n    this._factor.value = v;\n  }\n}\nconst MeshWobbleMaterial = /* @__PURE__ */React.forwardRef((_ref, ref) => {\n  let {\n    speed = 1,\n    ...props\n  } = _ref;\n  const [material] = React.useState(() => new WobbleMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { MeshWobbleMaterial };","map":{"version":3,"names":["_extends","React","MeshStandardMaterial","useFrame","WobbleMaterialImpl","constructor","parameters","arguments","length","undefined","setValues","_time","value","_factor","onBeforeCompile","shader","uniforms","time","factor","vertexShader","concat","replace","v","MeshWobbleMaterial","forwardRef","_ref","ref","speed","props","material","useState","state","clock","getElapsedTime","createElement","object","attach"],"sources":["D:/Repos/NIKE-DJANGO/Jord/l4fycy/node_modules/@react-three/drei/core/MeshWobbleMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { MeshStandardMaterial } from 'three';\r\nimport { useFrame } from '@react-three/fiber';\r\n\r\nclass WobbleMaterialImpl extends MeshStandardMaterial {\r\n  constructor(parameters = {}) {\r\n    super(parameters);\r\n    this.setValues(parameters);\r\n    this._time = {\r\n      value: 0\r\n    };\r\n    this._factor = {\r\n      value: 1\r\n    };\r\n  }\r\n\r\n  // FIXME Use `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\r\n  onBeforeCompile(shader) {\r\n    shader.uniforms.time = this._time;\r\n    shader.uniforms.factor = this._factor;\r\n    shader.vertexShader = `\r\n      uniform float time;\r\n      uniform float factor;\r\n      ${shader.vertexShader}\r\n    `;\r\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `float theta = sin( time + position.y ) / 2.0 * factor;\r\n        float c = cos( theta );\r\n        float s = sin( theta );\r\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\r\n        vec3 transformed = vec3( position ) * m;\r\n        vNormal = vNormal * m;`);\r\n  }\r\n  get time() {\r\n    return this._time.value;\r\n  }\r\n  set time(v) {\r\n    this._time.value = v;\r\n  }\r\n  get factor() {\r\n    return this._factor.value;\r\n  }\r\n  set factor(v) {\r\n    this._factor.value = v;\r\n  }\r\n}\r\nconst MeshWobbleMaterial = /* @__PURE__ */React.forwardRef(({\r\n  speed = 1,\r\n  ...props\r\n}, ref) => {\r\n  const [material] = React.useState(() => new WobbleMaterialImpl());\r\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: material,\r\n    ref: ref,\r\n    attach: \"material\"\r\n  }, props));\r\n});\r\n\r\nexport { MeshWobbleMaterial };\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,oBAAoB,QAAQ,OAAO;AAC5C,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,MAAMC,kBAAkB,SAASF,oBAAoB,CAAC;EACpDG,WAAWA,CAAA,EAAkB;IAAA,IAAjBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACzB,KAAK,CAACD,UAAU,CAAC;IACjB,IAAI,CAACI,SAAS,CAACJ,UAAU,CAAC;IAC1B,IAAI,CAACK,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;IACD,IAAI,CAACC,OAAO,GAAG;MACbD,KAAK,EAAE;IACT,CAAC;EACH;;EAEA;EACAE,eAAeA,CAACC,MAAM,EAAE;IACtBA,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACN,KAAK;IACjCI,MAAM,CAACC,QAAQ,CAACE,MAAM,GAAG,IAAI,CAACL,OAAO;IACrCE,MAAM,CAACI,YAAY,sEAAAC,MAAA,CAGfL,MAAM,CAACI,YAAY,WACtB;IACDJ,MAAM,CAACI,YAAY,GAAGJ,MAAM,CAACI,YAAY,CAACE,OAAO,CAAC,yBAAyB,oQAKhD,CAAC;EAC9B;EACA,IAAIJ,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACN,KAAK,CAACC,KAAK;EACzB;EACA,IAAIK,IAAIA,CAACK,CAAC,EAAE;IACV,IAAI,CAACX,KAAK,CAACC,KAAK,GAAGU,CAAC;EACtB;EACA,IAAIJ,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACL,OAAO,CAACD,KAAK;EAC3B;EACA,IAAIM,MAAMA,CAACI,CAAC,EAAE;IACZ,IAAI,CAACT,OAAO,CAACD,KAAK,GAAGU,CAAC;EACxB;AACF;AACA,MAAMC,kBAAkB,GAAG,eAAetB,KAAK,CAACuB,UAAU,CAAC,CAAAC,IAAA,EAGxDC,GAAG,KAAK;EAAA,IAHiD;IAC1DC,KAAK,GAAG,CAAC;IACT,GAAGC;EACL,CAAC,GAAAH,IAAA;EACC,MAAM,CAACI,QAAQ,CAAC,GAAG5B,KAAK,CAAC6B,QAAQ,CAAC,MAAM,IAAI1B,kBAAkB,CAAC,CAAC,CAAC;EACjED,QAAQ,CAAC4B,KAAK,IAAIF,QAAQ,KAAKA,QAAQ,CAACZ,IAAI,GAAGc,KAAK,CAACC,KAAK,CAACC,cAAc,CAAC,CAAC,GAAGN,KAAK,CAAC,CAAC;EACrF,OAAO,aAAa1B,KAAK,CAACiC,aAAa,CAAC,WAAW,EAAElC,QAAQ,CAAC;IAC5DmC,MAAM,EAAEN,QAAQ;IAChBH,GAAG,EAAEA,GAAG;IACRU,MAAM,EAAE;EACV,CAAC,EAAER,KAAK,CAAC,CAAC;AACZ,CAAC,CAAC;AAEF,SAASL,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}