{"ast":null,"code":"import { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from \"three\";\nclass AnimationClipCreator {\n  static CreateRotationAnimation(period) {\n    let axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"x\";\n    const times = [0, period],\n      values = [0, 360];\n    const trackName = \".rotation[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n  static CreateScaleAxisAnimation(period) {\n    let axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"x\";\n    const times = [0, period],\n      values = [0, 1];\n    const trackName = \".scale[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n  static CreateShakeAnimation(duration, shakeScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      tmp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).multiply(shakeScale).toArray(values, values.length);\n    }\n    const trackName = \".position\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreatePulsationAnimation(duration, pulseScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      const scaleFactor = Math.random() * pulseScale;\n      tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n    }\n    const trackName = \".scale\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreateVisibilityAnimation(duration) {\n    const times = [0, duration / 2, duration],\n      values = [true, false, true];\n    const trackName = \".visible\";\n    const track = new BooleanKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreateMaterialColorAnimation(duration, colors) {\n    const times = [],\n      values = [],\n      timeStep = duration / colors.length;\n    for (let i = 0; i < colors.length; i++) {\n      times.push(i * timeStep);\n      const color = colors[i];\n      values.push(color.r, color.g, color.b);\n    }\n    const trackName = \".material.color\";\n    const track = new ColorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n}\nexport { AnimationClipCreator };","map":{"version":3,"names":["AnimationClipCreator","CreateRotationAnimation","period","axis","arguments","length","undefined","times","values","trackName","track","NumberKeyframeTrack","AnimationClip","CreateScaleAxisAnimation","CreateShakeAnimation","duration","shakeScale","tmp","Vector3","i","push","set","Math","random","multiply","toArray","VectorKeyframeTrack","CreatePulsationAnimation","pulseScale","scaleFactor","CreateVisibilityAnimation","BooleanKeyframeTrack","CreateMaterialColorAnimation","colors","timeStep","color","r","g","b","ColorKeyframeTrack"],"sources":["D:\\Repos\\NIKE-DJANGO\\Jord\\l4fycy\\node_modules\\src\\animation\\AnimationClipCreator.js"],"sourcesContent":["import {\n  AnimationClip,\n  BooleanKeyframeTrack,\n  ColorKeyframeTrack,\n  NumberKeyframeTrack,\n  Vector3,\n  VectorKeyframeTrack,\n} from 'three'\n\nclass AnimationClipCreator {\n  static CreateRotationAnimation(period, axis = 'x') {\n    const times = [0, period],\n      values = [0, 360]\n\n    const trackName = '.rotation[' + axis + ']'\n\n    const track = new NumberKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, period, [track])\n  }\n\n  static CreateScaleAxisAnimation(period, axis = 'x') {\n    const times = [0, period],\n      values = [0, 1]\n\n    const trackName = '.scale[' + axis + ']'\n\n    const track = new NumberKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, period, [track])\n  }\n\n  static CreateShakeAnimation(duration, shakeScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3()\n\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10)\n\n      tmp\n        .set(Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0)\n        .multiply(shakeScale)\n        .toArray(values, values.length)\n    }\n\n    const trackName = '.position'\n\n    const track = new VectorKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, duration, [track])\n  }\n\n  static CreatePulsationAnimation(duration, pulseScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3()\n\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10)\n\n      const scaleFactor = Math.random() * pulseScale\n      tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length)\n    }\n\n    const trackName = '.scale'\n\n    const track = new VectorKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, duration, [track])\n  }\n\n  static CreateVisibilityAnimation(duration) {\n    const times = [0, duration / 2, duration],\n      values = [true, false, true]\n\n    const trackName = '.visible'\n\n    const track = new BooleanKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, duration, [track])\n  }\n\n  static CreateMaterialColorAnimation(duration, colors) {\n    const times = [],\n      values = [],\n      timeStep = duration / colors.length\n\n    for (let i = 0; i < colors.length; i++) {\n      times.push(i * timeStep)\n\n      const color = colors[i]\n      values.push(color.r, color.g, color.b)\n    }\n\n    const trackName = '.material.color'\n\n    const track = new ColorKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, duration, [track])\n  }\n}\n\nexport { AnimationClipCreator }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}