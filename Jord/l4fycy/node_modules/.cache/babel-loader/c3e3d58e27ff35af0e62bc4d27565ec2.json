{"ast":null,"code":"import _slicedToArray from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"mixBlur\", \"mixStrength\", \"resolution\", \"blur\", \"args\", \"minDepthThreshold\", \"maxDepthThreshold\", \"depthScale\", \"depthToBlurRatioBias\", \"mirror\", \"children\", \"debug\", \"distortion\", \"mixContrast\", \"distortionMap\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\nextend({\n  MeshReflectorMaterial: MeshReflectorMaterial\n});\nvar Reflector = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$mixBlur = _ref.mixBlur,\n      mixBlur = _ref$mixBlur === void 0 ? 0 : _ref$mixBlur,\n      _ref$mixStrength = _ref.mixStrength,\n      mixStrength = _ref$mixStrength === void 0 ? 0.5 : _ref$mixStrength,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n      _ref$blur = _ref.blur,\n      blur = _ref$blur === void 0 ? [0, 0] : _ref$blur,\n      _ref$args = _ref.args,\n      args = _ref$args === void 0 ? [1, 1] : _ref$args,\n      _ref$minDepthThreshol = _ref.minDepthThreshold,\n      minDepthThreshold = _ref$minDepthThreshol === void 0 ? 0.9 : _ref$minDepthThreshol,\n      _ref$maxDepthThreshol = _ref.maxDepthThreshold,\n      maxDepthThreshold = _ref$maxDepthThreshol === void 0 ? 1 : _ref$maxDepthThreshol,\n      _ref$depthScale = _ref.depthScale,\n      depthScale = _ref$depthScale === void 0 ? 0 : _ref$depthScale,\n      _ref$depthToBlurRatio = _ref.depthToBlurRatioBias,\n      depthToBlurRatioBias = _ref$depthToBlurRatio === void 0 ? 0.25 : _ref$depthToBlurRatio,\n      _ref$mirror = _ref.mirror,\n      mirror = _ref$mirror === void 0 ? 0 : _ref$mirror,\n      children = _ref.children,\n      _ref$debug = _ref.debug,\n      debug = _ref$debug === void 0 ? 0 : _ref$debug,\n      _ref$distortion = _ref.distortion,\n      distortion = _ref$distortion === void 0 ? 1 : _ref$distortion,\n      _ref$mixContrast = _ref.mixContrast,\n      mixContrast = _ref$mixContrast === void 0 ? 1 : _ref$mixContrast,\n      distortionMap = _ref.distortionMap,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  React.useEffect(function () {\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\n  }, []);\n  var gl = useThree(function (_ref2) {\n    var gl = _ref2.gl;\n    return gl;\n  });\n  var camera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var scene = useThree(function (_ref4) {\n    var scene = _ref4.scene;\n    return scene;\n  });\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  var hasBlur = blur[0] + blur[1] > 0;\n  var meshRef = React.useRef(null);\n\n  var _React$useState = React.useState(function () {\n    return new Plane();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      reflectorPlane = _React$useState2[0];\n\n  var _React$useState3 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      normal = _React$useState4[0];\n\n  var _React$useState5 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      reflectorWorldPosition = _React$useState6[0];\n\n  var _React$useState7 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 1),\n      cameraWorldPosition = _React$useState8[0];\n\n  var _React$useState9 = React.useState(function () {\n    return new Matrix4();\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 1),\n      rotationMatrix = _React$useState10[0];\n\n  var _React$useState11 = React.useState(function () {\n    return new Vector3(0, 0, -1);\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 1),\n      lookAtPosition = _React$useState12[0];\n\n  var _React$useState13 = React.useState(function () {\n    return new Vector4();\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 1),\n      clipPlane = _React$useState14[0];\n\n  var _React$useState15 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState16 = _slicedToArray(_React$useState15, 1),\n      view = _React$useState16[0];\n\n  var _React$useState17 = React.useState(function () {\n    return new Vector3();\n  }),\n      _React$useState18 = _slicedToArray(_React$useState17, 1),\n      target = _React$useState18[0];\n\n  var _React$useState19 = React.useState(function () {\n    return new Vector4();\n  }),\n      _React$useState20 = _slicedToArray(_React$useState19, 1),\n      q = _React$useState20[0];\n\n  var _React$useState21 = React.useState(function () {\n    return new Matrix4();\n  }),\n      _React$useState22 = _slicedToArray(_React$useState21, 1),\n      textureMatrix = _React$useState22[0];\n\n  var _React$useState23 = React.useState(function () {\n    return new PerspectiveCamera();\n  }),\n      _React$useState24 = _slicedToArray(_React$useState23, 1),\n      virtualCamera = _React$useState24[0];\n\n  var beforeRender = React.useCallback(function () {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    var projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, []);\n\n  var _React$useMemo = React.useMemo(function () {\n    var parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      encoding: gl.outputEncoding\n    };\n    var fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    var fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    var blurpass = new BlurPass({\n      gl: gl,\n      resolution: resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold: minDepthThreshold,\n      maxDepthThreshold: maxDepthThreshold,\n      depthScale: depthScale,\n      depthToBlurRatioBias: depthToBlurRatioBias\n    });\n    var reflectorProps = {\n      mirror: mirror,\n      textureMatrix: textureMatrix,\n      mixBlur: mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur: hasBlur,\n      mixStrength: mixStrength,\n      minDepthThreshold: minDepthThreshold,\n      maxDepthThreshold: maxDepthThreshold,\n      depthScale: depthScale,\n      depthToBlurRatioBias: depthToBlurRatioBias,\n      transparent: true,\n      debug: debug,\n      distortion: distortion,\n      distortionMap: distortionMap,\n      mixContrast: mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 4),\n      fbo1 = _React$useMemo2[0],\n      fbo2 = _React$useMemo2[1],\n      blurpass = _React$useMemo2[2],\n      reflectorProps = _React$useMemo2[3];\n\n  useFrame(function () {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    var currentXrEnabled = gl.xr.enabled;\n    var currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\nexport { Reflector };","map":{"version":3,"names":["_extends","React","Plane","Vector3","Matrix4","Vector4","PerspectiveCamera","LinearFilter","WebGLRenderTarget","DepthTexture","DepthFormat","UnsignedShortType","extend","useThree","useFrame","mergeRefs","BlurPass","MeshReflectorMaterial","Reflector","forwardRef","ref","mixBlur","mixStrength","resolution","blur","args","minDepthThreshold","maxDepthThreshold","depthScale","depthToBlurRatioBias","mirror","children","debug","distortion","mixContrast","distortionMap","props","useEffect","console","warn","gl","camera","scene","Array","isArray","hasBlur","meshRef","useRef","useState","reflectorPlane","normal","reflectorWorldPosition","cameraWorldPosition","rotationMatrix","lookAtPosition","clipPlane","view","target","q","textureMatrix","virtualCamera","beforeRender","useCallback","setFromMatrixPosition","current","matrixWorld","extractRotation","set","applyMatrix4","subVectors","dot","reflect","negate","add","position","copy","up","lookAt","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","x","y","z","constant","Math","sign","elements","w","multiplyScalar","useMemo","parameters","minFilter","magFilter","encoding","outputEncoding","fbo1","depthBuffer","depthTexture","format","type","fbo2","blurpass","width","height","reflectorProps","tDiffuse","texture","tDepth","tDiffuseBlur","transparent","undefined","visible","currentXrEnabled","xr","enabled","currentShadowAutoUpdate","shadowMap","autoUpdate","setRenderTarget","state","buffers","depth","setMask","autoClear","clear","render","createElement"],"sources":["D:/Jord/l4fycy/node_modules/@react-three/drei/core/Reflector.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\n\nextend({\n  MeshReflectorMaterial\n});\nconst Reflector = /*#__PURE__*/React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 0.5,\n  resolution = 256,\n  blur = [0, 0],\n  args = [1, 1],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  children,\n  debug = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  ...props\n}, ref) => {\n  React.useEffect(() => {\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\n  }, []);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const meshRef = React.useRef(null);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, []);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      encoding: gl.outputEncoding\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      transparent: true,\n      debug,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\n\nexport { Reflector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}