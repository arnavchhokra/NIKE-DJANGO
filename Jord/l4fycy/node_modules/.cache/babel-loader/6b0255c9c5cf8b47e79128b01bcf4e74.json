{"ast":null,"code":"import _objectSpread from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"scale\", \"frames\", \"opacity\", \"width\", \"height\", \"blur\", \"far\", \"resolution\", \"smooth\", \"color\", \"depthWrite\", \"renderOrder\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\nvar ContactShadows = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$scale = _ref.scale,\n      scale = _ref$scale === void 0 ? 10 : _ref$scale,\n      _ref$frames = _ref.frames,\n      frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n      _ref$opacity = _ref.opacity,\n      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 1 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 1 : _ref$height,\n      _ref$blur = _ref.blur,\n      blur = _ref$blur === void 0 ? 1 : _ref$blur,\n      _ref$far = _ref.far,\n      far = _ref$far === void 0 ? 10 : _ref$far,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 512 : _ref$resolution,\n      _ref$smooth = _ref.smooth,\n      smooth = _ref$smooth === void 0 ? true : _ref$smooth,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? '#000000' : _ref$color,\n      _ref$depthWrite = _ref.depthWrite,\n      depthWrite = _ref$depthWrite === void 0 ? false : _ref$depthWrite,\n      renderOrder = _ref.renderOrder,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var scene = useThree(function (state) {\n    return state.scene;\n  });\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n\n  var _React$useMemo = React.useMemo(function () {\n    var renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    var renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    var planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\n    var blurPlane = new THREE.Mesh(planeGeometry);\n    var depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = function (shader) {\n      shader.uniforms = _objectSpread(_objectSpread({}, shader.uniforms), {}, {\n        ucolor: {\n          value: new THREE.Color(color).convertSRGBToLinear()\n        }\n      });\n      shader.fragmentShader = shader.fragmentShader.replace(\"void main() {\", //\n      \"uniform vec3 ucolor;\\n           void main() {\\n          \");\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', 'vec4( ucolor, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    var horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    var verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 7),\n      renderTarget = _React$useMemo2[0],\n      planeGeometry = _React$useMemo2[1],\n      depthMaterial = _React$useMemo2[2],\n      blurPlane = _React$useMemo2[3],\n      horizontalBlurMaterial = _React$useMemo2[4],\n      verticalBlurMaterial = _React$useMemo2[5],\n      renderTargetBlur = _React$useMemo2[6];\n\n  var blurShadows = function blurShadows(blur) {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n\n  var count = 0;\n  useFrame(function () {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      var initialBackground = scene.background;\n      scene.background = null;\n      var initialOverrideMaterial = scene.overrideMaterial;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = initialOverrideMaterial;\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    \"map-encoding\": gl.outputEncoding,\n    transparent: true,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\nexport { ContactShadows };","map":{"version":3,"names":["_extends","React","THREE","useThree","useFrame","HorizontalBlurShader","VerticalBlurShader","ContactShadows","forwardRef","ref","scale","frames","Infinity","opacity","width","height","blur","far","resolution","smooth","color","depthWrite","renderOrder","props","scene","state","gl","shadowCamera","useRef","Array","isArray","useMemo","renderTarget","WebGLRenderTarget","renderTargetBlur","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","rotateX","Math","PI","blurPlane","Mesh","depthMaterial","MeshDepthMaterial","depthTest","onBeforeCompile","shader","uniforms","ucolor","value","Color","convertSRGBToLinear","fragmentShader","replace","horizontalBlurMaterial","ShaderMaterial","verticalBlurMaterial","blurShadows","visible","material","tDiffuse","h","setRenderTarget","render","current","v","count","initialBackground","background","initialOverrideMaterial","overrideMaterial","createElement","geometry","rotation","map","outputEncoding","transparent","args"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/@react-three/drei/core/ContactShadows.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\n  scale = 10,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  far = 10,\n  resolution = 512,\n  smooth = true,\n  color = '#000000',\n  depthWrite = false,\n  renderOrder,\n  ...props\n}, ref) => {\n  const scene = useThree(state => state.scene);\n  const gl = useThree(state => state.gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => {\n      shader.uniforms = { ...shader.uniforms,\n        ucolor: {\n          value: new THREE.Color(color).convertSRGBToLinear()\n        }\n      };\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`, //\n      `uniform vec3 ucolor;\n           void main() {\n          `);\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', 'vec4( ucolor, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]);\n\n  const blurShadows = blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n\n  let count = 0;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      const initialBackground = scene.background;\n      scene.background = null;\n      const initialOverrideMaterial = scene.overrideMaterial;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = initialOverrideMaterial;\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    \"map-encoding\": gl.outputEncoding,\n    transparent: true,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nexport { ContactShadows };\n"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,cAAzD;AAEA,IAAMC,cAAc,GAAG,aAAaN,KAAK,CAACO,UAAN,CAAiB,gBAclDC,GAdkD,EAc1C;EAAA,sBAbTC,KAaS;EAAA,IAbTA,KAaS,2BAbD,EAaC;EAAA,uBAZTC,MAYS;EAAA,IAZTA,MAYS,4BAZAC,QAYA;EAAA,wBAXTC,OAWS;EAAA,IAXTA,OAWS,6BAXC,CAWD;EAAA,sBAVTC,KAUS;EAAA,IAVTA,KAUS,2BAVD,CAUC;EAAA,uBATTC,MASS;EAAA,IATTA,MASS,4BATA,CASA;EAAA,qBARTC,IAQS;EAAA,IARTA,IAQS,0BARF,CAQE;EAAA,oBAPTC,GAOS;EAAA,IAPTA,GAOS,yBAPH,EAOG;EAAA,2BANTC,UAMS;EAAA,IANTA,UAMS,gCANI,GAMJ;EAAA,uBALTC,MAKS;EAAA,IALTA,MAKS,4BALA,IAKA;EAAA,sBAJTC,KAIS;EAAA,IAJTA,KAIS,2BAJD,SAIC;EAAA,2BAHTC,UAGS;EAAA,IAHTA,UAGS,gCAHI,KAGJ;EAAA,IAFTC,WAES,QAFTA,WAES;EAAA,IADNC,KACM;;EACT,IAAMC,KAAK,GAAGrB,QAAQ,CAAC,UAAAsB,KAAK;IAAA,OAAIA,KAAK,CAACD,KAAV;EAAA,CAAN,CAAtB;EACA,IAAME,EAAE,GAAGvB,QAAQ,CAAC,UAAAsB,KAAK;IAAA,OAAIA,KAAK,CAACC,EAAV;EAAA,CAAN,CAAnB;EACA,IAAMC,YAAY,GAAG1B,KAAK,CAAC2B,MAAN,CAAa,IAAb,CAArB;EACAd,KAAK,GAAGA,KAAK,IAAIe,KAAK,CAACC,OAAN,CAAcpB,KAAd,IAAuBA,KAAK,CAAC,CAAD,CAA5B,GAAkCA,KAAK,IAAI,CAA/C,CAAb;EACAK,MAAM,GAAGA,MAAM,IAAIc,KAAK,CAACC,OAAN,CAAcpB,KAAd,IAAuBA,KAAK,CAAC,CAAD,CAA5B,GAAkCA,KAAK,IAAI,CAA/C,CAAf;;EACA,qBAAgIT,KAAK,CAAC8B,OAAN,CAAc,YAAM;IAClJ,IAAMC,YAAY,GAAG,IAAI9B,KAAK,CAAC+B,iBAAV,CAA4Bf,UAA5B,EAAwCA,UAAxC,CAArB;IACA,IAAMgB,gBAAgB,GAAG,IAAIhC,KAAK,CAAC+B,iBAAV,CAA4Bf,UAA5B,EAAwCA,UAAxC,CAAzB;IACAgB,gBAAgB,CAACC,OAAjB,CAAyBC,eAAzB,GAA2CJ,YAAY,CAACG,OAAb,CAAqBC,eAArB,GAAuC,KAAlF;IACA,IAAMC,aAAa,GAAG,IAAInC,KAAK,CAACoC,mBAAV,CAA8BxB,KAA9B,EAAqCC,MAArC,EAA6CwB,OAA7C,CAAqDC,IAAI,CAACC,EAAL,GAAU,CAA/D,CAAtB;IACA,IAAMC,SAAS,GAAG,IAAIxC,KAAK,CAACyC,IAAV,CAAeN,aAAf,CAAlB;IACA,IAAMO,aAAa,GAAG,IAAI1C,KAAK,CAAC2C,iBAAV,EAAtB;IACAD,aAAa,CAACE,SAAd,GAA0BF,aAAa,CAACvB,UAAd,GAA2B,KAArD;;IAEAuB,aAAa,CAACG,eAAd,GAAgC,UAAAC,MAAM,EAAI;MACxCA,MAAM,CAACC,QAAP,mCAAuBD,MAAM,CAACC,QAA9B;QACEC,MAAM,EAAE;UACNC,KAAK,EAAE,IAAIjD,KAAK,CAACkD,KAAV,CAAgBhC,KAAhB,EAAuBiC,mBAAvB;QADD;MADV;MAKAL,MAAM,CAACM,cAAP,GAAwBN,MAAM,CAACM,cAAP,CAAsBC,OAAtB,kBAA+C;MAA/C,6DAAxB;MAIAP,MAAM,CAACM,cAAP,GAAwBN,MAAM,CAACM,cAAP,CAAsBC,OAAtB,CAA8B,4CAA9B,EAA4E,6CAA5E,CAAxB;IACD,CAXD;;IAaA,IAAMC,sBAAsB,GAAG,IAAItD,KAAK,CAACuD,cAAV,CAAyBpD,oBAAzB,CAA/B;IACA,IAAMqD,oBAAoB,GAAG,IAAIxD,KAAK,CAACuD,cAAV,CAAyBnD,kBAAzB,CAA7B;IACAoD,oBAAoB,CAACZ,SAArB,GAAiCU,sBAAsB,CAACV,SAAvB,GAAmC,KAApE;IACA,OAAO,CAACd,YAAD,EAAeK,aAAf,EAA8BO,aAA9B,EAA6CF,SAA7C,EAAwDc,sBAAxD,EAAgFE,oBAAhF,EAAsGxB,gBAAtG,CAAP;EACD,CA1B+H,EA0B7H,CAAChB,UAAD,EAAaJ,KAAb,EAAoBC,MAApB,EAA4BL,KAA5B,EAAmCU,KAAnC,CA1B6H,CAAhI;EAAA;EAAA,IAAOY,YAAP;EAAA,IAAqBK,aAArB;EAAA,IAAoCO,aAApC;EAAA,IAAmDF,SAAnD;EAAA,IAA8Dc,sBAA9D;EAAA,IAAsFE,oBAAtF;EAAA,IAA4GxB,gBAA5G;;EA4BA,IAAMyB,WAAW,GAAG,SAAdA,WAAc,CAAA3C,IAAI,EAAI;IAC1B0B,SAAS,CAACkB,OAAV,GAAoB,IAApB;IACAlB,SAAS,CAACmB,QAAV,GAAqBL,sBAArB;IACAA,sBAAsB,CAACP,QAAvB,CAAgCa,QAAhC,CAAyCX,KAAzC,GAAiDnB,YAAY,CAACG,OAA9D;IACAqB,sBAAsB,CAACP,QAAvB,CAAgCc,CAAhC,CAAkCZ,KAAlC,GAA0CnC,IAAI,GAAG,CAAP,GAAW,GAArD;IACAU,EAAE,CAACsC,eAAH,CAAmB9B,gBAAnB;IACAR,EAAE,CAACuC,MAAH,CAAUvB,SAAV,EAAqBf,YAAY,CAACuC,OAAlC;IACAxB,SAAS,CAACmB,QAAV,GAAqBH,oBAArB;IACAA,oBAAoB,CAACT,QAArB,CAA8Ba,QAA9B,CAAuCX,KAAvC,GAA+CjB,gBAAgB,CAACC,OAAhE;IACAuB,oBAAoB,CAACT,QAArB,CAA8BkB,CAA9B,CAAgChB,KAAhC,GAAwCnC,IAAI,GAAG,CAAP,GAAW,GAAnD;IACAU,EAAE,CAACsC,eAAH,CAAmBhC,YAAnB;IACAN,EAAE,CAACuC,MAAH,CAAUvB,SAAV,EAAqBf,YAAY,CAACuC,OAAlC;IACAxB,SAAS,CAACkB,OAAV,GAAoB,KAApB;EACD,CAbD;;EAeA,IAAIQ,KAAK,GAAG,CAAZ;EACAhE,QAAQ,CAAC,YAAM;IACb,IAAIuB,YAAY,CAACuC,OAAb,KAAyBvD,MAAM,KAAKC,QAAX,IAAuBwD,KAAK,GAAGzD,MAAxD,CAAJ,EAAqE;MACnE,IAAM0D,iBAAiB,GAAG7C,KAAK,CAAC8C,UAAhC;MACA9C,KAAK,CAAC8C,UAAN,GAAmB,IAAnB;MACA,IAAMC,uBAAuB,GAAG/C,KAAK,CAACgD,gBAAtC;MACAhD,KAAK,CAACgD,gBAAN,GAAyB5B,aAAzB;MACAlB,EAAE,CAACsC,eAAH,CAAmBhC,YAAnB;MACAN,EAAE,CAACuC,MAAH,CAAUzC,KAAV,EAAiBG,YAAY,CAACuC,OAA9B;MACA1C,KAAK,CAACgD,gBAAN,GAAyBD,uBAAzB;MACAZ,WAAW,CAAC3C,IAAD,CAAX;MACA,IAAIG,MAAJ,EAAYwC,WAAW,CAAC3C,IAAI,GAAG,GAAR,CAAX;MACZU,EAAE,CAACsC,eAAH,CAAmB,IAAnB;MACAxC,KAAK,CAAC8C,UAAN,GAAmBD,iBAAnB;MACAD,KAAK;IACN;EACF,CAfO,CAAR;EAgBA,OAAO,aAAanE,KAAK,CAACwE,aAAN,CAAoB,OAApB,EAA6BzE,QAAQ,CAAC;IACxD,cAAcwC,IAAI,CAACC,EAAL,GAAU;EADgC,CAAD,EAEtDlB,KAFsD,EAE/C;IACRd,GAAG,EAAEA;EADG,CAF+C,CAArC,EAIhB,aAAaR,KAAK,CAACwE,aAAN,CAAoB,MAApB,EAA4B;IAC3CnD,WAAW,EAAEA,WAD8B;IAE3CoD,QAAQ,EAAErC,aAFiC;IAG3C3B,KAAK,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAHoC;IAI3CiE,QAAQ,EAAE,CAAC,CAACnC,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB;EAJiC,CAA5B,EAKd,aAAaxC,KAAK,CAACwE,aAAN,CAAoB,mBAApB,EAAyC;IACvDG,GAAG,EAAE5C,YAAY,CAACG,OADqC;IAEvD,gBAAgBT,EAAE,CAACmD,cAFoC;IAGvDC,WAAW,EAAE,IAH0C;IAIvDjE,OAAO,EAAEA,OAJ8C;IAKvDQ,UAAU,EAAEA;EAL2C,CAAzC,CALC,CAJG,EAef,aAAapB,KAAK,CAACwE,aAAN,CAAoB,oBAApB,EAA0C;IAC1DhE,GAAG,EAAEkB,YADqD;IAE1DoD,IAAI,EAAE,CAAC,CAACjE,KAAD,GAAS,CAAV,EAAaA,KAAK,GAAG,CAArB,EAAwBC,MAAM,GAAG,CAAjC,EAAoC,CAACA,MAAD,GAAU,CAA9C,EAAiD,CAAjD,EAAoDE,GAApD;EAFoD,CAA1C,CAfE,CAApB;AAmBD,CAnGmC,CAApC;AAqGA,SAASV,cAAT"},"metadata":{},"sourceType":"module"}