{"ast":null,"code":"import _slicedToArray from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nfunction clamp(v, min, max) {\n  return Math.max(min, Math.min(v, max));\n}\n\nvar V = {\n  toVector: function toVector(v, fallback) {\n    if (v === undefined) v = fallback;\n    return Array.isArray(v) ? v : [v, v];\n  },\n  add: function add(v1, v2) {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n  },\n  sub: function sub(v1, v2) {\n    return [v1[0] - v2[0], v1[1] - v2[1]];\n  },\n  addTo: function addTo(v1, v2) {\n    v1[0] += v2[0];\n    v1[1] += v2[1];\n  },\n  subTo: function subTo(v1, v2) {\n    v1[0] -= v2[0];\n    v1[1] -= v2[1];\n  }\n};\n\nfunction rubberband(distance, dimension, constant) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return Math.pow(distance, constant * 5);\n  return distance * dimension * constant / (dimension + constant * distance);\n}\n\nfunction rubberbandIfOutOfBounds(position, min, max) {\n  var constant = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.15;\n  if (constant === 0) return clamp(position, min, max);\n  if (position < min) return -rubberband(min - position, max - min, constant) + min;\n  if (position > max) return +rubberband(position - max, max - min, constant) + max;\n  return position;\n}\n\nfunction computeRubberband(bounds, _ref, _ref2) {\n  var _ref3 = _slicedToArray(_ref, 2),\n      Vx = _ref3[0],\n      Vy = _ref3[1];\n\n  var _ref4 = _slicedToArray(_ref2, 2),\n      Rx = _ref4[0],\n      Ry = _ref4[1];\n\n  var _bounds = _slicedToArray(bounds, 2),\n      _bounds$ = _slicedToArray(_bounds[0], 2),\n      X0 = _bounds$[0],\n      X1 = _bounds$[1],\n      _bounds$2 = _slicedToArray(_bounds[1], 2),\n      Y0 = _bounds$2[0],\n      Y1 = _bounds$2[1];\n\n  return [rubberbandIfOutOfBounds(Vx, X0, X1, Rx), rubberbandIfOutOfBounds(Vy, Y0, Y1, Ry)];\n}\n\nexport { V, computeRubberband as c, rubberbandIfOutOfBounds as r };","map":{"version":3,"names":["clamp","v","min","max","Math","V","toVector","fallback","undefined","Array","isArray","add","v1","v2","sub","addTo","subTo","rubberband","distance","dimension","constant","abs","Infinity","pow","rubberbandIfOutOfBounds","position","computeRubberband","bounds","Vx","Vy","Rx","Ry","X0","X1","Y0","Y1","c","r"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/@use-gesture/core/dist/maths-b2a210f4.esm.js"],"sourcesContent":["function clamp(v, min, max) {\n  return Math.max(min, Math.min(v, max));\n}\nconst V = {\n  toVector(v, fallback) {\n    if (v === undefined) v = fallback;\n    return Array.isArray(v) ? v : [v, v];\n  },\n\n  add(v1, v2) {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n  },\n\n  sub(v1, v2) {\n    return [v1[0] - v2[0], v1[1] - v2[1]];\n  },\n\n  addTo(v1, v2) {\n    v1[0] += v2[0];\n    v1[1] += v2[1];\n  },\n\n  subTo(v1, v2) {\n    v1[0] -= v2[0];\n    v1[1] -= v2[1];\n  }\n\n};\n\nfunction rubberband(distance, dimension, constant) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return Math.pow(distance, constant * 5);\n  return distance * dimension * constant / (dimension + constant * distance);\n}\n\nfunction rubberbandIfOutOfBounds(position, min, max, constant = 0.15) {\n  if (constant === 0) return clamp(position, min, max);\n  if (position < min) return -rubberband(min - position, max - min, constant) + min;\n  if (position > max) return +rubberband(position - max, max - min, constant) + max;\n  return position;\n}\nfunction computeRubberband(bounds, [Vx, Vy], [Rx, Ry]) {\n  const [[X0, X1], [Y0, Y1]] = bounds;\n  return [rubberbandIfOutOfBounds(Vx, X0, X1, Rx), rubberbandIfOutOfBounds(Vy, Y0, Y1, Ry)];\n}\n\nexport { V, computeRubberband as c, rubberbandIfOutOfBounds as r };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}