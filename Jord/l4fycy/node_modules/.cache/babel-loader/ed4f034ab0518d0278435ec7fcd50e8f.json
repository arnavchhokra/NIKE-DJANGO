{"ast":null,"code":"import _classCallCheck from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { OrthographicCamera, PlaneGeometry, Mesh } from 'three';\n\nvar Pass = /*#__PURE__*/function () {\n  function Pass() {\n    _classCallCheck(this, Pass);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"needsSwap\", true);\n\n    _defineProperty(this, \"clear\", false);\n\n    _defineProperty(this, \"renderToScreen\", false);\n  }\n\n  _createClass(Pass, [{\n    key: \"setSize\",\n    value: function setSize(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /* eslint-disable no-unused-vars */\n    width, height) {}\n  }, {\n    key: \"render\",\n    value: function render(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /* eslint-disable no-unused-vars */\n    renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n      console.error('THREE.Pass: .render() must be implemented in derived pass.');\n    }\n  }]);\n\n  return Pass;\n}(); // Helper for passes that need to fill the viewport with a single quad.\n\n\nvar FullScreenQuad = /*#__PURE__*/function () {\n  function FullScreenQuad(material) {\n    _classCallCheck(this, FullScreenQuad);\n\n    _defineProperty(this, \"camera\", new OrthographicCamera(-1, 1, 1, -1, 0, 1));\n\n    _defineProperty(this, \"geometry\", new PlaneGeometry(2, 2));\n\n    _defineProperty(this, \"mesh\", void 0);\n\n    this.mesh = new Mesh(this.geometry, material);\n  }\n\n  _createClass(FullScreenQuad, [{\n    key: \"material\",\n    get: function get() {\n      return this.mesh.material;\n    },\n    set: function set(value) {\n      this.mesh.material = value;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.mesh.geometry.dispose();\n    }\n  }, {\n    key: \"render\",\n    value: function render(renderer) {\n      renderer.render(this.mesh, this.camera);\n    }\n  }]);\n\n  return FullScreenQuad;\n}();\n\nexport { FullScreenQuad, Pass };","map":{"version":3,"names":["_defineProperty","OrthographicCamera","PlaneGeometry","Mesh","Pass","width","height","renderer","writeBuffer","readBuffer","deltaTime","maskActive","console","error","FullScreenQuad","material","mesh","geometry","value","dispose","render","camera"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/postprocessing/Pass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\r\nimport { OrthographicCamera, PlaneGeometry, Mesh } from 'three';\r\n\r\nclass Pass {\r\n  constructor() {\r\n    _defineProperty(this, \"enabled\", true);\r\n\r\n    _defineProperty(this, \"needsSwap\", true);\r\n\r\n    _defineProperty(this, \"clear\", false);\r\n\r\n    _defineProperty(this, \"renderToScreen\", false);\r\n  }\r\n\r\n  setSize(\r\n  /* eslint-disable @typescript-eslint/no-unused-vars */\r\n\r\n  /* eslint-disable no-unused-vars */\r\n  width, height) {}\r\n\r\n  render(\r\n  /* eslint-disable @typescript-eslint/no-unused-vars */\r\n\r\n  /* eslint-disable no-unused-vars */\r\n  renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\r\n    console.error('THREE.Pass: .render() must be implemented in derived pass.');\r\n  }\r\n\r\n} // Helper for passes that need to fill the viewport with a single quad.\r\n\r\n\r\nclass FullScreenQuad {\r\n  constructor(material) {\r\n    _defineProperty(this, \"camera\", new OrthographicCamera(-1, 1, 1, -1, 0, 1));\r\n\r\n    _defineProperty(this, \"geometry\", new PlaneGeometry(2, 2));\r\n\r\n    _defineProperty(this, \"mesh\", void 0);\r\n\r\n    this.mesh = new Mesh(this.geometry, material);\r\n  }\r\n\r\n  get material() {\r\n    return this.mesh.material;\r\n  }\r\n\r\n  set material(value) {\r\n    this.mesh.material = value;\r\n  }\r\n\r\n  dispose() {\r\n    this.mesh.geometry.dispose();\r\n  }\r\n\r\n  render(renderer) {\r\n    renderer.render(this.mesh, this.camera);\r\n  }\r\n\r\n}\r\n\r\nexport { FullScreenQuad, Pass };\r\n"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,SAASC,kBAAT,EAA6BC,aAA7B,EAA4CC,IAA5C,QAAwD,OAAxD;;IAEMC,I;EACJ,gBAAc;IAAA;;IACZJ,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,IAAlB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,WAAP,EAAoB,IAApB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,KAAhB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,gBAAP,EAAyB,KAAzB,CAAf;EACD;;;;WAED;IACA;;IAEA;IACAK,KAJA,EAIOC,MAJP,EAIe,CAAE;;;WAEjB;IACA;;IAEA;IACAC,QAJA,EAIUC,WAJV,EAIuBC,UAJvB,EAImCC,SAJnC,EAI8CC,UAJ9C,EAI0D;MACxDC,OAAO,CAACC,KAAR,CAAc,4DAAd;IACD;;;;KAED;;;IAGIC,c;EACJ,wBAAYC,QAAZ,EAAsB;IAAA;;IACpBf,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,IAAIC,kBAAJ,CAAuB,CAAC,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,CAAjB,CAAf;;IAEAD,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,IAAIE,aAAJ,CAAkB,CAAlB,EAAqB,CAArB,CAAnB,CAAf;;IAEAF,eAAe,CAAC,IAAD,EAAO,MAAP,EAAe,KAAK,CAApB,CAAf;;IAEA,KAAKgB,IAAL,GAAY,IAAIb,IAAJ,CAAS,KAAKc,QAAd,EAAwBF,QAAxB,CAAZ;EACD;;;;SAED,eAAe;MACb,OAAO,KAAKC,IAAL,CAAUD,QAAjB;IACD,C;SAED,aAAaG,KAAb,EAAoB;MAClB,KAAKF,IAAL,CAAUD,QAAV,GAAqBG,KAArB;IACD;;;WAED,mBAAU;MACR,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,OAAnB;IACD;;;WAED,gBAAOZ,QAAP,EAAiB;MACfA,QAAQ,CAACa,MAAT,CAAgB,KAAKJ,IAArB,EAA2B,KAAKK,MAAhC;IACD;;;;;;AAIH,SAASP,cAAT,EAAyBV,IAAzB"},"metadata":{},"sourceType":"module"}