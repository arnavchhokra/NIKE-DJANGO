{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyMixins = void 0;\n\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach(function (baseCtor) {\n    var baseProto = baseCtor.prototype;\n    Object.getOwnPropertyNames(baseProto).forEach(function (propName) {\n      if (propName === \"constructor\") {\n        return;\n      }\n\n      var basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName); // Handle Accessors\n\n      if (basePropDescriptor && (basePropDescriptor.get || basePropDescriptor.set)) {\n        Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n      } else {\n        derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n      }\n    });\n  });\n}\n\nexports.applyMixins = applyMixins;","map":{"version":3,"mappings":";;;;;;;AAAA,SAAgBA,WAAhB,CAA4BC,WAA5B,EAA8CC,SAA9C,EAA8D;EAC5DA,SAAS,CAACC,OAAV,CAAkB,UAACC,QAAD,EAAS;IACzB,IAAMC,SAAS,GAAGD,QAAQ,CAACE,SAA3B;IACAC,MAAM,CAACC,mBAAP,CAA2BH,SAA3B,EAAsCF,OAAtC,CAA8C,UAACM,QAAD,EAAS;MACrD,IAAIA,QAAQ,KAAK,aAAjB,EAAgC;QAC9B;MACD;;MAED,IAAMC,kBAAkB,GAAGH,MAAM,CAACI,wBAAP,CACzBN,SADyB,EAEzBI,QAFyB,CAA3B,CALqD,CASrD;;MACA,IACEC,kBAAkB,KACjBA,kBAAkB,CAACE,GAAnB,IAA0BF,kBAAkB,CAACG,GAD5B,CADpB,EAGE;QACAN,MAAM,CAACO,cAAP,CACEb,WAAW,CAACK,SADd,EAEEG,QAFF,EAGEC,kBAHF;MAKD,CATD,MASO;QACLT,WAAW,CAACK,SAAZ,CAAsBG,QAAtB,IAAkCL,QAAQ,CAACE,SAAT,CAAmBG,QAAnB,CAAlC;MACD;IACF,CAtBD;EAuBD,CAzBD;AA0BD;;AA3BDM","names":["applyMixins","derivedCtor","baseCtors","forEach","baseCtor","baseProto","prototype","Object","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","get","set","defineProperty","exports"],"sources":["D:\\Github\\NIKE-DJANGO\\Jord\\l4fycy\\node_modules\\chevrotain\\src\\parse\\parser\\utils\\apply_mixins.ts"],"sourcesContent":["export function applyMixins(derivedCtor: any, baseCtors: any[]) {\r\n  baseCtors.forEach((baseCtor) => {\r\n    const baseProto = baseCtor.prototype\r\n    Object.getOwnPropertyNames(baseProto).forEach((propName) => {\r\n      if (propName === \"constructor\") {\r\n        return\r\n      }\r\n\r\n      const basePropDescriptor = Object.getOwnPropertyDescriptor(\r\n        baseProto,\r\n        propName\r\n      )\r\n      // Handle Accessors\r\n      if (\r\n        basePropDescriptor &&\r\n        (basePropDescriptor.get || basePropDescriptor.set)\r\n      ) {\r\n        Object.defineProperty(\r\n          derivedCtor.prototype,\r\n          propName,\r\n          basePropDescriptor\r\n        )\r\n      } else {\r\n        derivedCtor.prototype[propName] = baseCtor.prototype[propName]\r\n      }\r\n    })\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"script"}