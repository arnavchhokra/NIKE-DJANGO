{"ast":null,"code":"import _classCallCheck from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { DotScreenShader } from '../shaders/DotScreenShader.js';\n\nvar DotScreenPass = /*#__PURE__*/function (_Pass) {\n  _inherits(DotScreenPass, _Pass);\n\n  var _super = _createSuper(DotScreenPass);\n\n  function DotScreenPass(center, angle, scale) {\n    var _this;\n\n    _classCallCheck(this, DotScreenPass);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"material\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"fsQuad\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uniforms\", void 0);\n\n    if (DotScreenShader === undefined) console.error('THREE.DotScreenPass relies on THREE.DotScreenShader');\n    var shader = DotScreenShader;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    if (center !== undefined) _this.uniforms['center'].value.copy(center);\n    if (angle !== undefined) _this.uniforms['angle'].value = angle;\n    if (scale !== undefined) _this.uniforms['scale'].value = scale;\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n\n  _createClass(DotScreenPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer\n    /*, deltaTime, maskActive */\n    ) {\n      this.uniforms['tDiffuse'].value = readBuffer.texture;\n      this.uniforms['tSize'].value.set(readBuffer.width, readBuffer.height);\n\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n    }\n  }]);\n\n  return DotScreenPass;\n}(Pass);\n\nexport { DotScreenPass };","map":{"version":3,"names":["_defineProperty","Pass","FullScreenQuad","UniformsUtils","ShaderMaterial","DotScreenShader","DotScreenPass","center","angle","scale","undefined","console","error","shader","uniforms","clone","value","copy","material","vertexShader","fragmentShader","fsQuad","renderer","writeBuffer","readBuffer","texture","set","width","height","renderToScreen","setRenderTarget","render","clear"],"sources":["D:/Jord/l4fycy/node_modules/three-stdlib/postprocessing/DotScreenPass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { DotScreenShader } from '../shaders/DotScreenShader.js';\n\nclass DotScreenPass extends Pass {\n  constructor(center, angle, scale) {\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (DotScreenShader === undefined) console.error('THREE.DotScreenPass relies on THREE.DotScreenShader');\n    const shader = DotScreenShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    if (center !== undefined) this.uniforms['center'].value.copy(center);\n    if (angle !== undefined) this.uniforms['angle'].value = angle;\n    if (scale !== undefined) this.uniforms['scale'].value = scale;\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['tSize'].value.set(readBuffer.width, readBuffer.height);\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n}\n\nexport { DotScreenPass };\n"],"mappings":";;;;;AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,WAArC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,OAA9C;AACA,SAASC,eAAT,QAAgC,+BAAhC;;IAEMC,a;;;;;EACJ,uBAAYC,MAAZ,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkC;IAAA;;IAAA;;IAChC;;IAEAT,eAAe,gCAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;IAEAA,eAAe,gCAAO,QAAP,EAAiB,KAAK,CAAtB,CAAf;;IAEAA,eAAe,gCAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;IAEA,IAAIK,eAAe,KAAKK,SAAxB,EAAmCC,OAAO,CAACC,KAAR,CAAc,qDAAd;IACnC,IAAMC,MAAM,GAAGR,eAAf;IACA,MAAKS,QAAL,GAAgBX,aAAa,CAACY,KAAd,CAAoBF,MAAM,CAACC,QAA3B,CAAhB;IACA,IAAIP,MAAM,KAAKG,SAAf,EAA0B,MAAKI,QAAL,CAAc,QAAd,EAAwBE,KAAxB,CAA8BC,IAA9B,CAAmCV,MAAnC;IAC1B,IAAIC,KAAK,KAAKE,SAAd,EAAyB,MAAKI,QAAL,CAAc,OAAd,EAAuBE,KAAvB,GAA+BR,KAA/B;IACzB,IAAIC,KAAK,KAAKC,SAAd,EAAyB,MAAKI,QAAL,CAAc,OAAd,EAAuBE,KAAvB,GAA+BP,KAA/B;IACzB,MAAKS,QAAL,GAAgB,IAAId,cAAJ,CAAmB;MACjCU,QAAQ,EAAE,MAAKA,QADkB;MAEjCK,YAAY,EAAEN,MAAM,CAACM,YAFY;MAGjCC,cAAc,EAAEP,MAAM,CAACO;IAHU,CAAnB,CAAhB;IAKA,MAAKC,MAAL,GAAc,IAAInB,cAAJ,CAAmB,MAAKgB,QAAxB,CAAd;IApBgC;EAqBjC;;;;WAED,gBAAOI,QAAP,EAAiBC,WAAjB,EAA8BC;IAC9B;IADA,EAEE;MACA,KAAKV,QAAL,CAAc,UAAd,EAA0BE,KAA1B,GAAkCQ,UAAU,CAACC,OAA7C;MACA,KAAKX,QAAL,CAAc,OAAd,EAAuBE,KAAvB,CAA6BU,GAA7B,CAAiCF,UAAU,CAACG,KAA5C,EAAmDH,UAAU,CAACI,MAA9D;;MAEA,IAAI,KAAKC,cAAT,EAAyB;QACvBP,QAAQ,CAACQ,eAAT,CAAyB,IAAzB;QACA,KAAKT,MAAL,CAAYU,MAAZ,CAAmBT,QAAnB;MACD,CAHD,MAGO;QACLA,QAAQ,CAACQ,eAAT,CAAyBP,WAAzB;QACA,IAAI,KAAKS,KAAT,EAAgBV,QAAQ,CAACU,KAAT;QAChB,KAAKX,MAAL,CAAYU,MAAZ,CAAmBT,QAAnB;MACD;IACF;;;;EAtCyBrB,I;;AA0C5B,SAASK,aAAT"},"metadata":{},"sourceType":"module"}