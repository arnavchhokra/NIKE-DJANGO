{"ast":null,"code":"import { Quaternion, Object3D, Vector3, AnimationMixer } from 'three';\nimport { CCDIKSolver } from './CCDIKSolver.js';\nimport { MMDPhysics } from './MMDPhysics.js';\n/**\r\n * MMDAnimationHelper handles animation of MMD assets loaded by MMDLoader\r\n * with MMD special features as IK, Grant, and Physics.\r\n *\r\n * Dependencies\r\n *  - ammo.js https://github.com/kripken/ammo.js\r\n *  - MMDPhysics\r\n *  - CCDIKSolver\r\n *\r\n * TODO\r\n *  - more precise grant skinning support.\r\n */\n\nvar MMDAnimationHelper = function () {\n  /**\r\n   * @param {Object} params - (optional)\r\n   * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\r\n   * @param {Number} params.afterglow - Default is 0.0.\r\n   * @param {boolean} params.resetPhysicsOnLoop - Default is true.\r\n   */\n  function MMDAnimationHelper(params) {\n    params = params || {};\n    this.meshes = [];\n    this.camera = null;\n    this.cameraTarget = new Object3D();\n    this.cameraTarget.name = 'target';\n    this.audio = null;\n    this.audioManager = null;\n    this.objects = new WeakMap();\n    this.configuration = {\n      sync: params.sync !== undefined ? params.sync : true,\n      afterglow: params.afterglow !== undefined ? params.afterglow : 0.0,\n      resetPhysicsOnLoop: params.resetPhysicsOnLoop !== undefined ? params.resetPhysicsOnLoop : true\n    };\n    this.enabled = {\n      animation: true,\n      ik: true,\n      grant: true,\n      physics: true,\n      cameraAnimation: true\n    };\n\n    this.onBeforePhysics = function ()\n    /* mesh */\n    {}; // experimental\n\n\n    this.sharedPhysics = false;\n    this.masterPhysics = null;\n  }\n\n  MMDAnimationHelper.prototype = {\n    constructor: MMDAnimationHelper,\n\n    /**\r\n     * Adds an Three.js Object to helper and setups animation.\r\n     * The anmation durations of added objects are synched\r\n     * if this.configuration.sync is true.\r\n     *\r\n     * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\r\n     * @param {Object} params - (optional)\r\n     * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\r\n     * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\r\n     * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\r\n     * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\r\n     * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\r\n     * @param {Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\r\n     * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\r\n     * @return {MMDAnimationHelper}\r\n     */\n    add: function add(object, params) {\n      params = params || {};\n\n      if (object.isSkinnedMesh) {\n        this._addMesh(object, params);\n      } else if (object.isCamera) {\n        this._setupCamera(object, params);\n      } else if (object.type === 'Audio') {\n        this._setupAudio(object, params);\n      } else {\n        throw new Error('THREE.MMDAnimationHelper.add: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\n      }\n\n      if (this.configuration.sync) this._syncDuration();\n      return this;\n    },\n\n    /**\r\n     * Removes an Three.js Object from helper.\r\n     *\r\n     * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\r\n     * @return {MMDAnimationHelper}\r\n     */\n    remove: function remove(object) {\n      if (object.isSkinnedMesh) {\n        this._removeMesh(object);\n      } else if (object.isCamera) {\n        this._clearCamera(object);\n      } else if (object.type === 'Audio') {\n        this._clearAudio(object);\n      } else {\n        throw new Error('THREE.MMDAnimationHelper.remove: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\n      }\n\n      if (this.configuration.sync) this._syncDuration();\n      return this;\n    },\n\n    /**\r\n     * Updates the animation.\r\n     *\r\n     * @param {Number} delta\r\n     * @return {MMDAnimationHelper}\r\n     */\n    update: function update(delta) {\n      if (this.audioManager !== null) this.audioManager.control(delta);\n\n      for (var i = 0; i < this.meshes.length; i++) {\n        this._animateMesh(this.meshes[i], delta);\n      }\n\n      if (this.sharedPhysics) this._updateSharedPhysics(delta);\n      if (this.camera !== null) this._animateCamera(this.camera, delta);\n      return this;\n    },\n\n    /**\r\n     * Changes the pose of SkinnedMesh as VPD specifies.\r\n     *\r\n     * @param {THREE.SkinnedMesh} mesh\r\n     * @param {Object} vpd - VPD content parsed MMDParser\r\n     * @param {Object} params - (optional)\r\n     * @param {boolean} params.resetPose - Default is true.\r\n     * @param {boolean} params.ik - Default is true.\r\n     * @param {boolean} params.grant - Default is true.\r\n     * @return {MMDAnimationHelper}\r\n     */\n    pose: function pose(mesh, vpd, params) {\n      params = params || {};\n      if (params.resetPose !== false) mesh.pose();\n      var bones = mesh.skeleton.bones;\n      var boneParams = vpd.bones;\n      var boneNameDictionary = {};\n\n      for (var i = 0, il = bones.length; i < il; i++) {\n        boneNameDictionary[bones[i].name] = i;\n      }\n\n      var vector = new Vector3();\n      var quaternion = new Quaternion();\n\n      for (var _i = 0, _il = boneParams.length; _i < _il; _i++) {\n        var boneParam = boneParams[_i];\n        var boneIndex = boneNameDictionary[boneParam.name];\n        if (boneIndex === undefined) continue;\n        var bone = bones[boneIndex];\n        bone.position.add(vector.fromArray(boneParam.translation));\n        bone.quaternion.multiply(quaternion.fromArray(boneParam.quaternion));\n      }\n\n      mesh.updateMatrixWorld(true);\n\n      if (params.ik !== false) {\n        this._createCCDIKSolver(mesh).update(params.saveOriginalBonesBeforeIK); // this param is experimental\n\n      }\n\n      if (params.grant !== false) {\n        this.createGrantSolver(mesh).update();\n      }\n\n      return this;\n    },\n\n    /**\r\n     * Enabes/Disables an animation feature.\r\n     *\r\n     * @param {string} key\r\n     * @param {boolean} enabled\r\n     * @return {MMDAnimationHelper}\r\n     */\n    enable: function enable(key, enabled) {\n      if (this.enabled[key] === undefined) {\n        throw new Error(\"THREE.MMDAnimationHelper.enable: unknown key \".concat(key));\n      }\n\n      this.enabled[key] = enabled;\n\n      if (key === 'physics') {\n        for (var i = 0, il = this.meshes.length; i < il; i++) {\n          this._optimizeIK(this.meshes[i], enabled);\n        }\n      }\n\n      return this;\n    },\n\n    /**\r\n     * Creates an GrantSolver instance.\r\n     *\r\n     * @param {THREE.SkinnedMesh} mesh\r\n     * @return {GrantSolver}\r\n     */\n    createGrantSolver: function createGrantSolver(mesh) {\n      return new GrantSolver(mesh, mesh.geometry.userData.MMD.grants);\n    },\n    // private methods\n    _addMesh: function _addMesh(mesh, params) {\n      if (this.meshes.indexOf(mesh) >= 0) {\n        throw new Error(\"THREE.MMDAnimationHelper._addMesh: SkinnedMesh '\".concat(mesh.name, \"' has already been added.\"));\n      }\n\n      this.meshes.push(mesh);\n      this.objects.set(mesh, {\n        looped: false\n      });\n\n      this._setupMeshAnimation(mesh, params.animation);\n\n      if (params.physics !== false) {\n        this._setupMeshPhysics(mesh, params);\n      }\n\n      return this;\n    },\n    _setupCamera: function _setupCamera(camera, params) {\n      if (this.camera === camera) {\n        throw new Error(\"THREE.MMDAnimationHelper._setupCamera: Camera '\".concat(camera.name, \"' has already been set.\"));\n      }\n\n      if (this.camera) this.clearCamera(this.camera);\n      this.camera = camera;\n      camera.add(this.cameraTarget);\n      this.objects.set(camera, {});\n\n      if (params.animation !== undefined) {\n        this._setupCameraAnimation(camera, params.animation);\n      }\n\n      return this;\n    },\n    _setupAudio: function _setupAudio(audio, params) {\n      if (this.audio === audio) {\n        throw new Error(\"THREE.MMDAnimationHelper._setupAudio: Audio '\".concat(audio.name, \"' has already been set.\"));\n      }\n\n      if (this.audio) this.clearAudio(this.audio);\n      this.audio = audio;\n      this.audioManager = new AudioManager(audio, params);\n      this.objects.set(this.audioManager, {\n        duration: this.audioManager.duration\n      });\n      return this;\n    },\n    _removeMesh: function _removeMesh(mesh) {\n      var found = false;\n      var writeIndex = 0;\n\n      for (var i = 0, il = this.meshes.length; i < il; i++) {\n        if (this.meshes[i] === mesh) {\n          this.objects.delete(mesh);\n          found = true;\n          continue;\n        }\n\n        this.meshes[writeIndex++] = this.meshes[i];\n      }\n\n      if (!found) {\n        throw new Error(\"THREE.MMDAnimationHelper._removeMesh: SkinnedMesh '\".concat(mesh.name, \"' has not been added yet.\"));\n      }\n\n      this.meshes.length = writeIndex;\n      return this;\n    },\n    _clearCamera: function _clearCamera(camera) {\n      if (camera !== this.camera) {\n        throw new Error(\"THREE.MMDAnimationHelper._clearCamera: Camera '\".concat(camera.name, \"' has not been set yet.\"));\n      }\n\n      this.camera.remove(this.cameraTarget);\n      this.objects.delete(this.camera);\n      this.camera = null;\n      return this;\n    },\n    _clearAudio: function _clearAudio(audio) {\n      if (audio !== this.audio) {\n        throw new Error(\"THREE.MMDAnimationHelper._clearAudio: Audio '\".concat(audio.name, \"' has not been set yet.\"));\n      }\n\n      this.objects.delete(this.audioManager);\n      this.audio = null;\n      this.audioManager = null;\n      return this;\n    },\n    _setupMeshAnimation: function _setupMeshAnimation(mesh, animation) {\n      var objects = this.objects.get(mesh);\n\n      if (animation !== undefined) {\n        var animations = Array.isArray(animation) ? animation : [animation];\n        objects.mixer = new AnimationMixer(mesh);\n\n        for (var i = 0, il = animations.length; i < il; i++) {\n          objects.mixer.clipAction(animations[i]).play();\n        } // TODO: find a workaround not to access ._clip looking like a private property\n\n\n        objects.mixer.addEventListener('loop', function (event) {\n          var tracks = event.action._clip.tracks;\n          if (tracks.length > 0 && tracks[0].name.slice(0, 6) !== '.bones') return;\n          objects.looped = true;\n        });\n      }\n\n      objects.ikSolver = this._createCCDIKSolver(mesh);\n      objects.grantSolver = this.createGrantSolver(mesh);\n      return this;\n    },\n    _setupCameraAnimation: function _setupCameraAnimation(camera, animation) {\n      var animations = Array.isArray(animation) ? animation : [animation];\n      var objects = this.objects.get(camera);\n      objects.mixer = new AnimationMixer(camera);\n\n      for (var i = 0, il = animations.length; i < il; i++) {\n        objects.mixer.clipAction(animations[i]).play();\n      }\n    },\n    _setupMeshPhysics: function _setupMeshPhysics(mesh, params) {\n      var objects = this.objects.get(mesh); // shared physics is experimental\n\n      if (params.world === undefined && this.sharedPhysics) {\n        var masterPhysics = this._getMasterPhysics();\n\n        if (masterPhysics !== null) world = masterPhysics.world; // eslint-disable-line no-undef\n      }\n\n      objects.physics = this._createMMDPhysics(mesh, params);\n\n      if (objects.mixer && params.animationWarmup !== false) {\n        this._animateMesh(mesh, 0);\n\n        objects.physics.reset();\n      }\n\n      objects.physics.warmup(params.warmup !== undefined ? params.warmup : 60);\n\n      this._optimizeIK(mesh, true);\n    },\n    _animateMesh: function _animateMesh(mesh, delta) {\n      var objects = this.objects.get(mesh);\n      var mixer = objects.mixer;\n      var ikSolver = objects.ikSolver;\n      var grantSolver = objects.grantSolver;\n      var physics = objects.physics;\n      var looped = objects.looped; // alternate solution to save/restore bones but less performant?\n      //mesh.pose();\n      //this._updatePropertyMixersBuffer( mesh );\n\n      if (mixer && this.enabled.animation) {\n        this._restoreBones(mesh);\n\n        mixer.update(delta);\n\n        this._saveBones(mesh);\n\n        if (ikSolver && this.enabled.ik) {\n          mesh.updateMatrixWorld(true);\n          ikSolver.update();\n        }\n\n        if (grantSolver && this.enabled.grant) {\n          grantSolver.update();\n        }\n      }\n\n      if (looped === true && this.enabled.physics) {\n        if (physics && this.configuration.resetPhysicsOnLoop) physics.reset();\n        objects.looped = false;\n      }\n\n      if (physics && this.enabled.physics && !this.sharedPhysics) {\n        this.onBeforePhysics(mesh);\n        physics.update(delta);\n      }\n    },\n    _animateCamera: function _animateCamera(camera, delta) {\n      var mixer = this.objects.get(camera).mixer;\n\n      if (mixer && this.enabled.cameraAnimation) {\n        mixer.update(delta);\n        camera.updateProjectionMatrix();\n        camera.up.set(0, 1, 0);\n        camera.up.applyQuaternion(camera.quaternion);\n        camera.lookAt(this.cameraTarget.position);\n      }\n    },\n    _optimizeIK: function _optimizeIK(mesh, physicsEnabled) {\n      var iks = mesh.geometry.userData.MMD.iks;\n      var bones = mesh.geometry.userData.MMD.bones;\n\n      for (var i = 0, il = iks.length; i < il; i++) {\n        var ik = iks[i];\n        var links = ik.links;\n\n        for (var j = 0, jl = links.length; j < jl; j++) {\n          var link = links[j];\n\n          if (physicsEnabled === true) {\n            // disable IK of the bone the corresponding rigidBody type of which is 1 or 2\n            // because its rotation will be overriden by physics\n            link.enabled = bones[link.index].rigidBodyType > 0 ? false : true;\n          } else {\n            link.enabled = true;\n          }\n        }\n      }\n    },\n    _createCCDIKSolver: function _createCCDIKSolver(mesh) {\n      if (CCDIKSolver === undefined) {\n        throw new Error('THREE.MMDAnimationHelper: Import CCDIKSolver.');\n      }\n\n      return new CCDIKSolver(mesh, mesh.geometry.userData.MMD.iks);\n    },\n    _createMMDPhysics: function _createMMDPhysics(mesh, params) {\n      if (MMDPhysics === undefined) {\n        throw new Error('THREE.MMDPhysics: Import MMDPhysics.');\n      }\n\n      return new MMDPhysics(mesh, mesh.geometry.userData.MMD.rigidBodies, mesh.geometry.userData.MMD.constraints, params);\n    },\n\n    /*\r\n     * Detects the longest duration and then sets it to them to sync.\r\n     * TODO: Not to access private properties ( ._actions and ._clip )\r\n     */\n    _syncDuration: function _syncDuration() {\n      var max = 0.0;\n      var objects = this.objects;\n      var meshes = this.meshes;\n      var camera = this.camera;\n      var audioManager = this.audioManager; // get the longest duration\n\n      for (var i = 0, il = meshes.length; i < il; i++) {\n        var mixer = this.objects.get(meshes[i]).mixer;\n        if (mixer === undefined) continue;\n\n        for (var j = 0; j < mixer._actions.length; j++) {\n          var clip = mixer._actions[j]._clip;\n\n          if (!objects.has(clip)) {\n            objects.set(clip, {\n              duration: clip.duration\n            });\n          }\n\n          max = Math.max(max, objects.get(clip).duration);\n        }\n      }\n\n      if (camera !== null) {\n        var mixer = this.objects.get(camera).mixer;\n\n        if (mixer !== undefined) {\n          for (var _i2 = 0, _il2 = mixer._actions.length; _i2 < _il2; _i2++) {\n            var clip = mixer._actions[_i2]._clip;\n\n            if (!objects.has(clip)) {\n              objects.set(clip, {\n                duration: clip.duration\n              });\n            }\n\n            max = Math.max(max, objects.get(clip).duration);\n          }\n        }\n      }\n\n      if (audioManager !== null) {\n        max = Math.max(max, objects.get(audioManager).duration);\n      }\n\n      max += this.configuration.afterglow; // update the duration\n\n      for (var _i3 = 0, _il3 = this.meshes.length; _i3 < _il3; _i3++) {\n        var mixer = this.objects.get(this.meshes[_i3]).mixer;\n        if (mixer === undefined) continue;\n\n        for (var _j = 0, jl = mixer._actions.length; _j < jl; _j++) {\n          mixer._actions[_j]._clip.duration = max;\n        }\n      }\n\n      if (camera !== null) {\n        var mixer = this.objects.get(camera).mixer;\n\n        if (mixer !== undefined) {\n          for (var _i4 = 0, _il4 = mixer._actions.length; _i4 < _il4; _i4++) {\n            mixer._actions[_i4]._clip.duration = max;\n          }\n        }\n      }\n\n      if (audioManager !== null) {\n        audioManager.duration = max;\n      }\n    },\n    // workaround\n    _updatePropertyMixersBuffer: function _updatePropertyMixersBuffer(mesh) {\n      var mixer = this.objects.get(mesh).mixer;\n      var propertyMixers = mixer._bindings;\n      var accuIndex = mixer._accuIndex;\n\n      for (var i = 0, il = propertyMixers.length; i < il; i++) {\n        var propertyMixer = propertyMixers[i];\n        var buffer = propertyMixer.buffer;\n        var stride = propertyMixer.valueSize;\n        var offset = (accuIndex + 1) * stride;\n        propertyMixer.binding.getValue(buffer, offset);\n      }\n    },\n\n    /*\r\n     * Avoiding these two issues by restore/save bones before/after mixer animation.\r\n     *\r\n     * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\r\n     *    Calculating IK, Grant, and Physics after mixer animation can break\r\n     *    the cache coherency.\r\n     *\r\n     * 2. Applying Grant two or more times without reset the posing breaks model.\r\n     */\n    _saveBones: function _saveBones(mesh) {\n      var objects = this.objects.get(mesh);\n      var bones = mesh.skeleton.bones;\n      var backupBones = objects.backupBones;\n\n      if (backupBones === undefined) {\n        backupBones = new Float32Array(bones.length * 7);\n        objects.backupBones = backupBones;\n      }\n\n      for (var i = 0, il = bones.length; i < il; i++) {\n        var bone = bones[i];\n        bone.position.toArray(backupBones, i * 7);\n        bone.quaternion.toArray(backupBones, i * 7 + 3);\n      }\n    },\n    _restoreBones: function _restoreBones(mesh) {\n      var objects = this.objects.get(mesh);\n      var backupBones = objects.backupBones;\n      if (backupBones === undefined) return;\n      var bones = mesh.skeleton.bones;\n\n      for (var i = 0, il = bones.length; i < il; i++) {\n        var bone = bones[i];\n        bone.position.fromArray(backupBones, i * 7);\n        bone.quaternion.fromArray(backupBones, i * 7 + 3);\n      }\n    },\n    // experimental\n    _getMasterPhysics: function _getMasterPhysics() {\n      if (this.masterPhysics !== null) return this.masterPhysics;\n\n      for (var i = 0, il = this.meshes.length; i < il; i++) {\n        var physics = this.meshes[i].physics;\n\n        if (physics !== undefined && physics !== null) {\n          this.masterPhysics = physics;\n          return this.masterPhysics;\n        }\n      }\n\n      return null;\n    },\n    _updateSharedPhysics: function _updateSharedPhysics(delta) {\n      if (this.meshes.length === 0 || !this.enabled.physics || !this.sharedPhysics) return;\n\n      var physics = this._getMasterPhysics();\n\n      if (physics === null) return;\n\n      for (var i = 0, il = this.meshes.length; i < il; i++) {\n        var p = this.meshes[i].physics;\n\n        if (p !== null && p !== undefined) {\n          p.updateRigidBodies();\n        }\n      }\n\n      physics.stepSimulation(delta);\n\n      for (var _i5 = 0, _il5 = this.meshes.length; _i5 < _il5; _i5++) {\n        var p = this.meshes[_i5].physics;\n\n        if (p !== null && p !== undefined) {\n          p.updateBones();\n        }\n      }\n    }\n  }; //\n\n  /**\r\n   * @param {THREE.Audio} audio\r\n   * @param {Object} params - (optional)\r\n   * @param {Nuumber} params.delayTime\r\n   */\n\n  function AudioManager(audio, params) {\n    params = params || {};\n    this.audio = audio;\n    this.elapsedTime = 0.0;\n    this.currentTime = 0.0;\n    this.delayTime = params.delayTime !== undefined ? params.delayTime : 0.0;\n    this.audioDuration = this.audio.buffer.duration;\n    this.duration = this.audioDuration + this.delayTime;\n  }\n\n  AudioManager.prototype = {\n    constructor: AudioManager,\n\n    /**\r\n     * @param {Number} delta\r\n     * @return {AudioManager}\r\n     */\n    control: function control(delta) {\n      this.elapsed += delta;\n      this.currentTime += delta;\n      if (this._shouldStopAudio()) this.audio.stop();\n      if (this._shouldStartAudio()) this.audio.play();\n      return this;\n    },\n    // private methods\n    _shouldStartAudio: function _shouldStartAudio() {\n      if (this.audio.isPlaying) return false;\n\n      while (this.currentTime >= this.duration) {\n        this.currentTime -= this.duration;\n      }\n\n      if (this.currentTime < this.delayTime) return false; // 'duration' can be bigger than 'audioDuration + delayTime' because of sync configuration\n\n      if (this.currentTime - this.delayTime > this.audioDuration) return false;\n      return true;\n    },\n    _shouldStopAudio: function _shouldStopAudio() {\n      return this.audio.isPlaying && this.currentTime >= this.duration;\n    }\n  };\n  /**\r\n   * @param {THREE.SkinnedMesh} mesh\r\n   * @param {Array<Object>} grants\r\n   */\n\n  function GrantSolver(mesh, grants) {\n    this.mesh = mesh;\n    this.grants = grants || [];\n  }\n\n  GrantSolver.prototype = {\n    constructor: GrantSolver,\n\n    /**\r\n     * @return {GrantSolver}\r\n     */\n    update: function () {\n      var quaternion = new Quaternion();\n      return function () {\n        var bones = this.mesh.skeleton.bones;\n        var grants = this.grants;\n\n        for (var i = 0, il = grants.length; i < il; i++) {\n          var grant = grants[i];\n          var bone = bones[grant.index];\n          var parentBone = bones[grant.parentIndex];\n\n          if (grant.isLocal) {\n            // TODO: implement\n            if (grant.affectPosition) ; // TODO: implement\n\n            if (grant.affectRotation) ;\n          } else {\n            // TODO: implement\n            if (grant.affectPosition) ;\n\n            if (grant.affectRotation) {\n              quaternion.set(0, 0, 0, 1);\n              quaternion.slerp(parentBone.quaternion, grant.ratio);\n              bone.quaternion.multiply(quaternion);\n            }\n          }\n        }\n\n        return this;\n      };\n    }()\n  };\n  return MMDAnimationHelper;\n}();\n\nexport { MMDAnimationHelper };","map":{"version":3,"names":["Quaternion","Object3D","Vector3","AnimationMixer","CCDIKSolver","MMDPhysics","MMDAnimationHelper","params","meshes","camera","cameraTarget","name","audio","audioManager","objects","WeakMap","configuration","sync","undefined","afterglow","resetPhysicsOnLoop","enabled","animation","ik","grant","physics","cameraAnimation","onBeforePhysics","sharedPhysics","masterPhysics","prototype","constructor","add","object","isSkinnedMesh","_addMesh","isCamera","_setupCamera","type","_setupAudio","Error","_syncDuration","remove","_removeMesh","_clearCamera","_clearAudio","update","delta","control","i","length","_animateMesh","_updateSharedPhysics","_animateCamera","pose","mesh","vpd","resetPose","bones","skeleton","boneParams","boneNameDictionary","il","vector","quaternion","boneParam","boneIndex","bone","position","fromArray","translation","multiply","updateMatrixWorld","_createCCDIKSolver","saveOriginalBonesBeforeIK","createGrantSolver","enable","key","_optimizeIK","GrantSolver","geometry","userData","MMD","grants","indexOf","push","set","looped","_setupMeshAnimation","_setupMeshPhysics","clearCamera","_setupCameraAnimation","clearAudio","AudioManager","duration","found","writeIndex","delete","get","animations","Array","isArray","mixer","clipAction","play","addEventListener","event","tracks","action","_clip","slice","ikSolver","grantSolver","world","_getMasterPhysics","_createMMDPhysics","animationWarmup","reset","warmup","_restoreBones","_saveBones","updateProjectionMatrix","up","applyQuaternion","lookAt","physicsEnabled","iks","links","j","jl","link","index","rigidBodyType","rigidBodies","constraints","max","_actions","clip","has","Math","_updatePropertyMixersBuffer","propertyMixers","_bindings","accuIndex","_accuIndex","propertyMixer","buffer","stride","valueSize","offset","binding","getValue","backupBones","Float32Array","toArray","p","updateRigidBodies","stepSimulation","updateBones","elapsedTime","currentTime","delayTime","audioDuration","elapsed","_shouldStopAudio","stop","_shouldStartAudio","isPlaying","parentBone","parentIndex","isLocal","affectPosition","affectRotation","slerp","ratio"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/animation/MMDAnimationHelper.js"],"sourcesContent":["import { Quaternion, Object3D, Vector3, AnimationMixer } from 'three';\r\nimport { CCDIKSolver } from './CCDIKSolver.js';\r\nimport { MMDPhysics } from './MMDPhysics.js';\r\n\r\n/**\r\n * MMDAnimationHelper handles animation of MMD assets loaded by MMDLoader\r\n * with MMD special features as IK, Grant, and Physics.\r\n *\r\n * Dependencies\r\n *  - ammo.js https://github.com/kripken/ammo.js\r\n *  - MMDPhysics\r\n *  - CCDIKSolver\r\n *\r\n * TODO\r\n *  - more precise grant skinning support.\r\n */\r\n\r\nconst MMDAnimationHelper = (() => {\r\n  /**\r\n   * @param {Object} params - (optional)\r\n   * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\r\n   * @param {Number} params.afterglow - Default is 0.0.\r\n   * @param {boolean} params.resetPhysicsOnLoop - Default is true.\r\n   */\r\n  function MMDAnimationHelper(params) {\r\n    params = params || {};\r\n    this.meshes = [];\r\n    this.camera = null;\r\n    this.cameraTarget = new Object3D();\r\n    this.cameraTarget.name = 'target';\r\n    this.audio = null;\r\n    this.audioManager = null;\r\n    this.objects = new WeakMap();\r\n    this.configuration = {\r\n      sync: params.sync !== undefined ? params.sync : true,\r\n      afterglow: params.afterglow !== undefined ? params.afterglow : 0.0,\r\n      resetPhysicsOnLoop: params.resetPhysicsOnLoop !== undefined ? params.resetPhysicsOnLoop : true\r\n    };\r\n    this.enabled = {\r\n      animation: true,\r\n      ik: true,\r\n      grant: true,\r\n      physics: true,\r\n      cameraAnimation: true\r\n    };\r\n\r\n    this.onBeforePhysics = () =>\r\n    /* mesh */\r\n    {}; // experimental\r\n\r\n\r\n    this.sharedPhysics = false;\r\n    this.masterPhysics = null;\r\n  }\r\n\r\n  MMDAnimationHelper.prototype = {\r\n    constructor: MMDAnimationHelper,\r\n\r\n    /**\r\n     * Adds an Three.js Object to helper and setups animation.\r\n     * The anmation durations of added objects are synched\r\n     * if this.configuration.sync is true.\r\n     *\r\n     * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\r\n     * @param {Object} params - (optional)\r\n     * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\r\n     * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\r\n     * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\r\n     * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\r\n     * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\r\n     * @param {Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\r\n     * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\r\n     * @return {MMDAnimationHelper}\r\n     */\r\n    add: function (object, params) {\r\n      params = params || {};\r\n\r\n      if (object.isSkinnedMesh) {\r\n        this._addMesh(object, params);\r\n      } else if (object.isCamera) {\r\n        this._setupCamera(object, params);\r\n      } else if (object.type === 'Audio') {\r\n        this._setupAudio(object, params);\r\n      } else {\r\n        throw new Error('THREE.MMDAnimationHelper.add: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\r\n      }\r\n\r\n      if (this.configuration.sync) this._syncDuration();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Removes an Three.js Object from helper.\r\n     *\r\n     * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\r\n     * @return {MMDAnimationHelper}\r\n     */\r\n    remove: function (object) {\r\n      if (object.isSkinnedMesh) {\r\n        this._removeMesh(object);\r\n      } else if (object.isCamera) {\r\n        this._clearCamera(object);\r\n      } else if (object.type === 'Audio') {\r\n        this._clearAudio(object);\r\n      } else {\r\n        throw new Error('THREE.MMDAnimationHelper.remove: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\r\n      }\r\n\r\n      if (this.configuration.sync) this._syncDuration();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Updates the animation.\r\n     *\r\n     * @param {Number} delta\r\n     * @return {MMDAnimationHelper}\r\n     */\r\n    update: function (delta) {\r\n      if (this.audioManager !== null) this.audioManager.control(delta);\r\n\r\n      for (let i = 0; i < this.meshes.length; i++) {\r\n        this._animateMesh(this.meshes[i], delta);\r\n      }\r\n\r\n      if (this.sharedPhysics) this._updateSharedPhysics(delta);\r\n      if (this.camera !== null) this._animateCamera(this.camera, delta);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Changes the pose of SkinnedMesh as VPD specifies.\r\n     *\r\n     * @param {THREE.SkinnedMesh} mesh\r\n     * @param {Object} vpd - VPD content parsed MMDParser\r\n     * @param {Object} params - (optional)\r\n     * @param {boolean} params.resetPose - Default is true.\r\n     * @param {boolean} params.ik - Default is true.\r\n     * @param {boolean} params.grant - Default is true.\r\n     * @return {MMDAnimationHelper}\r\n     */\r\n    pose: function (mesh, vpd, params) {\r\n      params = params || {};\r\n      if (params.resetPose !== false) mesh.pose();\r\n      const bones = mesh.skeleton.bones;\r\n      const boneParams = vpd.bones;\r\n      const boneNameDictionary = {};\r\n\r\n      for (let i = 0, il = bones.length; i < il; i++) {\r\n        boneNameDictionary[bones[i].name] = i;\r\n      }\r\n\r\n      const vector = new Vector3();\r\n      const quaternion = new Quaternion();\r\n\r\n      for (let i = 0, il = boneParams.length; i < il; i++) {\r\n        const boneParam = boneParams[i];\r\n        const boneIndex = boneNameDictionary[boneParam.name];\r\n        if (boneIndex === undefined) continue;\r\n        const bone = bones[boneIndex];\r\n        bone.position.add(vector.fromArray(boneParam.translation));\r\n        bone.quaternion.multiply(quaternion.fromArray(boneParam.quaternion));\r\n      }\r\n\r\n      mesh.updateMatrixWorld(true);\r\n\r\n      if (params.ik !== false) {\r\n        this._createCCDIKSolver(mesh).update(params.saveOriginalBonesBeforeIK); // this param is experimental\r\n\r\n      }\r\n\r\n      if (params.grant !== false) {\r\n        this.createGrantSolver(mesh).update();\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Enabes/Disables an animation feature.\r\n     *\r\n     * @param {string} key\r\n     * @param {boolean} enabled\r\n     * @return {MMDAnimationHelper}\r\n     */\r\n    enable: function (key, enabled) {\r\n      if (this.enabled[key] === undefined) {\r\n        throw new Error(`THREE.MMDAnimationHelper.enable: unknown key ${key}`);\r\n      }\r\n\r\n      this.enabled[key] = enabled;\r\n\r\n      if (key === 'physics') {\r\n        for (let i = 0, il = this.meshes.length; i < il; i++) {\r\n          this._optimizeIK(this.meshes[i], enabled);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Creates an GrantSolver instance.\r\n     *\r\n     * @param {THREE.SkinnedMesh} mesh\r\n     * @return {GrantSolver}\r\n     */\r\n    createGrantSolver: function (mesh) {\r\n      return new GrantSolver(mesh, mesh.geometry.userData.MMD.grants);\r\n    },\r\n    // private methods\r\n    _addMesh: function (mesh, params) {\r\n      if (this.meshes.indexOf(mesh) >= 0) {\r\n        throw new Error(`THREE.MMDAnimationHelper._addMesh: SkinnedMesh '${mesh.name}' has already been added.`);\r\n      }\r\n\r\n      this.meshes.push(mesh);\r\n      this.objects.set(mesh, {\r\n        looped: false\r\n      });\r\n\r\n      this._setupMeshAnimation(mesh, params.animation);\r\n\r\n      if (params.physics !== false) {\r\n        this._setupMeshPhysics(mesh, params);\r\n      }\r\n\r\n      return this;\r\n    },\r\n    _setupCamera: function (camera, params) {\r\n      if (this.camera === camera) {\r\n        throw new Error(`THREE.MMDAnimationHelper._setupCamera: Camera '${camera.name}' has already been set.`);\r\n      }\r\n\r\n      if (this.camera) this.clearCamera(this.camera);\r\n      this.camera = camera;\r\n      camera.add(this.cameraTarget);\r\n      this.objects.set(camera, {});\r\n\r\n      if (params.animation !== undefined) {\r\n        this._setupCameraAnimation(camera, params.animation);\r\n      }\r\n\r\n      return this;\r\n    },\r\n    _setupAudio: function (audio, params) {\r\n      if (this.audio === audio) {\r\n        throw new Error(`THREE.MMDAnimationHelper._setupAudio: Audio '${audio.name}' has already been set.`);\r\n      }\r\n\r\n      if (this.audio) this.clearAudio(this.audio);\r\n      this.audio = audio;\r\n      this.audioManager = new AudioManager(audio, params);\r\n      this.objects.set(this.audioManager, {\r\n        duration: this.audioManager.duration\r\n      });\r\n      return this;\r\n    },\r\n    _removeMesh: function (mesh) {\r\n      let found = false;\r\n      let writeIndex = 0;\r\n\r\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\r\n        if (this.meshes[i] === mesh) {\r\n          this.objects.delete(mesh);\r\n          found = true;\r\n          continue;\r\n        }\r\n\r\n        this.meshes[writeIndex++] = this.meshes[i];\r\n      }\r\n\r\n      if (!found) {\r\n        throw new Error(`THREE.MMDAnimationHelper._removeMesh: SkinnedMesh '${mesh.name}' has not been added yet.`);\r\n      }\r\n\r\n      this.meshes.length = writeIndex;\r\n      return this;\r\n    },\r\n    _clearCamera: function (camera) {\r\n      if (camera !== this.camera) {\r\n        throw new Error(`THREE.MMDAnimationHelper._clearCamera: Camera '${camera.name}' has not been set yet.`);\r\n      }\r\n\r\n      this.camera.remove(this.cameraTarget);\r\n      this.objects.delete(this.camera);\r\n      this.camera = null;\r\n      return this;\r\n    },\r\n    _clearAudio: function (audio) {\r\n      if (audio !== this.audio) {\r\n        throw new Error(`THREE.MMDAnimationHelper._clearAudio: Audio '${audio.name}' has not been set yet.`);\r\n      }\r\n\r\n      this.objects.delete(this.audioManager);\r\n      this.audio = null;\r\n      this.audioManager = null;\r\n      return this;\r\n    },\r\n    _setupMeshAnimation: function (mesh, animation) {\r\n      const objects = this.objects.get(mesh);\r\n\r\n      if (animation !== undefined) {\r\n        const animations = Array.isArray(animation) ? animation : [animation];\r\n        objects.mixer = new AnimationMixer(mesh);\r\n\r\n        for (let i = 0, il = animations.length; i < il; i++) {\r\n          objects.mixer.clipAction(animations[i]).play();\r\n        } // TODO: find a workaround not to access ._clip looking like a private property\r\n\r\n\r\n        objects.mixer.addEventListener('loop', event => {\r\n          const tracks = event.action._clip.tracks;\r\n          if (tracks.length > 0 && tracks[0].name.slice(0, 6) !== '.bones') return;\r\n          objects.looped = true;\r\n        });\r\n      }\r\n\r\n      objects.ikSolver = this._createCCDIKSolver(mesh);\r\n      objects.grantSolver = this.createGrantSolver(mesh);\r\n      return this;\r\n    },\r\n    _setupCameraAnimation: function (camera, animation) {\r\n      const animations = Array.isArray(animation) ? animation : [animation];\r\n      const objects = this.objects.get(camera);\r\n      objects.mixer = new AnimationMixer(camera);\r\n\r\n      for (let i = 0, il = animations.length; i < il; i++) {\r\n        objects.mixer.clipAction(animations[i]).play();\r\n      }\r\n    },\r\n    _setupMeshPhysics: function (mesh, params) {\r\n      const objects = this.objects.get(mesh); // shared physics is experimental\r\n\r\n      if (params.world === undefined && this.sharedPhysics) {\r\n        const masterPhysics = this._getMasterPhysics();\r\n\r\n        if (masterPhysics !== null) world = masterPhysics.world; // eslint-disable-line no-undef\r\n      }\r\n\r\n      objects.physics = this._createMMDPhysics(mesh, params);\r\n\r\n      if (objects.mixer && params.animationWarmup !== false) {\r\n        this._animateMesh(mesh, 0);\r\n\r\n        objects.physics.reset();\r\n      }\r\n\r\n      objects.physics.warmup(params.warmup !== undefined ? params.warmup : 60);\r\n\r\n      this._optimizeIK(mesh, true);\r\n    },\r\n    _animateMesh: function (mesh, delta) {\r\n      const objects = this.objects.get(mesh);\r\n      const mixer = objects.mixer;\r\n      const ikSolver = objects.ikSolver;\r\n      const grantSolver = objects.grantSolver;\r\n      const physics = objects.physics;\r\n      const looped = objects.looped; // alternate solution to save/restore bones but less performant?\r\n      //mesh.pose();\r\n      //this._updatePropertyMixersBuffer( mesh );\r\n\r\n      if (mixer && this.enabled.animation) {\r\n        this._restoreBones(mesh);\r\n\r\n        mixer.update(delta);\r\n\r\n        this._saveBones(mesh);\r\n\r\n        if (ikSolver && this.enabled.ik) {\r\n          mesh.updateMatrixWorld(true);\r\n          ikSolver.update();\r\n        }\r\n\r\n        if (grantSolver && this.enabled.grant) {\r\n          grantSolver.update();\r\n        }\r\n      }\r\n\r\n      if (looped === true && this.enabled.physics) {\r\n        if (physics && this.configuration.resetPhysicsOnLoop) physics.reset();\r\n        objects.looped = false;\r\n      }\r\n\r\n      if (physics && this.enabled.physics && !this.sharedPhysics) {\r\n        this.onBeforePhysics(mesh);\r\n        physics.update(delta);\r\n      }\r\n    },\r\n    _animateCamera: function (camera, delta) {\r\n      const mixer = this.objects.get(camera).mixer;\r\n\r\n      if (mixer && this.enabled.cameraAnimation) {\r\n        mixer.update(delta);\r\n        camera.updateProjectionMatrix();\r\n        camera.up.set(0, 1, 0);\r\n        camera.up.applyQuaternion(camera.quaternion);\r\n        camera.lookAt(this.cameraTarget.position);\r\n      }\r\n    },\r\n    _optimizeIK: function (mesh, physicsEnabled) {\r\n      const iks = mesh.geometry.userData.MMD.iks;\r\n      const bones = mesh.geometry.userData.MMD.bones;\r\n\r\n      for (let i = 0, il = iks.length; i < il; i++) {\r\n        const ik = iks[i];\r\n        const links = ik.links;\r\n\r\n        for (let j = 0, jl = links.length; j < jl; j++) {\r\n          const link = links[j];\r\n\r\n          if (physicsEnabled === true) {\r\n            // disable IK of the bone the corresponding rigidBody type of which is 1 or 2\r\n            // because its rotation will be overriden by physics\r\n            link.enabled = bones[link.index].rigidBodyType > 0 ? false : true;\r\n          } else {\r\n            link.enabled = true;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    _createCCDIKSolver: function (mesh) {\r\n      if (CCDIKSolver === undefined) {\r\n        throw new Error('THREE.MMDAnimationHelper: Import CCDIKSolver.');\r\n      }\r\n\r\n      return new CCDIKSolver(mesh, mesh.geometry.userData.MMD.iks);\r\n    },\r\n    _createMMDPhysics: function (mesh, params) {\r\n      if (MMDPhysics === undefined) {\r\n        throw new Error('THREE.MMDPhysics: Import MMDPhysics.');\r\n      }\r\n\r\n      return new MMDPhysics(mesh, mesh.geometry.userData.MMD.rigidBodies, mesh.geometry.userData.MMD.constraints, params);\r\n    },\r\n\r\n    /*\r\n     * Detects the longest duration and then sets it to them to sync.\r\n     * TODO: Not to access private properties ( ._actions and ._clip )\r\n     */\r\n    _syncDuration: function () {\r\n      let max = 0.0;\r\n      const objects = this.objects;\r\n      const meshes = this.meshes;\r\n      const camera = this.camera;\r\n      const audioManager = this.audioManager; // get the longest duration\r\n\r\n      for (let i = 0, il = meshes.length; i < il; i++) {\r\n        var mixer = this.objects.get(meshes[i]).mixer;\r\n        if (mixer === undefined) continue;\r\n\r\n        for (let j = 0; j < mixer._actions.length; j++) {\r\n          var clip = mixer._actions[j]._clip;\r\n\r\n          if (!objects.has(clip)) {\r\n            objects.set(clip, {\r\n              duration: clip.duration\r\n            });\r\n          }\r\n\r\n          max = Math.max(max, objects.get(clip).duration);\r\n        }\r\n      }\r\n\r\n      if (camera !== null) {\r\n        var mixer = this.objects.get(camera).mixer;\r\n\r\n        if (mixer !== undefined) {\r\n          for (let i = 0, il = mixer._actions.length; i < il; i++) {\r\n            var clip = mixer._actions[i]._clip;\r\n\r\n            if (!objects.has(clip)) {\r\n              objects.set(clip, {\r\n                duration: clip.duration\r\n              });\r\n            }\r\n\r\n            max = Math.max(max, objects.get(clip).duration);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (audioManager !== null) {\r\n        max = Math.max(max, objects.get(audioManager).duration);\r\n      }\r\n\r\n      max += this.configuration.afterglow; // update the duration\r\n\r\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\r\n        var mixer = this.objects.get(this.meshes[i]).mixer;\r\n        if (mixer === undefined) continue;\r\n\r\n        for (let j = 0, jl = mixer._actions.length; j < jl; j++) {\r\n          mixer._actions[j]._clip.duration = max;\r\n        }\r\n      }\r\n\r\n      if (camera !== null) {\r\n        var mixer = this.objects.get(camera).mixer;\r\n\r\n        if (mixer !== undefined) {\r\n          for (let i = 0, il = mixer._actions.length; i < il; i++) {\r\n            mixer._actions[i]._clip.duration = max;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (audioManager !== null) {\r\n        audioManager.duration = max;\r\n      }\r\n    },\r\n    // workaround\r\n    _updatePropertyMixersBuffer: function (mesh) {\r\n      const mixer = this.objects.get(mesh).mixer;\r\n      const propertyMixers = mixer._bindings;\r\n      const accuIndex = mixer._accuIndex;\r\n\r\n      for (let i = 0, il = propertyMixers.length; i < il; i++) {\r\n        const propertyMixer = propertyMixers[i];\r\n        const buffer = propertyMixer.buffer;\r\n        const stride = propertyMixer.valueSize;\r\n        const offset = (accuIndex + 1) * stride;\r\n        propertyMixer.binding.getValue(buffer, offset);\r\n      }\r\n    },\r\n\r\n    /*\r\n     * Avoiding these two issues by restore/save bones before/after mixer animation.\r\n     *\r\n     * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\r\n     *    Calculating IK, Grant, and Physics after mixer animation can break\r\n     *    the cache coherency.\r\n     *\r\n     * 2. Applying Grant two or more times without reset the posing breaks model.\r\n     */\r\n    _saveBones: function (mesh) {\r\n      const objects = this.objects.get(mesh);\r\n      const bones = mesh.skeleton.bones;\r\n      let backupBones = objects.backupBones;\r\n\r\n      if (backupBones === undefined) {\r\n        backupBones = new Float32Array(bones.length * 7);\r\n        objects.backupBones = backupBones;\r\n      }\r\n\r\n      for (let i = 0, il = bones.length; i < il; i++) {\r\n        const bone = bones[i];\r\n        bone.position.toArray(backupBones, i * 7);\r\n        bone.quaternion.toArray(backupBones, i * 7 + 3);\r\n      }\r\n    },\r\n    _restoreBones: function (mesh) {\r\n      const objects = this.objects.get(mesh);\r\n      const backupBones = objects.backupBones;\r\n      if (backupBones === undefined) return;\r\n      const bones = mesh.skeleton.bones;\r\n\r\n      for (let i = 0, il = bones.length; i < il; i++) {\r\n        const bone = bones[i];\r\n        bone.position.fromArray(backupBones, i * 7);\r\n        bone.quaternion.fromArray(backupBones, i * 7 + 3);\r\n      }\r\n    },\r\n    // experimental\r\n    _getMasterPhysics: function () {\r\n      if (this.masterPhysics !== null) return this.masterPhysics;\r\n\r\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\r\n        const physics = this.meshes[i].physics;\r\n\r\n        if (physics !== undefined && physics !== null) {\r\n          this.masterPhysics = physics;\r\n          return this.masterPhysics;\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n    _updateSharedPhysics: function (delta) {\r\n      if (this.meshes.length === 0 || !this.enabled.physics || !this.sharedPhysics) return;\r\n\r\n      const physics = this._getMasterPhysics();\r\n\r\n      if (physics === null) return;\r\n\r\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\r\n        var p = this.meshes[i].physics;\r\n\r\n        if (p !== null && p !== undefined) {\r\n          p.updateRigidBodies();\r\n        }\r\n      }\r\n\r\n      physics.stepSimulation(delta);\r\n\r\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\r\n        var p = this.meshes[i].physics;\r\n\r\n        if (p !== null && p !== undefined) {\r\n          p.updateBones();\r\n        }\r\n      }\r\n    }\r\n  }; //\r\n\r\n  /**\r\n   * @param {THREE.Audio} audio\r\n   * @param {Object} params - (optional)\r\n   * @param {Nuumber} params.delayTime\r\n   */\r\n\r\n  function AudioManager(audio, params) {\r\n    params = params || {};\r\n    this.audio = audio;\r\n    this.elapsedTime = 0.0;\r\n    this.currentTime = 0.0;\r\n    this.delayTime = params.delayTime !== undefined ? params.delayTime : 0.0;\r\n    this.audioDuration = this.audio.buffer.duration;\r\n    this.duration = this.audioDuration + this.delayTime;\r\n  }\r\n\r\n  AudioManager.prototype = {\r\n    constructor: AudioManager,\r\n\r\n    /**\r\n     * @param {Number} delta\r\n     * @return {AudioManager}\r\n     */\r\n    control: function (delta) {\r\n      this.elapsed += delta;\r\n      this.currentTime += delta;\r\n      if (this._shouldStopAudio()) this.audio.stop();\r\n      if (this._shouldStartAudio()) this.audio.play();\r\n      return this;\r\n    },\r\n    // private methods\r\n    _shouldStartAudio: function () {\r\n      if (this.audio.isPlaying) return false;\r\n\r\n      while (this.currentTime >= this.duration) {\r\n        this.currentTime -= this.duration;\r\n      }\r\n\r\n      if (this.currentTime < this.delayTime) return false; // 'duration' can be bigger than 'audioDuration + delayTime' because of sync configuration\r\n\r\n      if (this.currentTime - this.delayTime > this.audioDuration) return false;\r\n      return true;\r\n    },\r\n    _shouldStopAudio: function () {\r\n      return this.audio.isPlaying && this.currentTime >= this.duration;\r\n    }\r\n  };\r\n  /**\r\n   * @param {THREE.SkinnedMesh} mesh\r\n   * @param {Array<Object>} grants\r\n   */\r\n\r\n  function GrantSolver(mesh, grants) {\r\n    this.mesh = mesh;\r\n    this.grants = grants || [];\r\n  }\r\n\r\n  GrantSolver.prototype = {\r\n    constructor: GrantSolver,\r\n\r\n    /**\r\n     * @return {GrantSolver}\r\n     */\r\n    update: (() => {\r\n      const quaternion = new Quaternion();\r\n      return function () {\r\n        const bones = this.mesh.skeleton.bones;\r\n        const grants = this.grants;\r\n\r\n        for (let i = 0, il = grants.length; i < il; i++) {\r\n          const grant = grants[i];\r\n          const bone = bones[grant.index];\r\n          const parentBone = bones[grant.parentIndex];\r\n\r\n          if (grant.isLocal) {\r\n            // TODO: implement\r\n            if (grant.affectPosition) ; // TODO: implement\r\n\r\n\r\n            if (grant.affectRotation) ;\r\n          } else {\r\n            // TODO: implement\r\n            if (grant.affectPosition) ;\r\n\r\n            if (grant.affectRotation) {\r\n              quaternion.set(0, 0, 0, 1);\r\n              quaternion.slerp(parentBone.quaternion, grant.ratio);\r\n              bone.quaternion.multiply(quaternion);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      };\r\n    })()\r\n  };\r\n  return MMDAnimationHelper;\r\n})();\r\n\r\nexport { MMDAnimationHelper };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}