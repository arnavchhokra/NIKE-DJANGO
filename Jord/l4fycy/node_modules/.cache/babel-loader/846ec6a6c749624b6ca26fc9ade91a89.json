{"ast":null,"code":"import _slicedToArray from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nvar isOrthographic = function isOrthographic(def) {\n  return def && def.isOrthographicCamera;\n};\n\nvar isBox3 = function isBox3(def) {\n  return def && def.isBox3;\n};\n\nvar context = /*#__PURE__*/React.createContext(null);\n\nfunction Bounds(_ref) {\n  var children = _ref.children,\n      _ref$damping = _ref.damping,\n      damping = _ref$damping === void 0 ? 6 : _ref$damping,\n      fit = _ref.fit,\n      clip = _ref.clip,\n      observe = _ref.observe,\n      _ref$margin = _ref.margin,\n      margin = _ref$margin === void 0 ? 1.2 : _ref$margin,\n      _ref$eps = _ref.eps,\n      eps = _ref$eps === void 0 ? 0.01 : _ref$eps,\n      onFit = _ref.onFit;\n  var ref = React.useRef(null);\n\n  var _useThree = useThree(),\n      camera = _useThree.camera,\n      invalidate = _useThree.invalidate,\n      size = _useThree.size,\n      controlsImpl = _useThree.controls;\n\n  var controls = controlsImpl;\n  var onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  var _React$useState = React.useState(function () {\n    return {\n      animating: false,\n      focus: new THREE.Vector3(),\n      camera: new THREE.Vector3(),\n      zoom: 1\n    };\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      current = _React$useState2[0];\n\n  var _React$useState3 = React.useState(function () {\n    return {\n      focus: new THREE.Vector3(),\n      camera: new THREE.Vector3(),\n      zoom: 1\n    };\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      goal = _React$useState4[0];\n\n  var _React$useState5 = React.useState(function () {\n    return new THREE.Box3();\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      box = _React$useState6[0];\n\n  var api = React.useMemo(function () {\n    function getSize() {\n      var size = box.getSize(new THREE.Vector3());\n      var center = box.getCenter(new THREE.Vector3());\n      var maxSize = Math.max(size.x, size.y, size.z);\n      var fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      var fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      var distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box: box,\n        size: size,\n        center: center,\n        distance: distance\n      };\n    }\n\n    return {\n      getSize: getSize,\n      refresh: function refresh(object) {\n        if (isBox3(object)) box.copy(object);else {\n          var target = object || ref.current;\n          target.updateWorldMatrix(true, true);\n          box.setFromObject(target);\n        }\n\n        if (box.isEmpty()) {\n          var max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n\n        if ((controls == null ? void 0 : controls.constructor.name) === 'OrthographicTrackballControls') {\n          // Put camera on a sphere along which it should moves\n          var _getSize = getSize(),\n              distance = _getSize.distance;\n\n          var direction = camera.position.clone().sub(controls.target).normalize().multiplyScalar(distance);\n          var newPos = controls.target.clone().add(direction);\n          camera.position.copy(newPos);\n        }\n\n        return this;\n      },\n      clip: function clip() {\n        var _getSize2 = getSize(),\n            distance = _getSize2.distance;\n\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        invalidate();\n        return this;\n      },\n      fit: function fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n\n        var _getSize3 = getSize(),\n            center = _getSize3.center,\n            distance = _getSize3.distance;\n\n        var direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          var maxHeight = 0,\n              maxWidth = 0;\n          var vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (var _i = 0, _vertices = vertices; _i < _vertices.length; _i++) {\n            var v = _vertices[_i];\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          var zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          var zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n        }\n\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        invalidate();\n        return this;\n      }\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(function () {\n    if (controls) {\n      // Try to prevent drag hijacking\n      var callback = function callback() {\n        return current.animating = false;\n      };\n\n      controls.addEventListener('start', callback);\n      return function () {\n        return controls.removeEventListener('start', callback);\n      };\n    }\n  }, [controls]); // Scale pointer on window resize\n\n  var count = React.useRef(0);\n  React.useLayoutEffect(function () {\n    if (observe || count.current++ === 0) {\n      api.refresh();\n      if (fit) api.fit();\n      if (clip) api.clip();\n    }\n  }, [size, clip, fit, observe, camera, controls]);\n  useFrame(function (state, delta) {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\n\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };","map":{"version":3,"names":["React","THREE","useThree","useFrame","isOrthographic","def","isOrthographicCamera","isBox3","context","createContext","Bounds","children","damping","fit","clip","observe","margin","eps","onFit","ref","useRef","camera","invalidate","size","controlsImpl","controls","onFitRef","current","equals","a","b","Math","abs","x","y","z","damp","v","t","lambda","delta","MathUtils","useState","animating","focus","Vector3","zoom","goal","Box3","box","api","useMemo","getSize","center","getCenter","maxSize","max","fitHeightDistance","atan","PI","fov","fitWidthDistance","aspect","distance","refresh","object","copy","target","updateWorldMatrix","setFromObject","isEmpty","position","length","setFromCenterAndSize","constructor","name","direction","clone","sub","normalize","multiplyScalar","newPos","add","maxDistance","near","far","updateProjectionMatrix","update","maxHeight","maxWidth","vertices","min","applyMatrix4","matrixWorldInverse","zoomForHeight","top","bottom","zoomForWidth","right","left","lookAt","useLayoutEffect","callback","addEventListener","removeEventListener","count","state","createElement","Provider","value","useBounds","useContext"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/@react-three/drei/core/Bounds.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst isOrthographic = def => def && def.isOrthographicCamera;\n\nconst isBox3 = def => def && def.isBox3;\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  damping = 6,\n  fit,\n  clip,\n  observe,\n  margin = 1.2,\n  eps = 0.01,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const {\n    camera,\n    invalidate,\n    size,\n    controls: controlsImpl\n  } = useThree();\n  const controls = controlsImpl;\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size,\n        center,\n        distance\n      };\n    }\n\n    return {\n      getSize,\n\n      refresh(object) {\n        if (isBox3(object)) box.copy(object);else {\n          const target = object || ref.current;\n          target.updateWorldMatrix(true, true);\n          box.setFromObject(target);\n        }\n\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n\n        if ((controls == null ? void 0 : controls.constructor.name) === 'OrthographicTrackballControls') {\n          // Put camera on a sphere along which it should moves\n          const {\n            distance\n          } = getSize();\n          const direction = camera.position.clone().sub(controls.target).normalize().multiplyScalar(distance);\n          const newPos = controls.target.clone().add(direction);\n          camera.position.copy(newPos);\n        }\n\n        return this;\n      },\n\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        invalidate();\n        return this;\n      },\n\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n              maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n        }\n\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        invalidate();\n        return this;\n      }\n\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => current.animating = false;\n\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    }\n  }, [controls]); // Scale pointer on window resize\n\n  const count = React.useRef(0);\n  React.useLayoutEffect(() => {\n    if (observe || count.current++ === 0) {\n      api.refresh();\n      if (fit) api.fit();\n      if (clip) api.clip();\n    }\n  }, [size, clip, fit, observe, camera, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}