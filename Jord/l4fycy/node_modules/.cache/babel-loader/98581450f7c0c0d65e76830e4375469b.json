{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProductionDslName = exports.isBranchingProd = exports.isOptionalProd = exports.isSequenceProd = void 0;\n\nvar some_1 = __importDefault(require(\"lodash/some\"));\n\nvar every_1 = __importDefault(require(\"lodash/every\"));\n\nvar includes_1 = __importDefault(require(\"lodash/includes\"));\n\nvar model_1 = require(\"./model\");\n\nfunction isSequenceProd(prod) {\n  return prod instanceof model_1.Alternative || prod instanceof model_1.Option || prod instanceof model_1.Repetition || prod instanceof model_1.RepetitionMandatory || prod instanceof model_1.RepetitionMandatoryWithSeparator || prod instanceof model_1.RepetitionWithSeparator || prod instanceof model_1.Terminal || prod instanceof model_1.Rule;\n}\n\nexports.isSequenceProd = isSequenceProd;\n\nfunction isOptionalProd(prod, alreadyVisited) {\n  if (alreadyVisited === void 0) {\n    alreadyVisited = [];\n  }\n\n  var isDirectlyOptional = prod instanceof model_1.Option || prod instanceof model_1.Repetition || prod instanceof model_1.RepetitionWithSeparator;\n\n  if (isDirectlyOptional) {\n    return true;\n  } // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n\n\n  if (prod instanceof model_1.Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return (0, some_1.default)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else if (prod instanceof model_1.NonTerminal && (0, includes_1.default)(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false;\n  } else if (prod instanceof model_1.AbstractProduction) {\n    if (prod instanceof model_1.NonTerminal) {\n      alreadyVisited.push(prod);\n    }\n\n    return (0, every_1.default)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else {\n    return false;\n  }\n}\n\nexports.isOptionalProd = isOptionalProd;\n\nfunction isBranchingProd(prod) {\n  return prod instanceof model_1.Alternation;\n}\n\nexports.isBranchingProd = isBranchingProd;\n\nfunction getProductionDslName(prod) {\n  /* istanbul ignore else */\n  if (prod instanceof model_1.NonTerminal) {\n    return \"SUBRULE\";\n  } else if (prod instanceof model_1.Option) {\n    return \"OPTION\";\n  } else if (prod instanceof model_1.Alternation) {\n    return \"OR\";\n  } else if (prod instanceof model_1.RepetitionMandatory) {\n    return \"AT_LEAST_ONE\";\n  } else if (prod instanceof model_1.RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\";\n  } else if (prod instanceof model_1.RepetitionWithSeparator) {\n    return \"MANY_SEP\";\n  } else if (prod instanceof model_1.Repetition) {\n    return \"MANY\";\n  } else if (prod instanceof model_1.Terminal) {\n    return \"CONSUME\";\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexports.getProductionDslName = getProductionDslName;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAgBA,SAAgBA,cAAhB,CACEC,IADF,EACmB;EAEjB,OACEA,IAAI,YAAYC,mBAAhB,IACAD,IAAI,YAAYC,cADhB,IAEAD,IAAI,YAAYC,kBAFhB,IAGAD,IAAI,YAAYC,2BAHhB,IAIAD,IAAI,YAAYC,wCAJhB,IAKAD,IAAI,YAAYC,+BALhB,IAMAD,IAAI,YAAYC,gBANhB,IAOAD,IAAI,YAAYC,YARlB;AAUD;;AAbDC;;AAeA,SAAgBC,cAAhB,CACEH,IADF,EAEEI,cAFF,EAEoC;EAAlC;IAAAA;EAAkC;;EAElC,IAAMC,kBAAkB,GACtBL,IAAI,YAAYC,cAAhB,IACAD,IAAI,YAAYC,kBADhB,IAEAD,IAAI,YAAYC,+BAHlB;;EAIA,IAAII,kBAAJ,EAAwB;IACtB,OAAO,IAAP;EACD,CARiC,CAUlC;EACA;EACA;;;EACA,IAAIL,IAAI,YAAYC,mBAApB,EAAiC;IAC/B;IACA,OAAO,oBAAmBD,IAAK,CAACM,UAAzB,EAAqC,UAACC,OAAD,EAAqB;MAC/D,OAAOJ,cAAc,CAACI,OAAD,EAAUH,cAAV,CAArB;IACD,CAFM,CAAP;EAGD,CALD,MAKO,IAAIJ,IAAI,YAAYC,mBAAhB,IAA+B,wBAASG,cAAT,EAAyBJ,IAAzB,CAAnC,EAAmE;IACxE;IACA,OAAO,KAAP;EACD,CAHM,MAGA,IAAIA,IAAI,YAAYC,0BAApB,EAAwC;IAC7C,IAAID,IAAI,YAAYC,mBAApB,EAAiC;MAC/BG,cAAc,CAACI,IAAf,CAAoBR,IAApB;IACD;;IACD,OAAO,qBACgBA,IAAK,CAACM,UADtB,EAEL,UAACC,OAAD,EAAqB;MACnB,OAAOJ,cAAc,CAACI,OAAD,EAAUH,cAAV,CAArB;IACD,CAJI,CAAP;EAMD,CAVM,MAUA;IACL,OAAO,KAAP;EACD;AACF;;AApCDF;;AAsCA,SAAgBO,eAAhB,CACET,IADF,EACmB;EAEjB,OAAOA,IAAI,YAAYC,mBAAvB;AACD;;AAJDC;;AAMA,SAAgBQ,oBAAhB,CAAqCV,IAArC,EAAoE;EAClE;EACA,IAAIA,IAAI,YAAYC,mBAApB,EAAiC;IAC/B,OAAO,SAAP;EACD,CAFD,MAEO,IAAID,IAAI,YAAYC,cAApB,EAA4B;IACjC,OAAO,QAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,mBAApB,EAAiC;IACtC,OAAO,IAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,2BAApB,EAAyC;IAC9C,OAAO,cAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,wCAApB,EAAsD;IAC3D,OAAO,kBAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,+BAApB,EAA6C;IAClD,OAAO,UAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,kBAApB,EAAgC;IACrC,OAAO,MAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,gBAApB,EAA8B;IACnC,OAAO,SAAP;EACD,CAFM,MAEA;IACL,MAAMU,KAAK,CAAC,sBAAD,CAAX;EACD;AACF;;AArBDT","names":["isSequenceProd","prod","model_1","exports","isOptionalProd","alreadyVisited","isDirectlyOptional","definition","subProd","push","isBranchingProd","getProductionDslName","Error"],"sources":["D:\\Github\\NIKE-DJANGO\\Jord\\l4fycy\\node_modules\\@chevrotain\\gast\\src\\helpers.ts"],"sourcesContent":["import some from \"lodash/some\"\r\nimport every from \"lodash/every\"\r\nimport has from \"lodash/has\"\r\nimport includes from \"lodash/includes\"\r\nimport {\r\n  AbstractProduction,\r\n  Alternation,\r\n  Alternative,\r\n  NonTerminal,\r\n  Option,\r\n  Repetition,\r\n  RepetitionMandatory,\r\n  RepetitionMandatoryWithSeparator,\r\n  RepetitionWithSeparator,\r\n  Rule,\r\n  Terminal\r\n} from \"./model\"\r\nimport { GAstVisitor } from \"./visitor\"\r\nimport { IProduction, IProductionWithOccurrence } from \"@chevrotain/types\"\r\n\r\nexport function isSequenceProd(\r\n  prod: IProduction\r\n): prod is { definition: IProduction[] } & IProduction {\r\n  return (\r\n    prod instanceof Alternative ||\r\n    prod instanceof Option ||\r\n    prod instanceof Repetition ||\r\n    prod instanceof RepetitionMandatory ||\r\n    prod instanceof RepetitionMandatoryWithSeparator ||\r\n    prod instanceof RepetitionWithSeparator ||\r\n    prod instanceof Terminal ||\r\n    prod instanceof Rule\r\n  )\r\n}\r\n\r\nexport function isOptionalProd(\r\n  prod: IProduction,\r\n  alreadyVisited: NonTerminal[] = []\r\n): boolean {\r\n  const isDirectlyOptional =\r\n    prod instanceof Option ||\r\n    prod instanceof Repetition ||\r\n    prod instanceof RepetitionWithSeparator\r\n  if (isDirectlyOptional) {\r\n    return true\r\n  }\r\n\r\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\r\n  // empty optional top rule\r\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\r\n  if (prod instanceof Alternation) {\r\n    // for OR its enough for just one of the alternatives to be optional\r\n    return some((<Alternation>prod).definition, (subProd: IProduction) => {\r\n      return isOptionalProd(subProd, alreadyVisited)\r\n    })\r\n  } else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\r\n    // avoiding stack overflow due to infinite recursion\r\n    return false\r\n  } else if (prod instanceof AbstractProduction) {\r\n    if (prod instanceof NonTerminal) {\r\n      alreadyVisited.push(prod)\r\n    }\r\n    return every(\r\n      (<AbstractProduction>prod).definition,\r\n      (subProd: IProduction) => {\r\n        return isOptionalProd(subProd, alreadyVisited)\r\n      }\r\n    )\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport function isBranchingProd(\r\n  prod: IProduction\r\n): prod is { definition: IProduction[] } & IProduction {\r\n  return prod instanceof Alternation\r\n}\r\n\r\nexport function getProductionDslName(prod: IProductionWithOccurrence): string {\r\n  /* istanbul ignore else */\r\n  if (prod instanceof NonTerminal) {\r\n    return \"SUBRULE\"\r\n  } else if (prod instanceof Option) {\r\n    return \"OPTION\"\r\n  } else if (prod instanceof Alternation) {\r\n    return \"OR\"\r\n  } else if (prod instanceof RepetitionMandatory) {\r\n    return \"AT_LEAST_ONE\"\r\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\r\n    return \"AT_LEAST_ONE_SEP\"\r\n  } else if (prod instanceof RepetitionWithSeparator) {\r\n    return \"MANY_SEP\"\r\n  } else if (prod instanceof Repetition) {\r\n    return \"MANY\"\r\n  } else if (prod instanceof Terminal) {\r\n    return \"CONSUME\"\r\n  } else {\r\n    throw Error(\"non exhaustive match\")\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}