{"ast":null,"code":"'use client';\n\n// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\".concat(value, \"' to ref '\").concat(ref, \"'\"));\n  }\n}\nfunction mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return node => {\n    refs.forEach(ref => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs() {\n  for (var _len2 = arguments.length, refs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    refs[_key2] = arguments[_key2];\n  }\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport { assignRef, mergeRefs, useMergeRefs };","map":{"version":3,"names":["useMemo","assignRef","ref","value","current","error","Error","concat","mergeRefs","_len","arguments","length","refs","Array","_key","node","forEach","useMergeRefs","_len2","_key2"],"sources":["D:\\Github\\NIKE-DJANGO\\Jord\\l4fycy\\node_modules\\@chakra-ui\\react-use-merge-refs\\src\\index.ts"],"sourcesContent":["import { useMemo } from \"react\"\n\nexport type ReactRef<T> = React.RefCallback<T> | React.MutableRefObject<T>\n\nexport function assignRef<T = any>(\n  ref: ReactRef<T> | null | undefined,\n  value: T,\n) {\n  if (ref == null) return\n\n  if (typeof ref === \"function\") {\n    ref(value)\n    return\n  }\n\n  try {\n    ref.current = value\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`)\n  }\n}\n\nexport function mergeRefs<T>(...refs: (ReactRef<T> | null | undefined)[]) {\n  return (node: T | null) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node)\n    })\n  }\n}\n\nexport function useMergeRefs<T>(...refs: (ReactRef<T> | null | undefined)[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(() => mergeRefs(...refs), refs)\n}\n"],"mappings":";;;AAAA,SAASA,OAAA,QAAe;AAIjB,SAASC,UACdC,GAAA,EACAC,KAAA,EACA;EACA,IAAID,GAAA,IAAO,MAAM;EAEjB,IAAI,OAAOA,GAAA,KAAQ,YAAY;IAC7BA,GAAA,CAAIC,KAAK;IACT;EACF;EAEA,IAAI;IACFD,GAAA,CAAIE,OAAA,GAAUD,KAAA;EAChB,SAASE,KAAA,EAAP;IACA,MAAM,IAAIC,KAAA,yBAAAC,MAAA,CAA8BJ,KAAA,gBAAAI,MAAA,CAAkBL,GAAA,MAAM;EAClE;AACF;AAEO,SAASM,UAAA,EAA0D;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAA1CC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC9B,OAAQC,IAAA,IAAmB;IACzBH,IAAA,CAAKI,OAAA,CAASd,GAAA,IAAQ;MACpBD,SAAA,CAAUC,GAAA,EAAKa,IAAI;IACrB,CAAC;EACH;AACF;AAEO,SAASE,aAAA,EAA6D;EAAA,SAAAC,KAAA,GAAAR,SAAA,CAAAC,MAAA,EAA1CC,IAAA,OAAAC,KAAA,CAAAK,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAAAP,IAAA,CAAAO,KAAA,IAAAT,SAAA,CAAAS,KAAA;EAAA;EAEjC,OAAOnB,OAAA,CAAQ,MAAMQ,SAAA,CAAU,GAAGI,IAAI,GAAGA,IAAI;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}