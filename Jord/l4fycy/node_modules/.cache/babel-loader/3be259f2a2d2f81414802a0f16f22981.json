{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProductionDslName = exports.isBranchingProd = exports.isOptionalProd = exports.isSequenceProd = void 0;\n\nvar some_1 = __importDefault(require(\"lodash/some\"));\n\nvar every_1 = __importDefault(require(\"lodash/every\"));\n\nvar includes_1 = __importDefault(require(\"lodash/includes\"));\n\nvar model_1 = require(\"./model\");\n\nfunction isSequenceProd(prod) {\n  return prod instanceof model_1.Alternative || prod instanceof model_1.Option || prod instanceof model_1.Repetition || prod instanceof model_1.RepetitionMandatory || prod instanceof model_1.RepetitionMandatoryWithSeparator || prod instanceof model_1.RepetitionWithSeparator || prod instanceof model_1.Terminal || prod instanceof model_1.Rule;\n}\n\nexports.isSequenceProd = isSequenceProd;\n\nfunction isOptionalProd(prod, alreadyVisited) {\n  if (alreadyVisited === void 0) {\n    alreadyVisited = [];\n  }\n\n  var isDirectlyOptional = prod instanceof model_1.Option || prod instanceof model_1.Repetition || prod instanceof model_1.RepetitionWithSeparator;\n\n  if (isDirectlyOptional) {\n    return true;\n  } // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n\n\n  if (prod instanceof model_1.Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return (0, some_1.default)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else if (prod instanceof model_1.NonTerminal && (0, includes_1.default)(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false;\n  } else if (prod instanceof model_1.AbstractProduction) {\n    if (prod instanceof model_1.NonTerminal) {\n      alreadyVisited.push(prod);\n    }\n\n    return (0, every_1.default)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else {\n    return false;\n  }\n}\n\nexports.isOptionalProd = isOptionalProd;\n\nfunction isBranchingProd(prod) {\n  return prod instanceof model_1.Alternation;\n}\n\nexports.isBranchingProd = isBranchingProd;\n\nfunction getProductionDslName(prod) {\n  /* istanbul ignore else */\n  if (prod instanceof model_1.NonTerminal) {\n    return \"SUBRULE\";\n  } else if (prod instanceof model_1.Option) {\n    return \"OPTION\";\n  } else if (prod instanceof model_1.Alternation) {\n    return \"OR\";\n  } else if (prod instanceof model_1.RepetitionMandatory) {\n    return \"AT_LEAST_ONE\";\n  } else if (prod instanceof model_1.RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\";\n  } else if (prod instanceof model_1.RepetitionWithSeparator) {\n    return \"MANY_SEP\";\n  } else if (prod instanceof model_1.Repetition) {\n    return \"MANY\";\n  } else if (prod instanceof model_1.Terminal) {\n    return \"CONSUME\";\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexports.getProductionDslName = getProductionDslName;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAgBA,SAAgBA,cAAhB,CACEC,IADF,EACmB;EAEjB,OACEA,IAAI,YAAYC,mBAAhB,IACAD,IAAI,YAAYC,cADhB,IAEAD,IAAI,YAAYC,kBAFhB,IAGAD,IAAI,YAAYC,2BAHhB,IAIAD,IAAI,YAAYC,wCAJhB,IAKAD,IAAI,YAAYC,+BALhB,IAMAD,IAAI,YAAYC,gBANhB,IAOAD,IAAI,YAAYC,YARlB;AAUD;;AAbDC;;AAeA,SAAgBC,cAAhB,CACEH,IADF,EAEEI,cAFF,EAEoC;EAAlC;IAAAA;EAAkC;;EAElC,IAAMC,kBAAkB,GACtBL,IAAI,YAAYC,cAAhB,IACAD,IAAI,YAAYC,kBADhB,IAEAD,IAAI,YAAYC,+BAHlB;;EAIA,IAAII,kBAAJ,EAAwB;IACtB,OAAO,IAAP;EACD,CARiC,CAUlC;EACA;EACA;;;EACA,IAAIL,IAAI,YAAYC,mBAApB,EAAiC;IAC/B;IACA,OAAO,oBAAmBD,IAAK,CAACM,UAAzB,EAAqC,UAACC,OAAD,EAAqB;MAC/D,OAAOJ,cAAc,CAACI,OAAD,EAAUH,cAAV,CAArB;IACD,CAFM,CAAP;EAGD,CALD,MAKO,IAAIJ,IAAI,YAAYC,mBAAhB,IAA+B,wBAASG,cAAT,EAAyBJ,IAAzB,CAAnC,EAAmE;IACxE;IACA,OAAO,KAAP;EACD,CAHM,MAGA,IAAIA,IAAI,YAAYC,0BAApB,EAAwC;IAC7C,IAAID,IAAI,YAAYC,mBAApB,EAAiC;MAC/BG,cAAc,CAACI,IAAf,CAAoBR,IAApB;IACD;;IACD,OAAO,qBACgBA,IAAK,CAACM,UADtB,EAEL,UAACC,OAAD,EAAqB;MACnB,OAAOJ,cAAc,CAACI,OAAD,EAAUH,cAAV,CAArB;IACD,CAJI,CAAP;EAMD,CAVM,MAUA;IACL,OAAO,KAAP;EACD;AACF;;AApCDF;;AAsCA,SAAgBO,eAAhB,CACET,IADF,EACmB;EAEjB,OAAOA,IAAI,YAAYC,mBAAvB;AACD;;AAJDC;;AAMA,SAAgBQ,oBAAhB,CAAqCV,IAArC,EAAoE;EAClE;EACA,IAAIA,IAAI,YAAYC,mBAApB,EAAiC;IAC/B,OAAO,SAAP;EACD,CAFD,MAEO,IAAID,IAAI,YAAYC,cAApB,EAA4B;IACjC,OAAO,QAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,mBAApB,EAAiC;IACtC,OAAO,IAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,2BAApB,EAAyC;IAC9C,OAAO,cAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,wCAApB,EAAsD;IAC3D,OAAO,kBAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,+BAApB,EAA6C;IAClD,OAAO,UAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,kBAApB,EAAgC;IACrC,OAAO,MAAP;EACD,CAFM,MAEA,IAAID,IAAI,YAAYC,gBAApB,EAA8B;IACnC,OAAO,SAAP;EACD,CAFM,MAEA;IACL,MAAMU,KAAK,CAAC,sBAAD,CAAX;EACD;AACF;;AArBDT","names":["isSequenceProd","prod","model_1","exports","isOptionalProd","alreadyVisited","isDirectlyOptional","definition","subProd","push","isBranchingProd","getProductionDslName","Error"],"sources":["C:\\Users\\Arnav\\Downloads\\l4fycy\\node_modules\\@chevrotain\\gast\\src\\helpers.ts"],"sourcesContent":["import some from \"lodash/some\"\nimport every from \"lodash/every\"\nimport has from \"lodash/has\"\nimport includes from \"lodash/includes\"\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./model\"\nimport { GAstVisitor } from \"./visitor\"\nimport { IProduction, IProductionWithOccurrence } from \"@chevrotain/types\"\n\nexport function isSequenceProd(\n  prod: IProduction\n): prod is { definition: IProduction[] } & IProduction {\n  return (\n    prod instanceof Alternative ||\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionMandatory ||\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod instanceof RepetitionWithSeparator ||\n    prod instanceof Terminal ||\n    prod instanceof Rule\n  )\n}\n\nexport function isOptionalProd(\n  prod: IProduction,\n  alreadyVisited: NonTerminal[] = []\n): boolean {\n  const isDirectlyOptional =\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionWithSeparator\n  if (isDirectlyOptional) {\n    return true\n  }\n\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n  if (prod instanceof Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return some((<Alternation>prod).definition, (subProd: IProduction) => {\n      return isOptionalProd(subProd, alreadyVisited)\n    })\n  } else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false\n  } else if (prod instanceof AbstractProduction) {\n    if (prod instanceof NonTerminal) {\n      alreadyVisited.push(prod)\n    }\n    return every(\n      (<AbstractProduction>prod).definition,\n      (subProd: IProduction) => {\n        return isOptionalProd(subProd, alreadyVisited)\n      }\n    )\n  } else {\n    return false\n  }\n}\n\nexport function isBranchingProd(\n  prod: IProduction\n): prod is { definition: IProduction[] } & IProduction {\n  return prod instanceof Alternation\n}\n\nexport function getProductionDslName(prod: IProductionWithOccurrence): string {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return \"SUBRULE\"\n  } else if (prod instanceof Option) {\n    return \"OPTION\"\n  } else if (prod instanceof Alternation) {\n    return \"OR\"\n  } else if (prod instanceof RepetitionMandatory) {\n    return \"AT_LEAST_ONE\"\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\"\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return \"MANY_SEP\"\n  } else if (prod instanceof Repetition) {\n    return \"MANY\"\n  } else if (prod instanceof Terminal) {\n    return \"CONSUME\"\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n"]},"metadata":{},"sourceType":"script"}