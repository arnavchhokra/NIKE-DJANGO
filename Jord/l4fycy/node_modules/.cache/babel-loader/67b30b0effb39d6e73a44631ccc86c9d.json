{"ast":null,"code":"import _defineProperty from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useEffect } from 'react';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './useTexture.js';\nvar cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\n\nfunction useKTX2(input) {\n  var basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(cdn, \"/basis/\");\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, function (loader) {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  }); // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n\n  useEffect(function () {\n    var array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n\n  if (IsObject(input)) {\n    var keys = Object.keys(input);\n    var keyed = {};\n    keys.forEach(function (key) {\n      return Object.assign(keyed, _defineProperty({}, key, textures[keys.indexOf(key)]));\n    });\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseKTX2.preload = function (url) {\n  var basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(cdn, \"/basis/\");\n  return useLoader.preload(KTX2Loader, url, function (loader) {\n    loader.setTranscoderPath(basisPath);\n  });\n};\n\nuseKTX2.clear = function (input) {\n  return useLoader.clear(KTX2Loader, input);\n};\n\nexport { useKTX2 };","map":{"version":3,"names":["useThree","useLoader","useEffect","KTX2Loader","IsObject","cdn","useKTX2","input","basisPath","gl","state","textures","Object","values","loader","detectSupport","setTranscoderPath","array","Array","isArray","forEach","initTexture","keys","keyed","key","assign","indexOf","preload","url","clear"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@react-three/drei/core/useKTX2.js"],"sourcesContent":["import { useThree, useLoader } from '@react-three/fiber';\r\nimport { useEffect } from 'react';\r\nimport { KTX2Loader } from 'three-stdlib';\r\nimport { IsObject } from './useTexture.js';\r\n\r\nconst cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\r\nfunction useKTX2(input, basisPath = `${cdn}/basis/`) {\r\n  const gl = useThree(state => state.gl);\r\n  const textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, loader => {\r\n    loader.detectSupport(gl);\r\n    loader.setTranscoderPath(basisPath);\r\n  }); // https://github.com/mrdoob/three.js/issues/22696\r\n  // Upload the texture to the GPU immediately instead of waiting for the first render\r\n\r\n  useEffect(() => {\r\n    const array = Array.isArray(textures) ? textures : [textures];\r\n    array.forEach(gl.initTexture);\r\n  }, [gl, textures]);\r\n\r\n  if (IsObject(input)) {\r\n    const keys = Object.keys(input);\r\n    const keyed = {};\r\n    keys.forEach(key => Object.assign(keyed, {\r\n      [key]: textures[keys.indexOf(key)]\r\n    }));\r\n    return keyed;\r\n  } else {\r\n    return textures;\r\n  }\r\n}\r\n\r\nuseKTX2.preload = (url, basisPath = `${cdn}/basis/`) => useLoader.preload(KTX2Loader, url, loader => {\r\n  loader.setTranscoderPath(basisPath);\r\n});\r\n\r\nuseKTX2.clear = input => useLoader.clear(KTX2Loader, input);\r\n\r\nexport { useKTX2 };\r\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,IAAMC,GAAG,GAAG,uDAAZ;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAqD;EAAA,IAA7BC,SAA6B,iFAAdH,GAAc;EACnD,IAAMI,EAAE,GAAGT,QAAQ,CAAC,UAAAU,KAAK;IAAA,OAAIA,KAAK,CAACD,EAAV;EAAA,CAAN,CAAnB;EACA,IAAME,QAAQ,GAAGV,SAAS,CAACE,UAAD,EAAaC,QAAQ,CAACG,KAAD,CAAR,GAAkBK,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAlB,GAAyCA,KAAtD,EAA6D,UAAAO,MAAM,EAAI;IAC/FA,MAAM,CAACC,aAAP,CAAqBN,EAArB;IACAK,MAAM,CAACE,iBAAP,CAAyBR,SAAzB;EACD,CAHyB,CAA1B,CAFmD,CAK/C;EACJ;;EAEAN,SAAS,CAAC,YAAM;IACd,IAAMe,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcR,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAD,CAAnD;IACAM,KAAK,CAACG,OAAN,CAAcX,EAAE,CAACY,WAAjB;EACD,CAHQ,EAGN,CAACZ,EAAD,EAAKE,QAAL,CAHM,CAAT;;EAKA,IAAIP,QAAQ,CAACG,KAAD,CAAZ,EAAqB;IACnB,IAAMe,IAAI,GAAGV,MAAM,CAACU,IAAP,CAAYf,KAAZ,CAAb;IACA,IAAMgB,KAAK,GAAG,EAAd;IACAD,IAAI,CAACF,OAAL,CAAa,UAAAI,GAAG;MAAA,OAAIZ,MAAM,CAACa,MAAP,CAAcF,KAAd,sBACjBC,GADiB,EACXb,QAAQ,CAACW,IAAI,CAACI,OAAL,CAAaF,GAAb,CAAD,CADG,EAAJ;IAAA,CAAhB;IAGA,OAAOD,KAAP;EACD,CAPD,MAOO;IACL,OAAOZ,QAAP;EACD;AACF;;AAEDL,OAAO,CAACqB,OAAR,GAAkB,UAACC,GAAD;EAAA,IAAMpB,SAAN,iFAAqBH,GAArB;EAAA,OAAsCJ,SAAS,CAAC0B,OAAV,CAAkBxB,UAAlB,EAA8ByB,GAA9B,EAAmC,UAAAd,MAAM,EAAI;IACnGA,MAAM,CAACE,iBAAP,CAAyBR,SAAzB;EACD,CAFuD,CAAtC;AAAA,CAAlB;;AAIAF,OAAO,CAACuB,KAAR,GAAgB,UAAAtB,KAAK;EAAA,OAAIN,SAAS,CAAC4B,KAAV,CAAgB1B,UAAhB,EAA4BI,KAA5B,CAAJ;AAAA,CAArB;;AAEA,SAASD,OAAT"},"metadata":{},"sourceType":"module"}