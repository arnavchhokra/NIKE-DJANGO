{"ast":null,"code":"import _classCallCheck from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Vector3, Mesh, SkinnedMesh } from 'three';\n/**\n * Usage:\n *  const exporter = new STLExporter();\n *\n *  // second argument is a list of options\n *  const data = exporter.parse( mesh, { binary: true } );\n *\n */\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/f7ec78508c6797e42f87a4390735bc2c650a1bfd/types/three/examples/jsm/exporters/STLExporter.d.ts\n\nvar STLExporter = /*#__PURE__*/function () {\n  function STLExporter() {\n    _classCallCheck(this, STLExporter);\n\n    _defineProperty(this, \"binary\", void 0);\n\n    _defineProperty(this, \"output\", void 0);\n\n    _defineProperty(this, \"offset\", void 0);\n\n    _defineProperty(this, \"objects\", void 0);\n\n    _defineProperty(this, \"triangles\", void 0);\n\n    _defineProperty(this, \"vA\", void 0);\n\n    _defineProperty(this, \"vB\", void 0);\n\n    _defineProperty(this, \"vC\", void 0);\n\n    _defineProperty(this, \"cb\", void 0);\n\n    _defineProperty(this, \"ab\", void 0);\n\n    _defineProperty(this, \"normal\", void 0);\n\n    this.binary = false;\n    this.output = '';\n    this.offset = 80; // skip header\n\n    this.objects = [];\n    this.triangles = 0;\n    this.vA = new Vector3();\n    this.vB = new Vector3();\n    this.vC = new Vector3();\n    this.cb = new Vector3();\n    this.ab = new Vector3();\n    this.normal = new Vector3();\n  }\n\n  _createClass(STLExporter, [{\n    key: \"parse\",\n    value: function parse(scene, options) {\n      var _this = this;\n\n      this.binary = options.binary !== undefined ? options.binary : false; //\n\n      scene.traverse(function (object) {\n        if (object instanceof Mesh && object.isMesh) {\n          var geometry = object.geometry;\n\n          if (!geometry.isBufferGeometry) {\n            throw new Error('THREE.STLExporter: Geometry is not of type THREE.BufferGeometry.');\n          }\n\n          var index = geometry.index;\n          var positionAttribute = geometry.getAttribute('position');\n          _this.triangles += index !== null ? index.count / 3 : positionAttribute.count / 3;\n\n          _this.objects.push({\n            object3d: object,\n            geometry: geometry\n          });\n        }\n      });\n\n      if (this.binary) {\n        var bufferLength = this.triangles * 2 + this.triangles * 3 * 4 * 4 + 80 + 4;\n        var arrayBuffer = new ArrayBuffer(bufferLength);\n        this.output = new DataView(arrayBuffer);\n        this.output.setUint32(this.offset, this.triangles, true);\n        this.offset += 4;\n      } else {\n        this.output = '';\n        this.output += 'solid exported\\n';\n      }\n\n      for (var i = 0, il = this.objects.length; i < il; i++) {\n        var object = this.objects[i].object3d;\n        var geometry = this.objects[i].geometry;\n        var index = geometry.index;\n        var positionAttribute = geometry.getAttribute('position');\n\n        if (object instanceof SkinnedMesh) {\n          if (index !== null) {\n            // indexed geometry\n            for (var j = 0; j < index.count; j += 3) {\n              var a = index.getX(j + 0);\n              var b = index.getX(j + 1);\n              var c = index.getX(j + 2);\n              this.writeFace(a, b, c, positionAttribute, object);\n            }\n          } else {\n            // non-indexed geometry\n            for (var _j = 0; _j < positionAttribute.count; _j += 3) {\n              var _a = _j + 0;\n\n              var _b = _j + 1;\n\n              var _c = _j + 2;\n\n              this.writeFace(_a, _b, _c, positionAttribute, object);\n            }\n          }\n        }\n      }\n\n      if (!this.binary) {\n        this.output += 'endsolid exported\\n';\n      }\n\n      return this.output;\n    }\n  }, {\n    key: \"writeFace\",\n    value: function writeFace(a, b, c, positionAttribute, object) {\n      this.vA.fromBufferAttribute(positionAttribute, a);\n      this.vB.fromBufferAttribute(positionAttribute, b);\n      this.vC.fromBufferAttribute(positionAttribute, c);\n\n      if (object.isSkinnedMesh) {\n        object.boneTransform(a, this.vA);\n        object.boneTransform(b, this.vB);\n        object.boneTransform(c, this.vC);\n      }\n\n      this.vA.applyMatrix4(object.matrixWorld);\n      this.vB.applyMatrix4(object.matrixWorld);\n      this.vC.applyMatrix4(object.matrixWorld);\n      this.writeNormal(this.vA, this.vB, this.vC);\n      this.writeVertex(this.vA);\n      this.writeVertex(this.vB);\n      this.writeVertex(this.vC);\n\n      if (this.binary && this.output instanceof DataView) {\n        this.output.setUint16(this.offset, 0, true);\n        this.offset += 2;\n      } else {\n        this.output += '\\t\\tendloop\\n';\n        this.output += '\\tendfacet\\n';\n      }\n    }\n  }, {\n    key: \"writeNormal\",\n    value: function writeNormal(vA, vB, vC) {\n      this.cb.subVectors(vC, vB);\n      this.ab.subVectors(vA, vB);\n      this.cb.cross(this.ab).normalize();\n      this.normal.copy(this.cb).normalize();\n\n      if (this.binary && this.output instanceof DataView) {\n        this.output.setFloat32(this.offset, this.normal.x, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, this.normal.y, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, this.normal.z, true);\n        this.offset += 4;\n      } else {\n        this.output += \"\\tfacet normal \".concat(this.normal.x, \" \").concat(this.normal.y, \" \").concat(this.normal.z, \"\\n\");\n        this.output += '\\t\\touter loop\\n';\n      }\n    }\n  }, {\n    key: \"writeVertex\",\n    value: function writeVertex(vertex) {\n      if (this.binary && this.output instanceof DataView) {\n        this.output.setFloat32(this.offset, vertex.x, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, vertex.y, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, vertex.z, true);\n        this.offset += 4;\n      } else {\n        this.output += \"\\t\\t\\tvertex vertex.x vertex.y vertex.z\\n\";\n      }\n    }\n  }]);\n\n  return STLExporter;\n}();\n\nexport { STLExporter };","map":{"version":3,"names":["_defineProperty","Vector3","Mesh","SkinnedMesh","STLExporter","binary","output","offset","objects","triangles","vA","vB","vC","cb","ab","normal","scene","options","undefined","traverse","object","isMesh","geometry","isBufferGeometry","Error","index","positionAttribute","getAttribute","count","push","object3d","bufferLength","arrayBuffer","ArrayBuffer","DataView","setUint32","i","il","length","j","a","getX","b","c","writeFace","fromBufferAttribute","isSkinnedMesh","boneTransform","applyMatrix4","matrixWorld","writeNormal","writeVertex","setUint16","subVectors","cross","normalize","copy","setFloat32","x","y","z","vertex"],"sources":["D:/Jord/l4fycy/node_modules/three-stdlib/exporters/STLExporter.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Vector3, Mesh, SkinnedMesh } from 'three';\n\n/**\n * Usage:\n *  const exporter = new STLExporter();\n *\n *  // second argument is a list of options\n *  const data = exporter.parse( mesh, { binary: true } );\n *\n */\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/f7ec78508c6797e42f87a4390735bc2c650a1bfd/types/three/examples/jsm/exporters/STLExporter.d.ts\n\nclass STLExporter {\n  constructor() {\n    _defineProperty(this, \"binary\", void 0);\n\n    _defineProperty(this, \"output\", void 0);\n\n    _defineProperty(this, \"offset\", void 0);\n\n    _defineProperty(this, \"objects\", void 0);\n\n    _defineProperty(this, \"triangles\", void 0);\n\n    _defineProperty(this, \"vA\", void 0);\n\n    _defineProperty(this, \"vB\", void 0);\n\n    _defineProperty(this, \"vC\", void 0);\n\n    _defineProperty(this, \"cb\", void 0);\n\n    _defineProperty(this, \"ab\", void 0);\n\n    _defineProperty(this, \"normal\", void 0);\n\n    this.binary = false;\n    this.output = '';\n    this.offset = 80; // skip header\n\n    this.objects = [];\n    this.triangles = 0;\n    this.vA = new Vector3();\n    this.vB = new Vector3();\n    this.vC = new Vector3();\n    this.cb = new Vector3();\n    this.ab = new Vector3();\n    this.normal = new Vector3();\n  }\n\n  parse(scene, options) {\n    this.binary = options.binary !== undefined ? options.binary : false; //\n\n    scene.traverse(object => {\n      if (object instanceof Mesh && object.isMesh) {\n        const geometry = object.geometry;\n\n        if (!geometry.isBufferGeometry) {\n          throw new Error('THREE.STLExporter: Geometry is not of type THREE.BufferGeometry.');\n        }\n\n        const index = geometry.index;\n        const positionAttribute = geometry.getAttribute('position');\n        this.triangles += index !== null ? index.count / 3 : positionAttribute.count / 3;\n        this.objects.push({\n          object3d: object,\n          geometry: geometry\n        });\n      }\n    });\n\n    if (this.binary) {\n      const bufferLength = this.triangles * 2 + this.triangles * 3 * 4 * 4 + 80 + 4;\n      const arrayBuffer = new ArrayBuffer(bufferLength);\n      this.output = new DataView(arrayBuffer);\n      this.output.setUint32(this.offset, this.triangles, true);\n      this.offset += 4;\n    } else {\n      this.output = '';\n      this.output += 'solid exported\\n';\n    }\n\n    for (let i = 0, il = this.objects.length; i < il; i++) {\n      const object = this.objects[i].object3d;\n      const geometry = this.objects[i].geometry;\n      const index = geometry.index;\n      const positionAttribute = geometry.getAttribute('position');\n\n      if (object instanceof SkinnedMesh) {\n        if (index !== null) {\n          // indexed geometry\n          for (let j = 0; j < index.count; j += 3) {\n            const a = index.getX(j + 0);\n            const b = index.getX(j + 1);\n            const c = index.getX(j + 2);\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        } else {\n          // non-indexed geometry\n          for (let j = 0; j < positionAttribute.count; j += 3) {\n            const a = j + 0;\n            const b = j + 1;\n            const c = j + 2;\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        }\n      }\n    }\n\n    if (!this.binary) {\n      this.output += 'endsolid exported\\n';\n    }\n\n    return this.output;\n  }\n\n  writeFace(a, b, c, positionAttribute, object) {\n    this.vA.fromBufferAttribute(positionAttribute, a);\n    this.vB.fromBufferAttribute(positionAttribute, b);\n    this.vC.fromBufferAttribute(positionAttribute, c);\n\n    if (object.isSkinnedMesh) {\n      object.boneTransform(a, this.vA);\n      object.boneTransform(b, this.vB);\n      object.boneTransform(c, this.vC);\n    }\n\n    this.vA.applyMatrix4(object.matrixWorld);\n    this.vB.applyMatrix4(object.matrixWorld);\n    this.vC.applyMatrix4(object.matrixWorld);\n    this.writeNormal(this.vA, this.vB, this.vC);\n    this.writeVertex(this.vA);\n    this.writeVertex(this.vB);\n    this.writeVertex(this.vC);\n\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setUint16(this.offset, 0, true);\n      this.offset += 2;\n    } else {\n      this.output += '\\t\\tendloop\\n';\n      this.output += '\\tendfacet\\n';\n    }\n  }\n\n  writeNormal(vA, vB, vC) {\n    this.cb.subVectors(vC, vB);\n    this.ab.subVectors(vA, vB);\n    this.cb.cross(this.ab).normalize();\n    this.normal.copy(this.cb).normalize();\n\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, this.normal.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\\tfacet normal ${this.normal.x} ${this.normal.y} ${this.normal.z}\\n`;\n      this.output += '\\t\\touter loop\\n';\n    }\n  }\n\n  writeVertex(vertex) {\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, vertex.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\\t\\t\\tvertex vertex.x vertex.y vertex.z\\n`;\n    }\n  }\n\n}\n\nexport { STLExporter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}