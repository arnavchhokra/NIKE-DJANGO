{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { fromType } from '../Nodes.js';\nimport { Loader } from 'three';\n\nvar NodeLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(NodeLoader, _Loader);\n\n  var _super = _createSuper(NodeLoader);\n\n  function NodeLoader(manager) {\n    var _this;\n\n    _classCallCheck(this, NodeLoader);\n\n    _this = _super.call(this, manager);\n    _this.textures = {};\n    return _this;\n  }\n\n  _createClass(NodeLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this2 = this;\n\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(_this2.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          _this2.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parseNodes\",\n    value: function parseNodes(json) {\n      var nodes = {};\n\n      if (json !== undefined) {\n        var _iterator = _createForOfIteratorHelper(json),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var nodeJSON = _step.value;\n            var uuid = nodeJSON.uuid,\n                _type = nodeJSON.type;\n            nodes[uuid] = fromType(_type);\n            nodes[uuid].uuid = uuid;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var meta = {\n          nodes: nodes,\n          textures: this.textures\n        };\n\n        var _iterator2 = _createForOfIteratorHelper(json),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _nodeJSON = _step2.value;\n            _nodeJSON.meta = meta;\n            var node = nodes[_nodeJSON.uuid];\n            node.deserialize(_nodeJSON);\n            delete _nodeJSON.meta;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      return nodes;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json) {\n      var node = fromType(type);\n      node.uuid = json.uuid;\n      var nodes = this.parseNodes(json.inputNodes);\n      var meta = {\n        nodes: nodes,\n        textures: this.textures\n      };\n      json.meta = meta;\n      node.deserialize(json);\n      delete json.meta;\n      return node;\n    }\n  }, {\n    key: \"setTextures\",\n    value: function setTextures(value) {\n      this.textures = value;\n      return this;\n    }\n  }]);\n\n  return NodeLoader;\n}(Loader);\n\nexport default NodeLoader;","map":{"version":3,"names":["fromType","Loader","NodeLoader","manager","textures","url","onLoad","onProgress","onError","loader","FileLoader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","JSON","e","console","error","itemError","json","nodes","undefined","nodeJSON","uuid","type","meta","node","deserialize","parseNodes","inputNodes","value"],"sources":["D:/Github/NIKE-DJANGO/Jord/l4fycy/node_modules/three-stdlib/nodes/loaders/NodeLoader.js"],"sourcesContent":["import { fromType } from '../Nodes.js';\r\nimport { Loader } from 'three';\r\n\r\nclass NodeLoader extends Loader {\r\n  constructor(manager) {\r\n    super(manager);\r\n    this.textures = {};\r\n  }\r\n\r\n  load(url, onLoad, onProgress, onError) {\r\n    const loader = new FileLoader(this.manager);\r\n    loader.setPath(this.path);\r\n    loader.setRequestHeader(this.requestHeader);\r\n    loader.setWithCredentials(this.withCredentials);\r\n    loader.load(url, text => {\r\n      try {\r\n        onLoad(this.parse(JSON.parse(text)));\r\n      } catch (e) {\r\n        if (onError) {\r\n          onError(e);\r\n        } else {\r\n          console.error(e);\r\n        }\r\n\r\n        this.manager.itemError(url);\r\n      }\r\n    }, onProgress, onError);\r\n  }\r\n\r\n  parseNodes(json) {\r\n    const nodes = {};\r\n\r\n    if (json !== undefined) {\r\n      for (const nodeJSON of json) {\r\n        const {\r\n          uuid,\r\n          type\r\n        } = nodeJSON;\r\n        nodes[uuid] = fromType(type);\r\n        nodes[uuid].uuid = uuid;\r\n      }\r\n\r\n      const meta = {\r\n        nodes,\r\n        textures: this.textures\r\n      };\r\n\r\n      for (const nodeJSON of json) {\r\n        nodeJSON.meta = meta;\r\n        const node = nodes[nodeJSON.uuid];\r\n        node.deserialize(nodeJSON);\r\n        delete nodeJSON.meta;\r\n      }\r\n    }\r\n\r\n    return nodes;\r\n  }\r\n\r\n  parse(json) {\r\n    const node = fromType(type);\r\n    node.uuid = json.uuid;\r\n    const nodes = this.parseNodes(json.inputNodes);\r\n    const meta = {\r\n      nodes,\r\n      textures: this.textures\r\n    };\r\n    json.meta = meta;\r\n    node.deserialize(json);\r\n    delete json.meta;\r\n    return node;\r\n  }\r\n\r\n  setTextures(value) {\r\n    this.textures = value;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport default NodeLoader;\r\n"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;;IAEMC,U;;;;;EACJ,oBAAYC,OAAZ,EAAqB;IAAA;;IAAA;;IACnB,0BAAMA,OAAN;IACA,MAAKC,QAAL,GAAgB,EAAhB;IAFmB;EAGpB;;;;WAED,cAAKC,GAAL,EAAUC,MAAV,EAAkBC,UAAlB,EAA8BC,OAA9B,EAAuC;MAAA;;MACrC,IAAMC,MAAM,GAAG,IAAIC,UAAJ,CAAe,KAAKP,OAApB,CAAf;MACAM,MAAM,CAACE,OAAP,CAAe,KAAKC,IAApB;MACAH,MAAM,CAACI,gBAAP,CAAwB,KAAKC,aAA7B;MACAL,MAAM,CAACM,kBAAP,CAA0B,KAAKC,eAA/B;MACAP,MAAM,CAACQ,IAAP,CAAYZ,GAAZ,EAAiB,UAAAa,IAAI,EAAI;QACvB,IAAI;UACFZ,MAAM,CAAC,MAAI,CAACa,KAAL,CAAWC,IAAI,CAACD,KAAL,CAAWD,IAAX,CAAX,CAAD,CAAN;QACD,CAFD,CAEE,OAAOG,CAAP,EAAU;UACV,IAAIb,OAAJ,EAAa;YACXA,OAAO,CAACa,CAAD,CAAP;UACD,CAFD,MAEO;YACLC,OAAO,CAACC,KAAR,CAAcF,CAAd;UACD;;UAED,MAAI,CAAClB,OAAL,CAAaqB,SAAb,CAAuBnB,GAAvB;QACD;MACF,CAZD,EAYGE,UAZH,EAYeC,OAZf;IAaD;;;WAED,oBAAWiB,IAAX,EAAiB;MACf,IAAMC,KAAK,GAAG,EAAd;;MAEA,IAAID,IAAI,KAAKE,SAAb,EAAwB;QAAA,2CACCF,IADD;QAAA;;QAAA;UACtB,oDAA6B;YAAA,IAAlBG,QAAkB;YAC3B,IACEC,IADF,GAGID,QAHJ,CACEC,IADF;YAAA,IAEEC,KAFF,GAGIF,QAHJ,CAEEE,IAFF;YAIAJ,KAAK,CAACG,IAAD,CAAL,GAAc7B,QAAQ,CAAC8B,KAAD,CAAtB;YACAJ,KAAK,CAACG,IAAD,CAAL,CAAYA,IAAZ,GAAmBA,IAAnB;UACD;QARqB;UAAA;QAAA;UAAA;QAAA;;QAUtB,IAAME,IAAI,GAAG;UACXL,KAAK,EAALA,KADW;UAEXtB,QAAQ,EAAE,KAAKA;QAFJ,CAAb;;QAVsB,4CAeCqB,IAfD;QAAA;;QAAA;UAetB,uDAA6B;YAAA,IAAlBG,SAAkB;YAC3BA,SAAQ,CAACG,IAAT,GAAgBA,IAAhB;YACA,IAAMC,IAAI,GAAGN,KAAK,CAACE,SAAQ,CAACC,IAAV,CAAlB;YACAG,IAAI,CAACC,WAAL,CAAiBL,SAAjB;YACA,OAAOA,SAAQ,CAACG,IAAhB;UACD;QApBqB;UAAA;QAAA;UAAA;QAAA;MAqBvB;;MAED,OAAOL,KAAP;IACD;;;WAED,eAAMD,IAAN,EAAY;MACV,IAAMO,IAAI,GAAGhC,QAAQ,CAAC8B,IAAD,CAArB;MACAE,IAAI,CAACH,IAAL,GAAYJ,IAAI,CAACI,IAAjB;MACA,IAAMH,KAAK,GAAG,KAAKQ,UAAL,CAAgBT,IAAI,CAACU,UAArB,CAAd;MACA,IAAMJ,IAAI,GAAG;QACXL,KAAK,EAALA,KADW;QAEXtB,QAAQ,EAAE,KAAKA;MAFJ,CAAb;MAIAqB,IAAI,CAACM,IAAL,GAAYA,IAAZ;MACAC,IAAI,CAACC,WAAL,CAAiBR,IAAjB;MACA,OAAOA,IAAI,CAACM,IAAZ;MACA,OAAOC,IAAP;IACD;;;WAED,qBAAYI,KAAZ,EAAmB;MACjB,KAAKhC,QAAL,GAAgBgC,KAAhB;MACA,OAAO,IAAP;IACD;;;;EAxEsBnC,M;;AA4EzB,eAAeC,UAAf"},"metadata":{},"sourceType":"module"}