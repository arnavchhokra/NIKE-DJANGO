{"ast":null,"code":"import { StereoCamera, Vector2 } from 'three';\n\nvar StereoEffect = function StereoEffect(renderer) {\n  var _stereo = new StereoCamera();\n\n  _stereo.aspect = 0.5;\n  var size = new Vector2();\n\n  this.setEyeSeparation = function (eyeSep) {\n    _stereo.eyeSep = eyeSep;\n  };\n\n  this.setSize = function (width, height) {\n    renderer.setSize(width, height);\n  };\n\n  this.render = function (scene, camera) {\n    scene.updateMatrixWorld();\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    _stereo.update(camera);\n\n    renderer.getSize(size);\n    if (renderer.autoClear) renderer.clear();\n    renderer.setScissorTest(true);\n    renderer.setScissor(0, 0, size.width / 2, size.height);\n    renderer.setViewport(0, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraL);\n    renderer.setScissor(size.width / 2, 0, size.width / 2, size.height);\n    renderer.setViewport(size.width / 2, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraR);\n    renderer.setScissorTest(false);\n  };\n};\n\nexport { StereoEffect };","map":{"version":3,"names":["StereoCamera","Vector2","StereoEffect","renderer","_stereo","aspect","size","setEyeSeparation","eyeSep","setSize","width","height","render","scene","camera","updateMatrixWorld","parent","update","getSize","autoClear","clear","setScissorTest","setScissor","setViewport","cameraL","cameraR"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/three-stdlib/effects/StereoEffect.js"],"sourcesContent":["import { StereoCamera, Vector2 } from 'three';\n\nconst StereoEffect = function (renderer) {\n  const _stereo = new StereoCamera();\n\n  _stereo.aspect = 0.5;\n  const size = new Vector2();\n\n  this.setEyeSeparation = eyeSep => {\n    _stereo.eyeSep = eyeSep;\n  };\n\n  this.setSize = (width, height) => {\n    renderer.setSize(width, height);\n  };\n\n  this.render = (scene, camera) => {\n    scene.updateMatrixWorld();\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    _stereo.update(camera);\n\n    renderer.getSize(size);\n    if (renderer.autoClear) renderer.clear();\n    renderer.setScissorTest(true);\n    renderer.setScissor(0, 0, size.width / 2, size.height);\n    renderer.setViewport(0, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraL);\n    renderer.setScissor(size.width / 2, 0, size.width / 2, size.height);\n    renderer.setViewport(size.width / 2, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraR);\n    renderer.setScissorTest(false);\n  };\n};\n\nexport { StereoEffect };\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,OAAvB,QAAsC,OAAtC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAUC,QAAV,EAAoB;EACvC,IAAMC,OAAO,GAAG,IAAIJ,YAAJ,EAAhB;;EAEAI,OAAO,CAACC,MAAR,GAAiB,GAAjB;EACA,IAAMC,IAAI,GAAG,IAAIL,OAAJ,EAAb;;EAEA,KAAKM,gBAAL,GAAwB,UAAAC,MAAM,EAAI;IAChCJ,OAAO,CAACI,MAAR,GAAiBA,MAAjB;EACD,CAFD;;EAIA,KAAKC,OAAL,GAAe,UAACC,KAAD,EAAQC,MAAR,EAAmB;IAChCR,QAAQ,CAACM,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB;EACD,CAFD;;EAIA,KAAKC,MAAL,GAAc,UAACC,KAAD,EAAQC,MAAR,EAAmB;IAC/BD,KAAK,CAACE,iBAAN;IACA,IAAID,MAAM,CAACE,MAAP,KAAkB,IAAtB,EAA4BF,MAAM,CAACC,iBAAP;;IAE5BX,OAAO,CAACa,MAAR,CAAeH,MAAf;;IAEAX,QAAQ,CAACe,OAAT,CAAiBZ,IAAjB;IACA,IAAIH,QAAQ,CAACgB,SAAb,EAAwBhB,QAAQ,CAACiB,KAAT;IACxBjB,QAAQ,CAACkB,cAAT,CAAwB,IAAxB;IACAlB,QAAQ,CAACmB,UAAT,CAAoB,CAApB,EAAuB,CAAvB,EAA0BhB,IAAI,CAACI,KAAL,GAAa,CAAvC,EAA0CJ,IAAI,CAACK,MAA/C;IACAR,QAAQ,CAACoB,WAAT,CAAqB,CAArB,EAAwB,CAAxB,EAA2BjB,IAAI,CAACI,KAAL,GAAa,CAAxC,EAA2CJ,IAAI,CAACK,MAAhD;IACAR,QAAQ,CAACS,MAAT,CAAgBC,KAAhB,EAAuBT,OAAO,CAACoB,OAA/B;IACArB,QAAQ,CAACmB,UAAT,CAAoBhB,IAAI,CAACI,KAAL,GAAa,CAAjC,EAAoC,CAApC,EAAuCJ,IAAI,CAACI,KAAL,GAAa,CAApD,EAAuDJ,IAAI,CAACK,MAA5D;IACAR,QAAQ,CAACoB,WAAT,CAAqBjB,IAAI,CAACI,KAAL,GAAa,CAAlC,EAAqC,CAArC,EAAwCJ,IAAI,CAACI,KAAL,GAAa,CAArD,EAAwDJ,IAAI,CAACK,MAA7D;IACAR,QAAQ,CAACS,MAAT,CAAgBC,KAAhB,EAAuBT,OAAO,CAACqB,OAA/B;IACAtB,QAAQ,CAACkB,cAAT,CAAwB,KAAxB;EACD,CAhBD;AAiBD,CA/BD;;AAiCA,SAASnB,YAAT"},"metadata":{},"sourceType":"module"}