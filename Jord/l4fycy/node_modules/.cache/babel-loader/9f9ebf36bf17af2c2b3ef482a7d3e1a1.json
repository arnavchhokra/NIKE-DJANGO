{"ast":null,"code":"import _classCallCheck from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader } from 'three';\nimport { GLTFLoader } from './GLTFLoader.js'; //\n// VRM is based on glTF 2.0 and VRM extension is defined\n// in top-level json.extensions.VRM\n\nvar VRMLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(VRMLoader, _Loader);\n\n  var _super = _createSuper(VRMLoader);\n\n  function VRMLoader(manager) {\n    var _this;\n\n    _classCallCheck(this, VRMLoader);\n\n    _this = _super.call(this, manager);\n    _this.gltfLoader = new GLTFLoader(manager);\n    return _this;\n  }\n\n  _createClass(VRMLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      this.gltfLoader.load(url, function (gltf) {\n        try {\n          scope.parse(gltf, onLoad);\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"setDRACOLoader\",\n    value: function setDRACOLoader(dracoLoader) {\n      this.gltfLoader.setDRACOLoader(dracoLoader);\n      return this;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(gltf, onLoad) {\n      // const gltfParser = gltf.parser;\n      // const gltfExtensions = gltf.userData.gltfExtensions || {};\n      // const vrmExtension = gltfExtensions.VRM || {};\n      // handle VRM Extension here\n      onLoad(gltf);\n    }\n  }]);\n\n  return VRMLoader;\n}(Loader);\n\nexport { VRMLoader };","map":{"version":3,"names":["Loader","GLTFLoader","VRMLoader","manager","gltfLoader","url","onLoad","onProgress","onError","scope","load","gltf","parse","e","console","error","itemError","dracoLoader","setDRACOLoader"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/three-stdlib/loaders/VRMLoader.js"],"sourcesContent":["import { Loader } from 'three';\nimport { GLTFLoader } from './GLTFLoader.js';\n\n//\n// VRM is based on glTF 2.0 and VRM extension is defined\n// in top-level json.extensions.VRM\n\nclass VRMLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.gltfLoader = new GLTFLoader(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    this.gltfLoader.load(url, function (gltf) {\n      try {\n        scope.parse(gltf, onLoad);\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  setDRACOLoader(dracoLoader) {\n    this.gltfLoader.setDRACOLoader(dracoLoader);\n    return this;\n  }\n\n  parse(gltf, onLoad) {\n    // const gltfParser = gltf.parser;\n    // const gltfExtensions = gltf.userData.gltfExtensions || {};\n    // const vrmExtension = gltfExtensions.VRM || {};\n    // handle VRM Extension here\n    onLoad(gltf);\n  }\n\n}\n\nexport { VRMLoader };\n"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B,C,CAEA;AACA;AACA;;IAEMC,S;;;;;EACJ,mBAAYC,OAAZ,EAAqB;IAAA;;IAAA;;IACnB,0BAAMA,OAAN;IACA,MAAKC,UAAL,GAAkB,IAAIH,UAAJ,CAAeE,OAAf,CAAlB;IAFmB;EAGpB;;;;WAED,cAAKE,GAAL,EAAUC,MAAV,EAAkBC,UAAlB,EAA8BC,OAA9B,EAAuC;MACrC,IAAMC,KAAK,GAAG,IAAd;MACA,KAAKL,UAAL,CAAgBM,IAAhB,CAAqBL,GAArB,EAA0B,UAAUM,IAAV,EAAgB;QACxC,IAAI;UACFF,KAAK,CAACG,KAAN,CAAYD,IAAZ,EAAkBL,MAAlB;QACD,CAFD,CAEE,OAAOO,CAAP,EAAU;UACV,IAAIL,OAAJ,EAAa;YACXA,OAAO,CAACK,CAAD,CAAP;UACD,CAFD,MAEO;YACLC,OAAO,CAACC,KAAR,CAAcF,CAAd;UACD;;UAEDJ,KAAK,CAACN,OAAN,CAAca,SAAd,CAAwBX,GAAxB;QACD;MACF,CAZD,EAYGE,UAZH,EAYeC,OAZf;IAaD;;;WAED,wBAAeS,WAAf,EAA4B;MAC1B,KAAKb,UAAL,CAAgBc,cAAhB,CAA+BD,WAA/B;MACA,OAAO,IAAP;IACD;;;WAED,eAAMN,IAAN,EAAYL,MAAZ,EAAoB;MAClB;MACA;MACA;MACA;MACAA,MAAM,CAACK,IAAD,CAAN;IACD;;;;EAlCqBX,M;;AAsCxB,SAASE,SAAT"},"metadata":{},"sourceType":"module"}