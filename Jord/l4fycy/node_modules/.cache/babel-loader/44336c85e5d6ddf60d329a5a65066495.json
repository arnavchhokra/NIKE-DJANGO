{"ast":null,"code":"import _objectSpread from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createClass from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  var material = /*#__PURE__*/function (_THREE$ShaderMaterial) {\n    _inherits(material, _THREE$ShaderMaterial);\n\n    var _super = _createSuper(material);\n\n    function material() {\n      var _this;\n\n      _classCallCheck(this, material);\n\n      var entries = Object.entries(uniforms); // Create unforms and shaders\n\n      _this = _super.call(this, {\n        uniforms: entries.reduce(function (acc, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              name = _ref2[0],\n              value = _ref2[1];\n\n          var uniform = THREE.UniformsUtils.clone(_defineProperty({}, name, {\n            value: value\n          }));\n          return _objectSpread(_objectSpread({}, acc), uniform);\n        }, {}),\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n      }); // Create getter/setters\n\n      _this.key = '';\n      entries.forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            name = _ref4[0];\n\n        return Object.defineProperty(_assertThisInitialized(_this), name, {\n          get: function get() {\n            return _this.uniforms[name].value;\n          },\n          set: function set(v) {\n            return _this.uniforms[name].value = v;\n          }\n        });\n      });\n      if (onInit) onInit(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    return _createClass(material);\n  }(THREE.ShaderMaterial);\n\n  material.key = THREE.MathUtils.generateUUID();\n  return material;\n}\n\nexport { shaderMaterial };","map":{"version":3,"names":["THREE","shaderMaterial","uniforms","vertexShader","fragmentShader","onInit","material","entries","Object","reduce","acc","name","value","uniform","UniformsUtils","clone","key","forEach","defineProperty","get","set","v","ShaderMaterial","MathUtils","generateUUID"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/@react-three/drei/core/shaderMaterial.js"],"sourcesContent":["import * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  const material = class material extends THREE.ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = THREE.UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return { ...acc,\n            ...uniform\n          };\n        }, {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      this.key = '';\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n      if (onInit) onInit(this);\n    }\n\n  };\n  material.key = THREE.MathUtils.generateUUID();\n  return material;\n}\n\nexport { shaderMaterial };\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,YAAlC,EAAgDC,cAAhD,EAAgEC,MAAhE,EAAwE;EACtE,IAAMC,QAAQ;IAAA;;IAAA;;IACZ,oBAAc;MAAA;;MAAA;;MACZ,IAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAeL,QAAf,CAAhB,CADY,CAC8B;;MAE1C,0BAAM;QACJA,QAAQ,EAAEK,OAAO,CAACE,MAAR,CAAe,UAACC,GAAD,QAAwB;UAAA;UAAA,IAAjBC,IAAiB;UAAA,IAAXC,KAAW;;UAC/C,IAAMC,OAAO,GAAGb,KAAK,CAACc,aAAN,CAAoBC,KAApB,qBACbJ,IADa,EACN;YACNC,KAAK,EAALA;UADM,CADM,EAAhB;UAKA,uCAAYF,GAAZ,GACKG,OADL;QAGD,CATS,EASP,EATO,CADN;QAWJV,YAAY,EAAZA,YAXI;QAYJC,cAAc,EAAdA;MAZI,CAAN,EAHY,CAgBR;;MAEJ,MAAKY,GAAL,GAAW,EAAX;MACAT,OAAO,CAACU,OAAR,CAAgB;QAAA;QAAA,IAAEN,IAAF;;QAAA,OAAYH,MAAM,CAACU,cAAP,gCAA4BP,IAA5B,EAAkC;UAC5DQ,GAAG,EAAE;YAAA,OAAM,MAAKjB,QAAL,CAAcS,IAAd,EAAoBC,KAA1B;UAAA,CADuD;UAE5DQ,GAAG,EAAE,aAAAC,CAAC;YAAA,OAAI,MAAKnB,QAAL,CAAcS,IAAd,EAAoBC,KAApB,GAA4BS,CAAhC;UAAA;QAFsD,CAAlC,CAAZ;MAAA,CAAhB;MAIA,IAAIhB,MAAJ,EAAYA,MAAM,+BAAN;MAvBA;IAwBb;;IAzBW;EAAA,EAA0BL,KAAK,CAACsB,cAAhC,CAAd;;EA4BAhB,QAAQ,CAACU,GAAT,GAAehB,KAAK,CAACuB,SAAN,CAAgBC,YAAhB,EAAf;EACA,OAAOlB,QAAP;AACD;;AAED,SAASL,cAAT"},"metadata":{},"sourceType":"module"}