{"ast":null,"code":"import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\n\nfunction useIntersect(onChange) {\n  var ref = React.useRef(null);\n  var check = React.useRef(false);\n  var temp = React.useRef(false);\n  React.useEffect(function () {\n    var obj = ref.current;\n\n    if (obj) {\n      // Stamp out frustum check pre-emptively\n      var unsub1 = addEffect(function () {\n        check.current = false;\n        return true;\n      }); // If the object is inside the frustum three will call onRender\n\n      var oldOnRender = obj.onBeforeRender;\n\n      obj.onBeforeRender = function () {\n        return check.current = true;\n      }; // Compare the check value against the temp value, if it differs set state\n\n\n      var unsub2 = addAfterEffect(function () {\n        if (check.current !== temp.current) onChange(temp.current = check.current);\n        return true;\n      });\n      return function () {\n        obj.onBeforeRender = oldOnRender;\n        unsub1();\n        unsub2();\n      };\n    }\n  }, []);\n  return ref;\n}\n\nexport { useIntersect };","map":{"version":3,"names":["React","addEffect","addAfterEffect","useIntersect","onChange","ref","useRef","check","temp","useEffect","obj","current","unsub1","oldOnRender","onBeforeRender","unsub2"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/@react-three/drei/core/useIntersect.js"],"sourcesContent":["import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\n\nfunction useIntersect(onChange) {\n  const ref = React.useRef(null);\n  const check = React.useRef(false);\n  const temp = React.useRef(false);\n  React.useEffect(() => {\n    const obj = ref.current;\n\n    if (obj) {\n      // Stamp out frustum check pre-emptively\n      const unsub1 = addEffect(() => {\n        check.current = false;\n        return true;\n      }); // If the object is inside the frustum three will call onRender\n\n      const oldOnRender = obj.onBeforeRender;\n\n      obj.onBeforeRender = () => check.current = true; // Compare the check value against the temp value, if it differs set state\n\n\n      const unsub2 = addAfterEffect(() => {\n        if (check.current !== temp.current) onChange(temp.current = check.current);\n        return true;\n      });\n      return () => {\n        obj.onBeforeRender = oldOnRender;\n        unsub1();\n        unsub2();\n      };\n    }\n  }, []);\n  return ref;\n}\n\nexport { useIntersect };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,oBAA1C;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;EAC9B,IAAMC,GAAG,GAAGL,KAAK,CAACM,MAAN,CAAa,IAAb,CAAZ;EACA,IAAMC,KAAK,GAAGP,KAAK,CAACM,MAAN,CAAa,KAAb,CAAd;EACA,IAAME,IAAI,GAAGR,KAAK,CAACM,MAAN,CAAa,KAAb,CAAb;EACAN,KAAK,CAACS,SAAN,CAAgB,YAAM;IACpB,IAAMC,GAAG,GAAGL,GAAG,CAACM,OAAhB;;IAEA,IAAID,GAAJ,EAAS;MACP;MACA,IAAME,MAAM,GAAGX,SAAS,CAAC,YAAM;QAC7BM,KAAK,CAACI,OAAN,GAAgB,KAAhB;QACA,OAAO,IAAP;MACD,CAHuB,CAAxB,CAFO,CAKH;;MAEJ,IAAME,WAAW,GAAGH,GAAG,CAACI,cAAxB;;MAEAJ,GAAG,CAACI,cAAJ,GAAqB;QAAA,OAAMP,KAAK,CAACI,OAAN,GAAgB,IAAtB;MAAA,CAArB,CATO,CAS0C;;;MAGjD,IAAMI,MAAM,GAAGb,cAAc,CAAC,YAAM;QAClC,IAAIK,KAAK,CAACI,OAAN,KAAkBH,IAAI,CAACG,OAA3B,EAAoCP,QAAQ,CAACI,IAAI,CAACG,OAAL,GAAeJ,KAAK,CAACI,OAAtB,CAAR;QACpC,OAAO,IAAP;MACD,CAH4B,CAA7B;MAIA,OAAO,YAAM;QACXD,GAAG,CAACI,cAAJ,GAAqBD,WAArB;QACAD,MAAM;QACNG,MAAM;MACP,CAJD;IAKD;EACF,CAzBD,EAyBG,EAzBH;EA0BA,OAAOV,GAAP;AACD;;AAED,SAASF,YAAT"},"metadata":{},"sourceType":"module"}