{"ast":null,"code":"/**\n * Lightweight thenable implementation that is entirely self-contained within a single\n * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n *\n * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n *\n * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n * have the same constructor signature and does not expose a `catch` method or the static\n * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n * in a native-or-polyfilled Promise first.\n *\n * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n * implementation I've found. And also, exercises like this are challenging and fun.)\n */\nfunction BespokeThenable() {\n  var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n\n  var queue = [];\n  var value;\n  var scheduled = 0;\n  var completeCalled = 0;\n\n  function then(onResolve, onReject) {\n    var nextThenable = BespokeThenable();\n\n    function handleNext() {\n      var cb = state > 0 ? onResolve : onReject;\n\n      if (isFn(cb)) {\n        try {\n          var result = cb(value);\n\n          if (result === nextThenable) {\n            recursiveError();\n          }\n\n          var resultThen = getThenableThen(result);\n\n          if (resultThen) {\n            resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n          } else {\n            nextThenable.resolve(result);\n          }\n        } catch (err) {\n          nextThenable.reject(err);\n        }\n      } else {\n        nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n      }\n    }\n\n    queue.push(handleNext);\n\n    if (state) {\n      scheduleQueueFlush();\n    }\n\n    return nextThenable;\n  }\n\n  var resolve = oneTime(function (val) {\n    if (!completeCalled) {\n      complete(1, val);\n    }\n  });\n  var reject = oneTime(function (reason) {\n    if (!completeCalled) {\n      complete(-1, reason);\n    }\n  });\n\n  function complete(st, val) {\n    completeCalled++;\n    var ignoreThrow = 0;\n\n    try {\n      if (val === thenableObj) {\n        recursiveError();\n      }\n\n      var valThen = st > 0 && getThenableThen(val);\n\n      if (valThen) {\n        valThen.call(val, oneTime(function (v) {\n          ignoreThrow++;\n          complete(1, v);\n        }), oneTime(function (v) {\n          ignoreThrow++;\n          complete(-1, v);\n        }));\n      } else {\n        state = st;\n        value = val;\n        scheduleQueueFlush();\n      }\n    } catch (e) {\n      if (!state && !ignoreThrow) {\n        complete(-1, e);\n      }\n    }\n  }\n\n  function scheduleQueueFlush() {\n    if (!scheduled) {\n      setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n\n      scheduled = 1;\n    }\n  }\n\n  function flushQueue() {\n    var q = queue;\n    scheduled = 0;\n    queue = [];\n    q.forEach(callIt);\n  }\n\n  function callIt(fn) {\n    fn();\n  }\n\n  function getThenableThen(val) {\n    var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n    return isFn(valThen) && valThen;\n  }\n\n  function oneTime(fn) {\n    var called = 0;\n    return function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      if (!called++) {\n        fn.apply(this, args);\n      }\n    };\n  }\n\n  function recursiveError() {\n    throw new TypeError('Chaining cycle detected');\n  }\n\n  var isFn = function isFn(v) {\n    return typeof v === 'function';\n  };\n\n  var thenableObj = {\n    then: then,\n    resolve: resolve,\n    reject: reject\n  };\n  return thenableObj;\n}\n/**\n * Thenable implementation that uses a native Promise under the covers. This implementation\n * is preferred if Promise is available, for better performance and dev tools integration.\n * @constructor\n */\n\n\nfunction NativePromiseThenable() {\n  var resolve, reject;\n  var promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    then: promise.then.bind(promise),\n    resolve: resolve,\n    reject: reject\n  };\n}\n/**\n * Promise.all() impl:\n */\n\n\nBespokeThenable.all = NativePromiseThenable.all = function (items) {\n  var resultCount = 0;\n  var results = [];\n  var out = DefaultThenable();\n\n  if (items.length === 0) {\n    out.resolve([]);\n  } else {\n    items.forEach(function (item, i) {\n      var itemThenable = DefaultThenable();\n      itemThenable.resolve(item);\n      itemThenable.then(function (res) {\n        resultCount++;\n        results[i] = res;\n\n        if (resultCount === items.length) {\n          out.resolve(results);\n        }\n      }, out.reject);\n    });\n  }\n\n  return out;\n};\n/**\n * Choose the best Thenable implementation and export it as the default.\n */\n\n\nvar DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\n/**\n * Main content for the worker that handles the loading and execution of\n * modules within it.\n */\n\nfunction workerBootstrap() {\n  var modules = Object.create(null); // Handle messages for registering a module\n\n  function registerModule(ref, callback) {\n    var id = ref.id;\n    var name = ref.name;\n    var dependencies = ref.dependencies;\n    if (dependencies === void 0) dependencies = [];\n    var init = ref.init;\n    if (init === void 0) init = function init() {};\n    var getTransferables = ref.getTransferables;\n    if (getTransferables === void 0) getTransferables = null; // Only register once\n\n    if (modules[id]) {\n      return;\n    }\n\n    try {\n      // If any dependencies are modules, ensure they're registered and grab their value\n      dependencies = dependencies.map(function (dep) {\n        if (dep && dep.isWorkerModule) {\n          registerModule(dep, function (depResult) {\n            if (depResult instanceof Error) {\n              throw depResult;\n            }\n          });\n          dep = modules[dep.id].value;\n        }\n\n        return dep;\n      }); // Rehydrate functions\n\n      init = rehydrate(\"<\" + name + \">.init\", init);\n\n      if (getTransferables) {\n        getTransferables = rehydrate(\"<\" + name + \">.getTransferables\", getTransferables);\n      } // Initialize the module and store its value\n\n\n      var value = null;\n\n      if (typeof init === 'function') {\n        value = init.apply(void 0, dependencies);\n      } else {\n        console.error('worker module init function failed to rehydrate');\n      }\n\n      modules[id] = {\n        id: id,\n        value: value,\n        getTransferables: getTransferables\n      };\n      callback(value);\n    } catch (err) {\n      if (!(err && err.noLog)) {\n        console.error(err);\n      }\n\n      callback(err);\n    }\n  } // Handle messages for calling a registered module's result function\n\n\n  function callModule(ref, callback) {\n    var ref$1;\n    var id = ref.id;\n    var args = ref.args;\n\n    if (!modules[id] || typeof modules[id].value !== 'function') {\n      callback(new Error(\"Worker module \" + id + \": not found or its 'init' did not return a function\"));\n    }\n\n    try {\n      var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n\n      if (result && typeof result.then === 'function') {\n        result.then(handleResult, function (rej) {\n          return callback(rej instanceof Error ? rej : new Error('' + rej));\n        });\n      } else {\n        handleResult(result);\n      }\n    } catch (err) {\n      callback(err);\n    }\n\n    function handleResult(result) {\n      try {\n        var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n\n        if (!tx || !Array.isArray(tx) || !tx.length) {\n          tx = undefined; //postMessage is very picky about not passing null or empty transferables\n        }\n\n        callback(result, tx);\n      } catch (err) {\n        console.error(err);\n        callback(err);\n      }\n    }\n  }\n\n  function rehydrate(name, str) {\n    var result = void 0;\n\n    self.troikaDefine = function (r) {\n      return result = r;\n    };\n\n    var url = URL.createObjectURL(new Blob([\"/** \" + name.replace(/\\*/g, '') + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\"], {\n      type: 'application/javascript'\n    }));\n\n    try {\n      importScripts(url);\n    } catch (err) {\n      console.error(err);\n    }\n\n    URL.revokeObjectURL(url);\n    delete self.troikaDefine;\n    return result;\n  } // Handler for all messages within the worker\n\n\n  self.addEventListener('message', function (e) {\n    var ref = e.data;\n    var messageId = ref.messageId;\n    var action = ref.action;\n    var data = ref.data;\n\n    try {\n      // Module registration\n      if (action === 'registerModule') {\n        registerModule(data, function (result) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: {\n                isCallable: typeof result === 'function'\n              }\n            });\n          }\n        });\n      } // Invocation\n\n\n      if (action === 'callModule') {\n        callModule(data, function (result, transferables) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: result\n            }, transferables || undefined);\n          }\n        });\n      }\n    } catch (err) {\n      postMessage({\n        messageId: messageId,\n        success: false,\n        error: err.stack\n      });\n    }\n  });\n}\n/**\n * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n * thread, for when the execution environment doesn't support web workers or they\n * are disallowed due to e.g. CSP security restrictions.\n */\n\n\nfunction defineMainThreadModule(options) {\n  var moduleFunc = function moduleFunc() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return moduleFunc._getInitResult().then(function (initResult) {\n      if (typeof initResult === 'function') {\n        return initResult.apply(void 0, args);\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function');\n      }\n    });\n  };\n\n  moduleFunc._getInitResult = function () {\n    // We can ignore getTransferables in main thread. TODO workerId?\n    var dependencies = options.dependencies;\n    var init = options.init; // Resolve dependencies\n\n    dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) {\n      return dep && dep._getInitResult ? dep._getInitResult() : dep;\n    }) : []; // Invoke init with the resolved dependencies\n\n    var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\n      return init.apply(null, deps);\n    }); // Cache the resolved promise for subsequent calls\n\n    moduleFunc._getInitResult = function () {\n      return initThenable;\n    };\n\n    return initThenable;\n  };\n\n  return moduleFunc;\n}\n\nvar _supportsWorkers = function supportsWorkers() {\n  var supported = false; // Only attempt worker initialization in browsers; elsewhere it would just be\n  // noise e.g. loading into a Node environment for SSR.\n\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n    try {\n      // TODO additional checks for things like importScripts within the worker?\n      //  Would need to be an async check.\n      var worker = new Worker(URL.createObjectURL(new Blob([''], {\n        type: 'application/javascript'\n      })));\n      worker.terminate();\n      supported = true;\n    } catch (err) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') ;else {\n        console.log(\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + err.message + \"]\");\n      }\n    }\n  } // Cached result\n\n\n  _supportsWorkers = function supportsWorkers() {\n    return supported;\n  };\n\n  return supported;\n};\n\nvar _workerModuleId = 0;\nvar _messageId = 0;\nvar _allowInitAsString = false;\nvar workers = Object.create(null);\nvar registeredModules = Object.create(null); //workerId -> Set<unregisterFn>\n\nvar openRequests = Object.create(null);\n/**\n * Define a module of code that will be executed with a web worker. This provides a simple\n * interface for moving chunks of logic off the main thread, and managing their dependencies\n * among one another.\n *\n * @param {object} options\n * @param {function} options.init\n * @param {array} [options.dependencies]\n * @param {function} [options.getTransferables]\n * @param {string} [options.name]\n * @param {string} [options.workerId]\n * @return {function(...[*]): {then}}\n */\n\nfunction defineWorkerModule(options) {\n  if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n    throw new Error('requires `options.init` function');\n  }\n\n  var dependencies = options.dependencies;\n  var init = options.init;\n  var getTransferables = options.getTransferables;\n  var workerId = options.workerId;\n\n  if (!_supportsWorkers()) {\n    return defineMainThreadModule(options);\n  }\n\n  if (workerId == null) {\n    workerId = '#default';\n  }\n\n  var id = \"workerModule\" + ++_workerModuleId;\n  var name = options.name || id;\n  var registrationThenable = null;\n  dependencies = dependencies && dependencies.map(function (dep) {\n    // Wrap raw functions as worker modules with no dependencies\n    if (typeof dep === 'function' && !dep.workerModuleData) {\n      _allowInitAsString = true;\n      dep = defineWorkerModule({\n        workerId: workerId,\n        name: \"<\" + name + \"> function dependency: \" + dep.name,\n        init: \"function(){return (\\n\" + stringifyFunction(dep) + \"\\n)}\"\n      });\n      _allowInitAsString = false;\n    } // Grab postable data for worker modules\n\n\n    if (dep && dep.workerModuleData) {\n      dep = dep.workerModuleData;\n    }\n\n    return dep;\n  });\n\n  function moduleFunc() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    } // Register this module if needed\n\n\n    if (!registrationThenable) {\n      registrationThenable = callWorker(workerId, 'registerModule', moduleFunc.workerModuleData);\n\n      var unregister = function unregister() {\n        registrationThenable = null;\n        registeredModules[workerId].delete(unregister);\n      };\n\n      (registeredModules[workerId] || (registeredModules[workerId] = new Set())).add(unregister);\n    } // Invoke the module, returning a thenable\n\n\n    return registrationThenable.then(function (ref) {\n      var isCallable = ref.isCallable;\n\n      if (isCallable) {\n        return callWorker(workerId, 'callModule', {\n          id: id,\n          args: args\n        });\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function');\n      }\n    });\n  }\n\n  moduleFunc.workerModuleData = {\n    isWorkerModule: true,\n    id: id,\n    name: name,\n    dependencies: dependencies,\n    init: stringifyFunction(init),\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\n  };\n  return moduleFunc;\n}\n/**\n * Terminate an active Worker by a workerId that was passed to defineWorkerModule.\n * This only terminates the Worker itself; the worker module will remain available\n * and if you call it again its Worker will be respawned.\n * @param {string} workerId\n */\n\n\nfunction terminateWorker(workerId) {\n  // Unregister all modules that were registered in that worker\n  if (registeredModules[workerId]) {\n    registeredModules[workerId].forEach(function (unregister) {\n      unregister();\n    });\n  } // Terminate the Worker object\n\n\n  if (workers[workerId]) {\n    workers[workerId].terminate();\n    delete workers[workerId];\n  }\n}\n/**\n * Stringifies a function into a form that can be deserialized in the worker\n * @param fn\n */\n\n\nfunction stringifyFunction(fn) {\n  var str = fn.toString(); // If it was defined in object method/property format, it needs to be modified\n\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n    str = 'function ' + str;\n  }\n\n  return str;\n}\n\nfunction getWorker(workerId) {\n  var worker = workers[workerId];\n\n  if (!worker) {\n    // Bootstrap the worker's content\n    var bootstrap = stringifyFunction(workerBootstrap); // Create the worker from the bootstrap function content\n\n    worker = workers[workerId] = new Worker(URL.createObjectURL(new Blob([\"/** Worker Module Bootstrap: \" + workerId.replace(/\\*/g, '') + \" **/\\n\\n;(\" + bootstrap + \")()\"], {\n      type: 'application/javascript'\n    }))); // Single handler for response messages from the worker\n\n    worker.onmessage = function (e) {\n      var response = e.data;\n      var msgId = response.messageId;\n      var callback = openRequests[msgId];\n\n      if (!callback) {\n        throw new Error('WorkerModule response with empty or unknown messageId');\n      }\n\n      delete openRequests[msgId];\n      callback(response);\n    };\n  }\n\n  return worker;\n} // Issue a call to the worker with a callback to handle the response\n\n\nfunction callWorker(workerId, action, data) {\n  var thenable = DefaultThenable();\n  var messageId = ++_messageId;\n\n  openRequests[messageId] = function (response) {\n    if (response.success) {\n      thenable.resolve(response.result);\n    } else {\n      thenable.reject(new Error(\"Error in worker \" + action + \" call: \" + response.error));\n    }\n  };\n\n  getWorker(workerId).postMessage({\n    messageId: messageId,\n    action: action,\n    data: data\n  });\n  return thenable;\n}\n/**\n * Just the {@link Thenable} function wrapped as a worker module. If another worker\n * module needs Thenable as a dependency, it's better to pass this module rather than\n * the raw function in its `dependencies` array so it only gets registered once.\n */\n\n\nvar ThenableWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Thenable',\n  dependencies: [DefaultThenable],\n  init: function init(Thenable) {\n    return Thenable;\n  }\n});\nexport { DefaultThenable as Thenable, ThenableWorkerModule, defineWorkerModule, stringifyFunction, terminateWorker };","map":{"version":3,"names":["BespokeThenable","state","queue","value","scheduled","completeCalled","then","onResolve","onReject","nextThenable","handleNext","cb","isFn","result","recursiveError","resultThen","getThenableThen","call","resolve","reject","err","push","scheduleQueueFlush","oneTime","val","complete","reason","st","ignoreThrow","thenableObj","valThen","v","e","setTimeout","flushQueue","q","forEach","callIt","fn","called","args","len","arguments","length","apply","TypeError","NativePromiseThenable","promise","Promise","res","rej","bind","all","items","resultCount","results","out","DefaultThenable","item","i","itemThenable","workerBootstrap","modules","Object","create","registerModule","ref","callback","id","name","dependencies","init","getTransferables","map","dep","isWorkerModule","depResult","Error","rehydrate","console","error","noLog","callModule","ref$1","handleResult","tx","Array","isArray","undefined","str","self","troikaDefine","r","url","URL","createObjectURL","Blob","replace","type","importScripts","revokeObjectURL","addEventListener","data","messageId","action","postMessage","success","message","isCallable","transferables","stack","defineMainThreadModule","options","moduleFunc","_getInitResult","initResult","initThenable","deps","supportsWorkers","supported","window","document","worker","Worker","terminate","process","env","NODE_ENV","log","_workerModuleId","_messageId","_allowInitAsString","workers","registeredModules","openRequests","defineWorkerModule","workerId","registrationThenable","workerModuleData","stringifyFunction","callWorker","unregister","delete","Set","add","terminateWorker","toString","test","getWorker","bootstrap","onmessage","response","msgId","thenable","ThenableWorkerModule","Thenable"],"sources":["D:/Jord/l4fycy/node_modules/troika-worker-utils/dist/troika-worker-utils.esm.js"],"sourcesContent":["/**\n * Lightweight thenable implementation that is entirely self-contained within a single\n * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n *\n * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n *\n * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n * have the same constructor signature and does not expose a `catch` method or the static\n * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n * in a native-or-polyfilled Promise first.\n *\n * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n * implementation I've found. And also, exercises like this are challenging and fun.)\n */\nfunction BespokeThenable() {\n  var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n  var queue = [];\n  var value;\n  var scheduled = 0;\n  var completeCalled = 0;\n\n  function then(onResolve, onReject) {\n    var nextThenable = BespokeThenable();\n\n    function handleNext() {\n      var cb = state > 0 ? onResolve : onReject;\n      if (isFn(cb)) {\n        try {\n          var result = cb(value);\n          if (result === nextThenable) {\n            recursiveError();\n          }\n          var resultThen = getThenableThen(result);\n          if (resultThen) {\n            resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n          } else {\n            nextThenable.resolve(result);\n          }\n        } catch (err) {\n          nextThenable.reject(err);\n        }\n      } else {\n        nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n      }\n    }\n\n    queue.push(handleNext);\n    if (state) {\n      scheduleQueueFlush();\n    }\n    return nextThenable\n  }\n\n  var resolve = oneTime(function (val) {\n    if (!completeCalled) {\n      complete(1, val);\n    }\n  });\n\n  var reject = oneTime(function (reason) {\n    if (!completeCalled) {\n      complete(-1, reason);\n    }\n  });\n\n  function complete(st, val) {\n    completeCalled++;\n    var ignoreThrow = 0;\n    try {\n      if (val === thenableObj) {\n        recursiveError();\n      }\n      var valThen = st > 0 && getThenableThen(val);\n      if (valThen) {\n        valThen.call(val, oneTime(function (v) {\n          ignoreThrow++;\n          complete(1, v);\n        }), oneTime(function (v) {\n          ignoreThrow++;\n          complete(-1, v);\n        }));\n      } else {\n        state = st;\n        value = val;\n        scheduleQueueFlush();\n      }\n    } catch(e) {\n      if (!state && !ignoreThrow) {\n        complete(-1, e);\n      }\n    }\n  }\n\n  function scheduleQueueFlush() {\n    if (!scheduled) {\n      setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n      scheduled = 1;\n    }\n  }\n\n  function flushQueue() {\n    var q = queue;\n    scheduled = 0;\n    queue = [];\n    q.forEach(callIt);\n  }\n\n  function callIt(fn) {\n    fn();\n  }\n\n  function getThenableThen(val) {\n    var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n    return isFn(valThen) && valThen\n  }\n\n  function oneTime(fn) {\n    var called = 0;\n    return function() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (!called++) {\n        fn.apply(this, args);\n      }\n    }\n  }\n\n  function recursiveError() {\n    throw new TypeError('Chaining cycle detected')\n  }\n\n  var isFn = function (v) { return typeof v === 'function'; };\n\n  var thenableObj = {\n    then: then,\n    resolve: resolve,\n    reject: reject\n  };\n  return thenableObj\n}\n\n\n/**\n * Thenable implementation that uses a native Promise under the covers. This implementation\n * is preferred if Promise is available, for better performance and dev tools integration.\n * @constructor\n */\nfunction NativePromiseThenable() {\n  var resolve, reject;\n  var promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    then: promise.then.bind(promise),\n    resolve: resolve,\n    reject: reject\n  }\n}\n\n/**\n * Promise.all() impl:\n */\nBespokeThenable.all = NativePromiseThenable.all = function(items) {\n  var resultCount = 0;\n  var results = [];\n  var out = DefaultThenable();\n  if (items.length === 0) {\n    out.resolve([]);\n  } else {\n    items.forEach(function (item, i) {\n      var itemThenable = DefaultThenable();\n      itemThenable.resolve(item);\n      itemThenable.then(function (res) {\n        resultCount++;\n        results[i] = res;\n        if (resultCount === items.length) {\n          out.resolve(results);\n        }\n      }, out.reject);\n    });\n  }\n  return out\n};\n\n\n/**\n * Choose the best Thenable implementation and export it as the default.\n */\nvar DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\n\n/**\n * Main content for the worker that handles the loading and execution of\n * modules within it.\n */\nfunction workerBootstrap() {\n  var modules = Object.create(null);\n\n  // Handle messages for registering a module\n  function registerModule(ref, callback) {\n    var id = ref.id;\n    var name = ref.name;\n    var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n    var init = ref.init; if ( init === void 0 ) init = function(){};\n    var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n    // Only register once\n    if (modules[id]) { return }\n\n    try {\n      // If any dependencies are modules, ensure they're registered and grab their value\n      dependencies = dependencies.map(function (dep) {\n        if (dep && dep.isWorkerModule) {\n          registerModule(dep, function (depResult) {\n            if (depResult instanceof Error) { throw depResult }\n          });\n          dep = modules[dep.id].value;\n        }\n        return dep\n      });\n\n      // Rehydrate functions\n      init = rehydrate((\"<\" + name + \">.init\"), init);\n      if (getTransferables) {\n        getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\n      }\n\n      // Initialize the module and store its value\n      var value = null;\n      if (typeof init === 'function') {\n        value = init.apply(void 0, dependencies);\n      } else {\n        console.error('worker module init function failed to rehydrate');\n      }\n      modules[id] = {\n        id: id,\n        value: value,\n        getTransferables: getTransferables\n      };\n      callback(value);\n    } catch(err) {\n      if (!(err && err.noLog)) {\n        console.error(err);\n      }\n      callback(err);\n    }\n  }\n\n  // Handle messages for calling a registered module's result function\n  function callModule(ref, callback) {\n    var ref$1;\n\n    var id = ref.id;\n    var args = ref.args;\n    if (!modules[id] || typeof modules[id].value !== 'function') {\n      callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n    }\n    try {\n      var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n      if (result && typeof result.then === 'function') {\n        result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n      } else {\n        handleResult(result);\n      }\n    } catch(err) {\n      callback(err);\n    }\n    function handleResult(result) {\n      try {\n        var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n        if (!tx || !Array.isArray(tx) || !tx.length) {\n          tx = undefined; //postMessage is very picky about not passing null or empty transferables\n        }\n        callback(result, tx);\n      } catch(err) {\n        console.error(err);\n        callback(err);\n      }\n    }\n  }\n\n  function rehydrate(name, str) {\n    var result = void 0;\n    self.troikaDefine = function (r) { return result = r; };\n    var url = URL.createObjectURL(\n      new Blob(\n        [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\n        {type: 'application/javascript'}\n      )\n    );\n    try {\n      importScripts(url);\n    } catch(err) {\n      console.error(err);\n    }\n    URL.revokeObjectURL(url);\n    delete self.troikaDefine;\n    return result\n  }\n\n  // Handler for all messages within the worker\n  self.addEventListener('message', function (e) {\n    var ref = e.data;\n    var messageId = ref.messageId;\n    var action = ref.action;\n    var data = ref.data;\n    try {\n      // Module registration\n      if (action === 'registerModule') {\n        registerModule(data, function (result) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: {isCallable: typeof result === 'function'}\n            });\n          }\n        });\n      }\n      // Invocation\n      if (action === 'callModule') {\n        callModule(data, function (result, transferables) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: result\n            }, transferables || undefined);\n          }\n        });\n      }\n    } catch(err) {\n      postMessage({\n        messageId: messageId,\n        success: false,\n        error: err.stack\n      });\n    }\n  });\n}\n\n/**\n * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n * thread, for when the execution environment doesn't support web workers or they\n * are disallowed due to e.g. CSP security restrictions.\n */\nfunction defineMainThreadModule(options) {\n  var moduleFunc = function() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return moduleFunc._getInitResult().then(function (initResult) {\n      if (typeof initResult === 'function') {\n        return initResult.apply(void 0, args)\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  };\n  moduleFunc._getInitResult = function() {\n    // We can ignore getTransferables in main thread. TODO workerId?\n    var dependencies = options.dependencies;\n    var init = options.init;\n\n    // Resolve dependencies\n    dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\n    ) : [];\n\n    // Invoke init with the resolved dependencies\n    var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\n      return init.apply(null, deps)\n    });\n\n    // Cache the resolved promise for subsequent calls\n    moduleFunc._getInitResult = function () { return initThenable; };\n\n    return initThenable\n  };\n  return moduleFunc\n}\n\nvar supportsWorkers = function () {\n  var supported = false;\n\n  // Only attempt worker initialization in browsers; elsewhere it would just be\n  // noise e.g. loading into a Node environment for SSR.\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n    try {\n      // TODO additional checks for things like importScripts within the worker?\n      //  Would need to be an async check.\n      var worker = new Worker(\n        URL.createObjectURL(new Blob([''], { type: 'application/javascript' }))\n      );\n      worker.terminate();\n      supported = true;\n    } catch (err) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') ; else {\n        console.log(\n          (\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\")\n        );\n      }\n    }\n  }\n\n  // Cached result\n  supportsWorkers = function () { return supported; };\n  return supported\n};\n\nvar _workerModuleId = 0;\nvar _messageId = 0;\nvar _allowInitAsString = false;\nvar workers = Object.create(null);\nvar registeredModules = Object.create(null); //workerId -> Set<unregisterFn>\nvar openRequests = Object.create(null);\n\n\n/**\n * Define a module of code that will be executed with a web worker. This provides a simple\n * interface for moving chunks of logic off the main thread, and managing their dependencies\n * among one another.\n *\n * @param {object} options\n * @param {function} options.init\n * @param {array} [options.dependencies]\n * @param {function} [options.getTransferables]\n * @param {string} [options.name]\n * @param {string} [options.workerId]\n * @return {function(...[*]): {then}}\n */\nfunction defineWorkerModule(options) {\n  if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n    throw new Error('requires `options.init` function')\n  }\n  var dependencies = options.dependencies;\n  var init = options.init;\n  var getTransferables = options.getTransferables;\n  var workerId = options.workerId;\n\n  if (!supportsWorkers()) {\n    return defineMainThreadModule(options)\n  }\n\n  if (workerId == null) {\n    workerId = '#default';\n  }\n  var id = \"workerModule\" + (++_workerModuleId);\n  var name = options.name || id;\n  var registrationThenable = null;\n\n  dependencies = dependencies && dependencies.map(function (dep) {\n    // Wrap raw functions as worker modules with no dependencies\n    if (typeof dep === 'function' && !dep.workerModuleData) {\n      _allowInitAsString = true;\n      dep = defineWorkerModule({\n        workerId: workerId,\n        name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\n        init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\n      });\n      _allowInitAsString = false;\n    }\n    // Grab postable data for worker modules\n    if (dep && dep.workerModuleData) {\n      dep = dep.workerModuleData;\n    }\n    return dep\n  });\n\n  function moduleFunc() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    // Register this module if needed\n    if (!registrationThenable) {\n      registrationThenable = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n      var unregister = function () {\n        registrationThenable = null;\n        registeredModules[workerId].delete(unregister);\n      }\n      ;(registeredModules[workerId] || (registeredModules[workerId] = new Set())).add(unregister);\n    }\n\n    // Invoke the module, returning a thenable\n    return registrationThenable.then(function (ref) {\n      var isCallable = ref.isCallable;\n\n      if (isCallable) {\n        return callWorker(workerId,'callModule', {id: id, args: args})\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  }\n  moduleFunc.workerModuleData = {\n    isWorkerModule: true,\n    id: id,\n    name: name,\n    dependencies: dependencies,\n    init: stringifyFunction(init),\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\n  };\n  return moduleFunc\n}\n\n/**\n * Terminate an active Worker by a workerId that was passed to defineWorkerModule.\n * This only terminates the Worker itself; the worker module will remain available\n * and if you call it again its Worker will be respawned.\n * @param {string} workerId\n */\nfunction terminateWorker(workerId) {\n  // Unregister all modules that were registered in that worker\n  if (registeredModules[workerId]) {\n    registeredModules[workerId].forEach(function (unregister) {\n      unregister();\n    });\n  }\n  // Terminate the Worker object\n  if (workers[workerId]) {\n    workers[workerId].terminate();\n    delete workers[workerId];\n  }\n}\n\n/**\n * Stringifies a function into a form that can be deserialized in the worker\n * @param fn\n */\nfunction stringifyFunction(fn) {\n  var str = fn.toString();\n  // If it was defined in object method/property format, it needs to be modified\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n    str = 'function ' + str;\n  }\n  return str\n}\n\n\nfunction getWorker(workerId) {\n  var worker = workers[workerId];\n  if (!worker) {\n    // Bootstrap the worker's content\n    var bootstrap = stringifyFunction(workerBootstrap);\n\n    // Create the worker from the bootstrap function content\n    worker = workers[workerId] = new Worker(\n      URL.createObjectURL(\n        new Blob(\n          [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\n          {type: 'application/javascript'}\n        )\n      )\n    );\n\n    // Single handler for response messages from the worker\n    worker.onmessage = function (e) {\n      var response = e.data;\n      var msgId = response.messageId;\n      var callback = openRequests[msgId];\n      if (!callback) {\n        throw new Error('WorkerModule response with empty or unknown messageId')\n      }\n      delete openRequests[msgId];\n      callback(response);\n    };\n  }\n  return worker\n}\n\n// Issue a call to the worker with a callback to handle the response\nfunction callWorker(workerId, action, data) {\n  var thenable = DefaultThenable();\n  var messageId = ++_messageId;\n  openRequests[messageId] = function (response) {\n    if (response.success) {\n      thenable.resolve(response.result);\n    } else {\n      thenable.reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n    }\n  };\n  getWorker(workerId).postMessage({\n    messageId: messageId,\n    action: action,\n    data: data\n  });\n  return thenable\n}\n\n/**\n * Just the {@link Thenable} function wrapped as a worker module. If another worker\n * module needs Thenable as a dependency, it's better to pass this module rather than\n * the raw function in its `dependencies` array so it only gets registered once.\n */\nvar ThenableWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Thenable',\n  dependencies: [DefaultThenable],\n  init: function(Thenable) {\n    return Thenable\n  }\n});\n\nexport { DefaultThenable as Thenable, ThenableWorkerModule, defineWorkerModule, stringifyFunction, terminateWorker };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}