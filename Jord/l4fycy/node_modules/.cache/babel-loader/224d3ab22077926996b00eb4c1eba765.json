{"ast":null,"code":"import _createClass from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Arnav/Downloads/l4fycy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Mesh, Vector3, InstancedInterleavedBuffer, InterleavedBufferAttribute, Vector4, Matrix4, Line3, MathUtils } from 'three';\nimport { LineSegmentsGeometry } from './LineSegmentsGeometry.js';\nimport { LineMaterial } from './LineMaterial.js';\n\nvar LineSegments2 = /*#__PURE__*/function (_Mesh) {\n  _inherits(LineSegments2, _Mesh);\n\n  var _super = _createSuper(LineSegments2);\n\n  function LineSegments2() {\n    var _this;\n\n    var _geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new LineSegmentsGeometry();\n\n    var _material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new LineMaterial({\n      color: Math.random() * 0xffffff\n    });\n\n    _classCallCheck(this, LineSegments2);\n\n    _this = _super.call(this, _geometry, _material);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", 'LineSegments2');\n\n    _defineProperty(_assertThisInitialized(_this), \"isLineSegments2\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"distStart\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"distEnd\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeLineDistances\", function () {\n      var geometry = _this.geometry;\n      var instanceStart = geometry.attributes.instanceStart;\n      var instanceEnd = geometry.attributes.instanceEnd;\n      var lineDistances = new Float32Array(2 * instanceStart.data.count);\n\n      for (var i = 0, j = 0, l = instanceStart.data.count; i < l; i++, j += 2) {\n        _this.distStart.fromBufferAttribute(instanceStart, i);\n\n        _this.distEnd.fromBufferAttribute(instanceEnd, i);\n\n        lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n        lineDistances[j + 1] = lineDistances[j] + _this.distStart.distanceTo(_this.distEnd);\n      }\n\n      var instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1); // d0, d1\n\n      geometry.setAttribute('instanceDistanceStart', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0)); // d0\n\n      geometry.setAttribute('instanceDistanceEnd', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1)); // d1\n\n      return _assertThisInitialized(_this);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"rayStart\", new Vector4());\n\n    _defineProperty(_assertThisInitialized(_this), \"rayEnd\", new Vector4());\n\n    _defineProperty(_assertThisInitialized(_this), \"ssOrigin\", new Vector4());\n\n    _defineProperty(_assertThisInitialized(_this), \"ssOrigin3\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"mvMatrix\", new Matrix4());\n\n    _defineProperty(_assertThisInitialized(_this), \"line\", new Line3());\n\n    _defineProperty(_assertThisInitialized(_this), \"closestPoint\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"raycast\", function (raycaster, intersects) {\n      if (raycaster.camera === null) {\n        console.error('LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.');\n      }\n\n      var threshold = 0;\n      var ray = raycaster.ray;\n      var camera = raycaster.camera;\n      var projectionMatrix = camera.projectionMatrix;\n      var geometry = _this.geometry;\n      var material = _this.material;\n      var resolution = material.resolution;\n      var lineWidth = material.linewidth + threshold;\n      var instanceStart = geometry.attributes.instanceStart;\n      var instanceEnd = geometry.attributes.instanceEnd; // camera forward is negative\n\n      var near = -camera.near; // pick a point 1 unit out along the ray to avoid the ray origin\n      // sitting at the camera origin which will cause \"w\" to be 0 when\n      // applying the projection matrix.\n\n      ray.at(1, _this.ssOrigin); // ndc space [ - 1.0, 1.0 ]\n\n      _this.ssOrigin.w = 1;\n\n      _this.ssOrigin.applyMatrix4(camera.matrixWorldInverse);\n\n      _this.ssOrigin.applyMatrix4(projectionMatrix);\n\n      _this.ssOrigin.multiplyScalar(1 / _this.ssOrigin.w); // screen space\n\n\n      _this.ssOrigin.x *= resolution.x / 2;\n      _this.ssOrigin.y *= resolution.y / 2;\n      _this.ssOrigin.z = 0;\n\n      _this.ssOrigin3.set(_this.ssOrigin.x, _this.ssOrigin.y, _this.ssOrigin.z);\n\n      var matrixWorld = _this.matrixWorld;\n\n      _this.mvMatrix.multiplyMatrices(camera.matrixWorldInverse, matrixWorld);\n\n      for (var i = 0, l = instanceStart.count; i < l; i++) {\n        _this.rayStart.fromBufferAttribute(instanceStart, i);\n\n        _this.rayEnd.fromBufferAttribute(instanceEnd, i);\n\n        _this.rayStart.w = 1;\n        _this.rayEnd.w = 1; // camera space\n\n        _this.rayStart.applyMatrix4(_this.mvMatrix);\n\n        _this.rayEnd.applyMatrix4(_this.mvMatrix); // skip the segment if it's entirely behind the camera\n\n\n        var isBehindCameraNear = _this.rayStart.z > near && _this.rayEnd.z > near;\n\n        if (isBehindCameraNear) {\n          continue;\n        } // trim the segment if it extends behind camera near\n\n\n        if (_this.rayStart.z > near) {\n          var deltaDist = _this.rayStart.z - _this.rayEnd.z;\n          var t = (_this.rayStart.z - near) / deltaDist;\n\n          _this.rayStart.lerp(_this.rayEnd, t);\n        } else if (_this.rayEnd.z > near) {\n          var _deltaDist = _this.rayEnd.z - _this.rayStart.z;\n\n          var _t = (_this.rayEnd.z - near) / _deltaDist;\n\n          _this.rayEnd.lerp(_this.rayStart, _t);\n        } // clip space\n\n\n        _this.rayStart.applyMatrix4(projectionMatrix);\n\n        _this.rayEnd.applyMatrix4(projectionMatrix); // ndc space [ - 1.0, 1.0 ]\n\n\n        _this.rayStart.multiplyScalar(1 / _this.rayStart.w);\n\n        _this.rayEnd.multiplyScalar(1 / _this.rayEnd.w); // screen space\n\n\n        _this.rayStart.x *= resolution.x / 2;\n        _this.rayStart.y *= resolution.y / 2;\n        _this.rayEnd.x *= resolution.x / 2;\n        _this.rayEnd.y *= resolution.y / 2; // create 2d segment\n\n        _this.line.start.set(_this.rayStart.x, _this.rayStart.y, _this.rayStart.z);\n\n        _this.line.start.z = 0;\n\n        _this.line.end.set(_this.rayEnd.x, _this.rayEnd.y, _this.rayEnd.z);\n\n        _this.line.end.z = 0; // get closest point on ray to segment\n\n        var param = _this.line.closestPointToPointParameter(_this.ssOrigin3, true);\n\n        _this.line.at(param, _this.closestPoint); // check if the intersection point is within clip space\n\n\n        var zPos = MathUtils.lerp(_this.rayStart.z, _this.rayEnd.z, param);\n        var isInClipSpace = zPos >= -1 && zPos <= 1;\n        var isInside = _this.ssOrigin3.distanceTo(_this.closestPoint) < lineWidth * 0.5;\n\n        if (isInClipSpace && isInside) {\n          _this.line.start.fromBufferAttribute(instanceStart, i);\n\n          _this.line.end.fromBufferAttribute(instanceEnd, i);\n\n          _this.line.start.applyMatrix4(matrixWorld);\n\n          _this.line.end.applyMatrix4(matrixWorld);\n\n          var pointOnLine = new Vector3();\n          var point = new Vector3();\n          ray.distanceSqToSegment(_this.line.start, _this.line.end, point, pointOnLine);\n          intersects.push({\n            distance: ray.origin.distanceTo(point),\n            point: point,\n            face: null,\n            faceIndex: i,\n            object: _assertThisInitialized(_this),\n            uv: undefined,\n            pointOnLine: pointOnLine\n          });\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  return _createClass(LineSegments2);\n}(Mesh);\n\nexport { LineSegments2 };","map":{"version":3,"names":["_defineProperty","Mesh","Vector3","InstancedInterleavedBuffer","InterleavedBufferAttribute","Vector4","Matrix4","Line3","MathUtils","LineSegmentsGeometry","LineMaterial","LineSegments2","_geometry","_material","color","Math","random","geometry","instanceStart","attributes","instanceEnd","lineDistances","Float32Array","data","count","i","j","l","distStart","fromBufferAttribute","distEnd","distanceTo","instanceDistanceBuffer","setAttribute","raycaster","intersects","camera","console","error","threshold","ray","projectionMatrix","material","resolution","lineWidth","linewidth","near","at","ssOrigin","w","applyMatrix4","matrixWorldInverse","multiplyScalar","x","y","z","ssOrigin3","set","matrixWorld","mvMatrix","multiplyMatrices","rayStart","rayEnd","isBehindCameraNear","deltaDist","t","lerp","line","start","end","param","closestPointToPointParameter","closestPoint","zPos","isInClipSpace","isInside","pointOnLine","point","distanceSqToSegment","push","distance","origin","face","faceIndex","object","uv","undefined"],"sources":["C:/Users/Arnav/Downloads/l4fycy/node_modules/three-stdlib/lines/LineSegments2.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Mesh, Vector3, InstancedInterleavedBuffer, InterleavedBufferAttribute, Vector4, Matrix4, Line3, MathUtils } from 'three';\nimport { LineSegmentsGeometry } from './LineSegmentsGeometry.js';\nimport { LineMaterial } from './LineMaterial.js';\n\nclass LineSegments2 extends Mesh {\n  constructor(_geometry = new LineSegmentsGeometry(), _material = new LineMaterial({\n    color: Math.random() * 0xffffff\n  })) {\n    super(_geometry, _material);\n\n    _defineProperty(this, \"type\", 'LineSegments2');\n\n    _defineProperty(this, \"isLineSegments2\", true);\n\n    _defineProperty(this, \"distStart\", new Vector3());\n\n    _defineProperty(this, \"distEnd\", new Vector3());\n\n    _defineProperty(this, \"computeLineDistances\", () => {\n      const geometry = this.geometry;\n      const instanceStart = geometry.attributes.instanceStart;\n      const instanceEnd = geometry.attributes.instanceEnd;\n      const lineDistances = new Float32Array(2 * instanceStart.data.count);\n\n      for (let i = 0, j = 0, l = instanceStart.data.count; i < l; i++, j += 2) {\n        this.distStart.fromBufferAttribute(instanceStart, i);\n        this.distEnd.fromBufferAttribute(instanceEnd, i);\n        lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n        lineDistances[j + 1] = lineDistances[j] + this.distStart.distanceTo(this.distEnd);\n      }\n\n      const instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1); // d0, d1\n\n      geometry.setAttribute('instanceDistanceStart', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0)); // d0\n\n      geometry.setAttribute('instanceDistanceEnd', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1)); // d1\n\n      return this;\n    });\n\n    _defineProperty(this, \"rayStart\", new Vector4());\n\n    _defineProperty(this, \"rayEnd\", new Vector4());\n\n    _defineProperty(this, \"ssOrigin\", new Vector4());\n\n    _defineProperty(this, \"ssOrigin3\", new Vector3());\n\n    _defineProperty(this, \"mvMatrix\", new Matrix4());\n\n    _defineProperty(this, \"line\", new Line3());\n\n    _defineProperty(this, \"closestPoint\", new Vector3());\n\n    _defineProperty(this, \"raycast\", (raycaster, intersects) => {\n      if (raycaster.camera === null) {\n        console.error('LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.');\n      }\n\n      const threshold = 0;\n      const ray = raycaster.ray;\n      const camera = raycaster.camera;\n      const projectionMatrix = camera.projectionMatrix;\n      const geometry = this.geometry;\n      const material = this.material;\n      const resolution = material.resolution;\n      const lineWidth = material.linewidth + threshold;\n      const instanceStart = geometry.attributes.instanceStart;\n      const instanceEnd = geometry.attributes.instanceEnd; // camera forward is negative\n\n      const near = -camera.near; // pick a point 1 unit out along the ray to avoid the ray origin\n      // sitting at the camera origin which will cause \"w\" to be 0 when\n      // applying the projection matrix.\n\n      ray.at(1, this.ssOrigin); // ndc space [ - 1.0, 1.0 ]\n\n      this.ssOrigin.w = 1;\n      this.ssOrigin.applyMatrix4(camera.matrixWorldInverse);\n      this.ssOrigin.applyMatrix4(projectionMatrix);\n      this.ssOrigin.multiplyScalar(1 / this.ssOrigin.w); // screen space\n\n      this.ssOrigin.x *= resolution.x / 2;\n      this.ssOrigin.y *= resolution.y / 2;\n      this.ssOrigin.z = 0;\n      this.ssOrigin3.set(this.ssOrigin.x, this.ssOrigin.y, this.ssOrigin.z);\n      const matrixWorld = this.matrixWorld;\n      this.mvMatrix.multiplyMatrices(camera.matrixWorldInverse, matrixWorld);\n\n      for (let i = 0, l = instanceStart.count; i < l; i++) {\n        this.rayStart.fromBufferAttribute(instanceStart, i);\n        this.rayEnd.fromBufferAttribute(instanceEnd, i);\n        this.rayStart.w = 1;\n        this.rayEnd.w = 1; // camera space\n\n        this.rayStart.applyMatrix4(this.mvMatrix);\n        this.rayEnd.applyMatrix4(this.mvMatrix); // skip the segment if it's entirely behind the camera\n\n        const isBehindCameraNear = this.rayStart.z > near && this.rayEnd.z > near;\n\n        if (isBehindCameraNear) {\n          continue;\n        } // trim the segment if it extends behind camera near\n\n\n        if (this.rayStart.z > near) {\n          const deltaDist = this.rayStart.z - this.rayEnd.z;\n          const t = (this.rayStart.z - near) / deltaDist;\n          this.rayStart.lerp(this.rayEnd, t);\n        } else if (this.rayEnd.z > near) {\n          const deltaDist = this.rayEnd.z - this.rayStart.z;\n          const t = (this.rayEnd.z - near) / deltaDist;\n          this.rayEnd.lerp(this.rayStart, t);\n        } // clip space\n\n\n        this.rayStart.applyMatrix4(projectionMatrix);\n        this.rayEnd.applyMatrix4(projectionMatrix); // ndc space [ - 1.0, 1.0 ]\n\n        this.rayStart.multiplyScalar(1 / this.rayStart.w);\n        this.rayEnd.multiplyScalar(1 / this.rayEnd.w); // screen space\n\n        this.rayStart.x *= resolution.x / 2;\n        this.rayStart.y *= resolution.y / 2;\n        this.rayEnd.x *= resolution.x / 2;\n        this.rayEnd.y *= resolution.y / 2; // create 2d segment\n\n        this.line.start.set(this.rayStart.x, this.rayStart.y, this.rayStart.z);\n        this.line.start.z = 0;\n        this.line.end.set(this.rayEnd.x, this.rayEnd.y, this.rayEnd.z);\n        this.line.end.z = 0; // get closest point on ray to segment\n\n        const param = this.line.closestPointToPointParameter(this.ssOrigin3, true);\n        this.line.at(param, this.closestPoint); // check if the intersection point is within clip space\n\n        const zPos = MathUtils.lerp(this.rayStart.z, this.rayEnd.z, param);\n        const isInClipSpace = zPos >= -1 && zPos <= 1;\n        const isInside = this.ssOrigin3.distanceTo(this.closestPoint) < lineWidth * 0.5;\n\n        if (isInClipSpace && isInside) {\n          this.line.start.fromBufferAttribute(instanceStart, i);\n          this.line.end.fromBufferAttribute(instanceEnd, i);\n          this.line.start.applyMatrix4(matrixWorld);\n          this.line.end.applyMatrix4(matrixWorld);\n          const pointOnLine = new Vector3();\n          const point = new Vector3();\n          ray.distanceSqToSegment(this.line.start, this.line.end, point, pointOnLine);\n          intersects.push({\n            distance: ray.origin.distanceTo(point),\n            point: point,\n            face: null,\n            faceIndex: i,\n            object: this,\n            uv: undefined,\n            pointOnLine\n          });\n        }\n      }\n    });\n  }\n\n}\n\nexport { LineSegments2 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}