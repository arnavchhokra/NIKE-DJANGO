{"ast":null,"code":"import { Object3D, Box3, AnimationMixer, TextureLoader, UVMapping, sRGBEncoding, MeshLambertMaterial, Mesh } from 'three';\nimport { MD2Loader } from '../loaders/MD2Loader.js';\n\nvar MD2Character = function MD2Character() {\n  var scope = this;\n  this.scale = 1;\n  this.animationFPS = 6;\n  this.root = new Object3D();\n  this.meshBody = null;\n  this.meshWeapon = null;\n  this.skinsBody = [];\n  this.skinsWeapon = [];\n  this.weapons = [];\n  this.activeAnimation = null;\n  this.mixer = null;\n\n  this.onLoadComplete = function () {};\n\n  this.loadCounter = 0;\n\n  this.loadParts = function (config) {\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    var weaponsTextures = [];\n\n    for (var i = 0; i < config.weapons.length; i++) {\n      weaponsTextures[i] = config.weapons[i][1];\n    } // SKINS\n\n\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\n\n    var loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function (geo) {\n      var boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      var mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshBody.clipOffset = 0;\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n      scope.mixer = new AnimationMixer(mesh);\n      checkLoadingComplete();\n    }); // WEAPONS\n\n    var generateCallback = function generateCallback(index, name) {\n      return function (geo) {\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        checkLoadingComplete();\n      };\n    };\n\n    for (var _i = 0; _i < config.weapons.length; _i++) {\n      loader.load(config.baseUrl + config.weapons[_i][0], generateCallback(_i, config.weapons[_i][0]));\n    }\n  };\n\n  this.setPlaybackRate = function (rate) {\n    if (rate !== 0) {\n      this.mixer.timeScale = 1 / rate;\n    } else {\n      this.mixer.timeScale = 0;\n    }\n  };\n\n  this.setWireframe = function (wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  };\n\n  this.setSkin = function (index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n    }\n  };\n\n  this.setWeapon = function (index) {\n    for (var i = 0; i < this.weapons.length; i++) {\n      this.weapons[i].visible = false;\n    }\n\n    var activeWeapon = this.weapons[index];\n\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      scope.syncWeaponAnimation();\n    }\n  };\n\n  this.setAnimation = function (clipName) {\n    if (this.meshBody) {\n      if (this.meshBody.activeAction) {\n        this.meshBody.activeAction.stop();\n        this.meshBody.activeAction = null;\n      }\n\n      var action = this.mixer.clipAction(clipName, this.meshBody);\n\n      if (action) {\n        this.meshBody.activeAction = action.play();\n      }\n    }\n\n    scope.activeClipName = clipName;\n    scope.syncWeaponAnimation();\n  };\n\n  this.syncWeaponAnimation = function () {\n    var clipName = scope.activeClipName;\n\n    if (scope.meshWeapon) {\n      if (this.meshWeapon.activeAction) {\n        this.meshWeapon.activeAction.stop();\n        this.meshWeapon.activeAction = null;\n      }\n\n      var action = this.mixer.clipAction(clipName, this.meshWeapon);\n\n      if (action) {\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n      }\n    }\n  };\n\n  this.update = function (delta) {\n    if (this.mixer) this.mixer.update(delta);\n  };\n\n  function loadTextures(baseUrl, textureUrls) {\n    var textureLoader = new TextureLoader();\n    var textures = [];\n\n    for (var i = 0; i < textureUrls.length; i++) {\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n      textures[i].mapping = UVMapping;\n      textures[i].name = textureUrls[i];\n      textures[i].encoding = sRGBEncoding;\n    }\n\n    return textures;\n  }\n\n  function createPart(geometry, skinMap) {\n    var materialWireframe = new MeshLambertMaterial({\n      color: 0xffaa00,\n      wireframe: true,\n      morphTargets: true,\n      morphNormals: true\n    });\n    var materialTexture = new MeshLambertMaterial({\n      color: 0xffffff,\n      wireframe: false,\n      map: skinMap,\n      morphTargets: true,\n      morphNormals: true\n    }); //\n\n    var mesh = new Mesh(geometry, materialTexture);\n    mesh.rotation.y = -Math.PI / 2;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true; //\n\n    mesh.materialTexture = materialTexture;\n    mesh.materialWireframe = materialWireframe;\n    return mesh;\n  }\n\n  function checkLoadingComplete() {\n    scope.loadCounter -= 1;\n    if (scope.loadCounter === 0) scope.onLoadComplete();\n  }\n};\n\nexport { MD2Character };","map":{"version":3,"names":["Object3D","Box3","AnimationMixer","TextureLoader","UVMapping","sRGBEncoding","MeshLambertMaterial","Mesh","MD2Loader","MD2Character","scope","scale","animationFPS","root","meshBody","meshWeapon","skinsBody","skinsWeapon","weapons","activeAnimation","mixer","onLoadComplete","loadCounter","loadParts","config","length","skins","weaponsTextures","i","loadTextures","baseUrl","loader","load","body","geo","boundingBox","setFromBufferAttribute","attributes","position","y","min","mesh","createPart","set","add","clipOffset","activeAnimationClipName","geometry","animations","name","checkLoadingComplete","generateCallback","index","visible","setPlaybackRate","rate","timeScale","setWireframe","wireframeEnabled","material","materialWireframe","materialTexture","setSkin","wireframe","map","setWeapon","activeWeapon","syncWeaponAnimation","setAnimation","clipName","activeAction","stop","action","clipAction","play","activeClipName","syncWith","update","delta","textureUrls","textureLoader","textures","mapping","encoding","skinMap","color","morphTargets","morphNormals","rotation","Math","PI","castShadow","receiveShadow"],"sources":["D:/Jord/l4fycy/node_modules/three-stdlib/misc/MD2Character.js"],"sourcesContent":["import { Object3D, Box3, AnimationMixer, TextureLoader, UVMapping, sRGBEncoding, MeshLambertMaterial, Mesh } from 'three';\nimport { MD2Loader } from '../loaders/MD2Loader.js';\n\nvar MD2Character = function () {\n  var scope = this;\n  this.scale = 1;\n  this.animationFPS = 6;\n  this.root = new Object3D();\n  this.meshBody = null;\n  this.meshWeapon = null;\n  this.skinsBody = [];\n  this.skinsWeapon = [];\n  this.weapons = [];\n  this.activeAnimation = null;\n  this.mixer = null;\n\n  this.onLoadComplete = function () {};\n\n  this.loadCounter = 0;\n\n  this.loadParts = function (config) {\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    var weaponsTextures = [];\n\n    for (let i = 0; i < config.weapons.length; i++) weaponsTextures[i] = config.weapons[i][1]; // SKINS\n\n\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\n\n    var loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function (geo) {\n      var boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      var mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshBody.clipOffset = 0;\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n      scope.mixer = new AnimationMixer(mesh);\n      checkLoadingComplete();\n    }); // WEAPONS\n\n    var generateCallback = function (index, name) {\n      return function (geo) {\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        checkLoadingComplete();\n      };\n    };\n\n    for (let i = 0; i < config.weapons.length; i++) {\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\n    }\n  };\n\n  this.setPlaybackRate = function (rate) {\n    if (rate !== 0) {\n      this.mixer.timeScale = 1 / rate;\n    } else {\n      this.mixer.timeScale = 0;\n    }\n  };\n\n  this.setWireframe = function (wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  };\n\n  this.setSkin = function (index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n    }\n  };\n\n  this.setWeapon = function (index) {\n    for (let i = 0; i < this.weapons.length; i++) this.weapons[i].visible = false;\n\n    var activeWeapon = this.weapons[index];\n\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      scope.syncWeaponAnimation();\n    }\n  };\n\n  this.setAnimation = function (clipName) {\n    if (this.meshBody) {\n      if (this.meshBody.activeAction) {\n        this.meshBody.activeAction.stop();\n        this.meshBody.activeAction = null;\n      }\n\n      var action = this.mixer.clipAction(clipName, this.meshBody);\n\n      if (action) {\n        this.meshBody.activeAction = action.play();\n      }\n    }\n\n    scope.activeClipName = clipName;\n    scope.syncWeaponAnimation();\n  };\n\n  this.syncWeaponAnimation = function () {\n    var clipName = scope.activeClipName;\n\n    if (scope.meshWeapon) {\n      if (this.meshWeapon.activeAction) {\n        this.meshWeapon.activeAction.stop();\n        this.meshWeapon.activeAction = null;\n      }\n\n      var action = this.mixer.clipAction(clipName, this.meshWeapon);\n\n      if (action) {\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n      }\n    }\n  };\n\n  this.update = function (delta) {\n    if (this.mixer) this.mixer.update(delta);\n  };\n\n  function loadTextures(baseUrl, textureUrls) {\n    var textureLoader = new TextureLoader();\n    var textures = [];\n\n    for (let i = 0; i < textureUrls.length; i++) {\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n      textures[i].mapping = UVMapping;\n      textures[i].name = textureUrls[i];\n      textures[i].encoding = sRGBEncoding;\n    }\n\n    return textures;\n  }\n\n  function createPart(geometry, skinMap) {\n    var materialWireframe = new MeshLambertMaterial({\n      color: 0xffaa00,\n      wireframe: true,\n      morphTargets: true,\n      morphNormals: true\n    });\n    var materialTexture = new MeshLambertMaterial({\n      color: 0xffffff,\n      wireframe: false,\n      map: skinMap,\n      morphTargets: true,\n      morphNormals: true\n    }); //\n\n    var mesh = new Mesh(geometry, materialTexture);\n    mesh.rotation.y = -Math.PI / 2;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true; //\n\n    mesh.materialTexture = materialTexture;\n    mesh.materialWireframe = materialWireframe;\n    return mesh;\n  }\n\n  function checkLoadingComplete() {\n    scope.loadCounter -= 1;\n    if (scope.loadCounter === 0) scope.onLoadComplete();\n  }\n};\n\nexport { MD2Character };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}